{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ecdabf4db5d6bc876201.hot-update.js","sources":["webpack:///./redux/match/matchReducer.js","webpack:///./utils/EstimateBetValue.js"],"sourcesContent":["import _ from 'lodash';\r\nimport EstimateBetValue from '../../utils/EstimateBetValue';\r\n\r\nconst initialState = {\r\n  tokens: { toBet: [], wallet: [] },\r\n  prices: {},\r\n  betValue: 0,\r\n  pickedTeam: {},\r\n  errorModal: { isOpen: false, head: '', reasons: [] },\r\n  confirmBetModal: { isOpen: false }\r\n};\r\n\r\nconst matchReducer = (state = initialState, action) => {\r\n  let newState = _.cloneDeep(state);\r\n\r\n  switch (action.type) {\r\n    case 'ADD_TOKENS': {\r\n      const tokens = action.tokens.map(token => {\r\n        return {\r\n          ...token,\r\n          position: 'balance-box',\r\n          initialBalance: token.balance\r\n        };\r\n      });\r\n\r\n      newState.tokens.wallet = tokens;\r\n      break;\r\n    }\r\n\r\n    case 'CHANGE_POS': {\r\n      if (action.token.position === 'balance-box') {\r\n        action.token.position = 'betting-box';\r\n        newState.tokens.toBet.push(action.token);\r\n        newState.tokens.wallet = newState.tokens.wallet.filter(\r\n          curr => curr.symbol != action.token.symbol\r\n        );\r\n      } else {\r\n        action.token.position = 'balance-box';\r\n        action.token.balance = action.token.initialBalance;\r\n        newState.tokens.wallet.push(action.token);\r\n        newState.tokens.toBet = newState.tokens.toBet.filter(\r\n          curr => curr.symbol != action.token.symbol\r\n        );\r\n      }\r\n\r\n      newState.betValue = EstimateBetValue(\r\n        newState.tokens.toBet,\r\n        newState.prices,\r\n        false\r\n      );\r\n\r\n      break;\r\n    }\r\n\r\n    case 'UPDATE_PRICES': {\r\n      newState.prices = action.prices;\r\n      break;\r\n    }\r\n\r\n    case 'UPDATE_ESTIMATE_BET': {\r\n      newState.betValue = action.sum;\r\n      break;\r\n    }\r\n\r\n    case 'PICK_TEAM': {\r\n      newState.pickedTeam = action.team;\r\n      break;\r\n    }\r\n\r\n    case 'TOGGLE_MODAL': {\r\n      newState[action.property].isOpen = !newState[action.property].isOpen;\r\n      break;\r\n    }\r\n\r\n    case 'TOGGLE_ERROR_MODAL': {\r\n      newState.errorModal.isOpen = !state.errorModal.isOpen;\r\n      newState.errorModal.head = action.head;\r\n      newState.errorModal.reasons = action.reasons;\r\n      break;\r\n    }\r\n\r\n    case 'LOG_OUT': {\r\n      newState = { ...initialState };\r\n      newState.prices = state.prices;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nexport default matchReducer;\r\n","import Big from 'big.js';\r\nimport TokenFromWei from './TokenFromWei';\r\nimport store from '../redux/store';\r\nimport { updateEstimateBet } from '../redux/match/actions';\r\n\r\nconst EstimateBetValue = (tokensToBet, prices, dispatch = true) => {\r\n  const symbols = tokensToBet.map(curr => {\r\n    return curr.symbol;\r\n  });\r\n\r\n  const values = symbols.map(curr => {\r\n    return prices[curr].USD;\r\n  });\r\n\r\n  let sum = values.reduce((sum, curr, index) => {\r\n    return (\r\n      sum +\r\n      parseFloat(\r\n        Big(TokenFromWei(tokensToBet[index]))\r\n          .mul(curr)\r\n          .toFixed(2)\r\n      )\r\n    );\r\n  }, 0);\r\n\r\n  if (sum === '00.00') sum = '0';\r\n\r\n  if (dispatch) store.dispatch(updateEstimateBet(sum));\r\n\r\n  return sum;\r\n};\r\n\r\nexport default EstimateBetValue;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AACA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAtEA;AACA;AAwEA;AACA;AACA;AACA;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAQA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}