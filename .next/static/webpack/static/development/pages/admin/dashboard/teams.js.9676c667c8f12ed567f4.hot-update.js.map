{"version":3,"file":"static/webpack/static\\development\\pages\\admin\\dashboard\\teams.js.9676c667c8f12ed567f4.hot-update.js","sources":["webpack:///./components/dashboard/teams/TeamForm.js","webpack:///./utils/api/AddTeam.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button, Label, Icon, Message } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport Dropzone from '../shared/DropZone';\r\nimport { Router } from '../../../next-routes';\r\nimport FormMessage from '../shared/FormMessage';\r\nimport AddTeam from '../../../utils/api/AddTeam';\r\n\r\nclass TeamForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onDrop = this.onDrop.bind(this);\r\n    this.handleAddTeam = this.handleAddTeam.bind(this);\r\n    this.emptyInputs = {\r\n      displayName: '',\r\n      logo: ''\r\n    };\r\n\r\n    this.noErrors = {\r\n      displayName: false,\r\n      logo: false\r\n    };\r\n\r\n    this.state = {\r\n      formInputs: this.emptyInputs,\r\n      formError: this.noErrors,\r\n      formMessage: ''\r\n    };\r\n  }\r\n\r\n  onDrop(accepted, rejected) {\r\n    this.clearFormErrors();\r\n    const [file] = accepted;\r\n    this.setState({ formInputs: { ...this.state.formInputs, logo: file } });\r\n  }\r\n\r\n  async handleAddTeam() {\r\n    const displayNameError = !this.state.formInputs.displayName;\r\n    const logoError = !this.state.formInputs.logo;\r\n\r\n    this.setState({\r\n      formError: { displayName: displayNameError, logo: logoError }\r\n    });\r\n\r\n    if (displayNameError || logoError) return;\r\n\r\n    const { displayName, logo } = this.state.formInputs;\r\n\r\n    const response = await AddTeam({ displayName, logo });\r\n\r\n    if (response.data.success) {\r\n      Router.pushRoute('/admin/dashboard/teams');\r\n      this.setState({\r\n        formMessage: 'success',\r\n        formInputs: this.emptyInputs,\r\n        formError: this.noErrors\r\n      });\r\n    } else this.setState({ formMessage: 'error' });\r\n  }\r\n\r\n  clearFormErrors() {\r\n    this.setState({\r\n      formError: { displayName: false, logo: false },\r\n      formMessage: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form error success>\r\n        <Form.Field required error={this.state.formError.displayName}>\r\n          <label>Display displayName</label>\r\n          <input\r\n            onChange={e => {\r\n              this.clearFormErrors();\r\n              this.setState({\r\n                formInputs: {\r\n                  ...this.state.formInputs,\r\n                  displayName: e.target.value\r\n                }\r\n              });\r\n            }}\r\n            value={this.state.formInputs.displayName}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field required error={this.state.formError.logo}>\r\n          <label>PNG Logo</label>\r\n          {this.renderDropBox(\r\n            this.state.formInputs.logo,\r\n            this.state.formError.logo\r\n          )}\r\n          <Label className=\"label-warning\">\r\n            <Icon name=\"warning circle\" />\r\n            Please upload only square logos. Preferably 200x200 px.\r\n          </Label>\r\n        </Form.Field>\r\n\r\n        <Button\r\n          icon\r\n          labelPosition=\"right\"\r\n          onClick={e => this.handleAddTeam()}\r\n          className=\"dark-button\">\r\n          <Icon name=\"plus\" />\r\n          Add\r\n        </Button>\r\n\r\n        <FormMessage message={this.state.formMessage} />\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  renderDropBox(logo, error) {\r\n    const classNameModifier = error ? 'dropdown-div-error' : '';\r\n\r\n    return (\r\n      <Dropzone\r\n        handleDelete={e => {\r\n          this.setState({\r\n            formInputs: { ...this.state.formInputs, logo: false }\r\n          });\r\n        }}\r\n        droppedImg={logo}\r\n        classNameModifier={classNameModifier}\r\n        onDrop={(accepted, rejected) => this.onDrop(accepted, rejected)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamForm;\r\n","import axios from 'axios';\r\nimport { backend } from '../../config/config';\r\n\r\nconst AddTeam = async team => {\r\n  const data = new FormData();\r\n  data.append('logo', team.logo);\r\n  data.append('displayName', team.displayName);\r\n\r\n  const response = await axios({\r\n    method: 'post',\r\n    url: '/backend/new_team',\r\n    data: data,\r\n    config: { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport default AddTeam;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAfA;AAoBA;AACA;;;AACA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AADA;AACA;AAGA;;;;;;;;AAEA;;AAEA;AAAA;AAAA;AAAA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AAVA;AAaA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAKA;AAAA;AAIA;AAAA;AAGA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAWA;;;;AAvHA;AACA;AAyHA;;;;;;;;;;;;;;;;;;;;;;;;;ACnIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AANA;AAKA;AALA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;;;;;;;A","sourceRoot":""}