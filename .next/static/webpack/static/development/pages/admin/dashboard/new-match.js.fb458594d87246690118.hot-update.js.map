{"version":3,"file":"static/webpack/static\\development\\pages\\admin\\dashboard\\new-match.js.fb458594d87246690118.hot-update.js","sources":["webpack:///./components/dashboard/new-match/ApiMatchesList.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Dimmer, Loader, Dropdown } from 'semantic-ui-react';\r\nimport '../../../static/css/dashboard/dropzone.css';\r\nimport _ from 'lodash';\r\nimport GetMatches from '../../../utils/api/GetMatches';\r\nimport ApiMatchesItem from './ApiMatchesItem';\r\n\r\nclass ApiMatchesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.timeOptions = [\r\n      { text: 'Next 24 hours', value: 24 },\r\n      { text: 'Next 2 days', value: 48 },\r\n      { text: 'Next 3 days', value: 72 },\r\n      { text: 'Everything', value: 9999999 }\r\n    ];\r\n\r\n    this.leagueOptions = [{ text: 'All leagues', value: 0 }];\r\n\r\n    this.defaultTimeSpan = 48;\r\n    this.defaultLeague = 0;\r\n    this.state = {\r\n      allMatches: '',\r\n      filters: { hours: this.defaultTimeSpan, league: this.defaultLeague }\r\n    };\r\n\r\n    this.handleChangeTimeSpan = this.handleChangeTimeSpan.bind(this);\r\n    this.handleChangeLeague = this.handleChangeLeague.bind(this);\r\n  }\r\n\r\n  handleChangeTimeSpan(e, { value }) {\r\n    this.setState({ filters: { ...this.state.filters, hours: value } });\r\n  }\r\n\r\n  handleChangeLeague(e, { value }) {\r\n    this.setState({ filters: { ...this.state.filters, league: value } });\r\n  }\r\n\r\n  hoursFilter(matches = this.state.allMatches) {\r\n    const now = new Date();\r\n    const { hours } = this.state.filters;\r\n\r\n    const filteredMatches = matches.filter(\r\n      curr =>\r\n        (curr.startTime.getTime() - now.getTime()) / 3600000 <= hours\r\n          ? true\r\n          : false\r\n    );\r\n\r\n    return filteredMatches;\r\n  }\r\n\r\n  leaguesFilter(matches = this.state.allMatches) {\r\n    const { league } = this.state.filters;\r\n    if (league === 0) return matches;\r\n    const filteredMatches = matches.filter(\r\n      match => match.league.pandaID === league\r\n    );\r\n\r\n    return filteredMatches;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const api_call = await axios.get('/api/pandascore/upcoming_matches');\r\n    const api_response = await GetMatches();\r\n    const matchesInDb = api_response.data;\r\n\r\n    // Array of matches.\r\n    const data = api_call.data.data;\r\n\r\n    // Filter to debug and remove already added matches\r\n    const debugedData = data.filter(match => {\r\n      if (!match.id) return false;\r\n      if (!match.begin_at) return false;\r\n      if (match.opponents.length !== 2) return false;\r\n      if (!match.league) return false;\r\n      if (matchesInDb.some(curr => curr.pandaID == match.id)) return false;\r\n\r\n      return true;\r\n    });\r\n\r\n    // Object refactoring\r\n    const matches = debugedData.map(match => {\r\n      if (!this.leagueOptions.some(curr => curr.value === match.league.id))\r\n        this.leagueOptions.push({\r\n          text: match.league.name,\r\n          value: match.league.id\r\n        });\r\n      return {\r\n        pandaID: match.id,\r\n        startTime: new Date(match.begin_at),\r\n        teams: [\r\n          {\r\n            pandaID: match.opponents[0].opponent.id,\r\n            displayName: match.opponents[0].opponent.name,\r\n            logo: match.opponents[0].opponent.image_url\r\n          },\r\n          {\r\n            pandaID: match.opponents[1].opponent.id,\r\n            displayName: match.opponents[1].opponent.name,\r\n            logo: match.opponents[1].opponent.image_url\r\n          }\r\n        ],\r\n        league: {\r\n          pandaID: match.league.id,\r\n          displayName: match.league.name,\r\n          logo: match.league.image_url\r\n        }\r\n      };\r\n    });\r\n\r\n    this.setState({ allMatches: matches });\r\n    // this.setState({ filters: { ...this.state.filters } });\r\n  }\r\n\r\n  renderItems() {\r\n    // Apply filters provided by user\r\n    let matches = this.hoursFilter();\r\n    matches = this.leaguesFilter(matches);\r\n\r\n    const markup = matches.map(match => {\r\n      return <ApiMatchesItem key={match.pandaID} match={match} />;\r\n    });\r\n\r\n    return markup;\r\n  }\r\n\r\n  render() {\r\n    const filters = (\r\n      <div>\r\n        <Dropdown\r\n          className=\"margin-right-1em\"\r\n          defaultValue={this.timeOptions[1].value}\r\n          options={this.timeOptions}\r\n          selection\r\n          onChange={this.handleChangeTimeSpan}\r\n          scrolling={false}\r\n        />\r\n\r\n        <Dropdown\r\n          className=\"margin-right-1em\"\r\n          defaultValue={this.leagueOptions[0].value}\r\n          options={this.leagueOptions}\r\n          selection\r\n          onChange={this.handleChangeLeague}\r\n          scrolling={false}\r\n        />\r\n      </div>\r\n    );\r\n    if (this.state.allMatches) {\r\n      return (\r\n        <div>\r\n          {filters}\r\n          <Table selectable verticalAlign=\"middle\" textAlign=\"center\" inverted>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>Team 1</Table.HeaderCell>\r\n                <Table.HeaderCell>Team 2</Table.HeaderCell>\r\n                <Table.HeaderCell>League</Table.HeaderCell>\r\n                <Table.HeaderCell>Start date</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {this.renderItems(this.state.allMatches, this.state.filters)}\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Dimmer active inverted size=\"large\">\r\n          <Loader>Loading data from API</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ApiMatchesList;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AApBA;AAqBA;AACA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAMA;AACA;;;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;;;;;;;;;;;;;;;AAGA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAfA;AAqBA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;;;;AA1KA;AACA;AA4KA;;;;A","sourceRoot":""}