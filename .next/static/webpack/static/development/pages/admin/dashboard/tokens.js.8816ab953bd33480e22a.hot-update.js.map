{"version":3,"file":"static/webpack/static\\development\\pages\\admin\\dashboard\\tokens.js.8816ab953bd33480e22a.hot-update.js","sources":["webpack:///./components/dashboard/tokens/TokenForm.js","webpack:///./utils/api/AddToken.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button, Label, Icon, Message } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport Dropzone from '../shared/DropZone';\r\nimport { Router } from '../../../next-routes';\r\nimport FormMessage from '../shared/FormMessage';\r\nimport AddToken from '../../../utils/api/AddToken';\r\n\r\nclass TokenForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onDrop = this.onDrop.bind(this);\r\n    this.handleAddTeam = this.handleAddTeam.bind(this);\r\n    this.emptyInputs = {\r\n      displayName: '',\r\n      address: '',\r\n      symbol: '',\r\n      decimals: '',\r\n      logo: ''\r\n    };\r\n\r\n    this.noErrors = {\r\n      displayName: false,\r\n      address: false,\r\n      symbol: false,\r\n      decimals: false,\r\n      logo: false\r\n    };\r\n\r\n    this.state = {\r\n      formInputs: this.emptyInputs,\r\n      formError: this.noErrors,\r\n      formMessage: ''\r\n    };\r\n  }\r\n\r\n  onDrop(accepted, rejected) {\r\n    this.clearFormErrors();\r\n    const [file] = accepted;\r\n    this.setState({ formInputs: { ...this.state.formInputs, logo: file } });\r\n  }\r\n\r\n  async handleAddTeam() {\r\n    const {\r\n      displayName,\r\n      address,\r\n      symbol,\r\n      decimals,\r\n      logo\r\n    } = this.state.formInputs;\r\n\r\n    console.log(!decimals || isNaN(decimals));\r\n\r\n    const displayNameNotValid = !displayName;\r\n    const addressNotValid =\r\n      !address || address.length !== 42 || !address.startsWith('0x');\r\n    const symbolNotValid = !symbol;\r\n    const decimalsNotValid = !decimals || isNaN(decimals);\r\n    const logoNotValid = !logo;\r\n\r\n    this.setState({\r\n      formError: {\r\n        displayName: displayNameNotValid,\r\n        address: addressNotValid,\r\n        symbol: symbolNotValid,\r\n        decimals: decimalsNotValid,\r\n        logo: logoNotValid\r\n      }\r\n    });\r\n\r\n    if (\r\n      displayNameNotValid ||\r\n      addressNotValid ||\r\n      symbolNotValid ||\r\n      logoNotValid ||\r\n      decimalsNotValid\r\n    )\r\n      return;\r\n\r\n    const data = new FormData();\r\n\r\n    data.append('displayName', this.state.formInputs.displayName);\r\n    data.append('address', this.state.formInputs.address);\r\n    data.append('symbol', this.state.formInputs.symbol);\r\n    data.append('decimals', this.state.formInputs.decimals);\r\n    data.append('logo', this.state.formInputs.logo);\r\n\r\n    const response = await axios({\r\n      method: 'post',\r\n      url: '/backend/new_token',\r\n      data: data,\r\n      config: { headers: { 'Content-Type': 'multipart/form-data' } }\r\n    });\r\n\r\n    if (response.data.success) {\r\n      Router.pushRoute('/admin/dashboard/tokens');\r\n      this.setState({\r\n        formMessage: 'success',\r\n        formInputs: this.emptyInputs,\r\n        formErrors: this.noErrors\r\n      });\r\n    } else this.setState({ formMessage: 'error' });\r\n  }\r\n\r\n  clearFormErrors() {\r\n    this.setState({\r\n      formError: {\r\n        displayName: false,\r\n        address: false,\r\n        symbol: false,\r\n        logo: false\r\n      },\r\n      formMessage: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form error success>\r\n        <Form.Field required error={this.state.formError.displayName}>\r\n          <label>Display name</label>\r\n          <input\r\n            onChange={e => {\r\n              this.clearFormErrors();\r\n              this.setState({\r\n                formInputs: {\r\n                  ...this.state.formInputs,\r\n                  displayName: e.target.value\r\n                }\r\n              });\r\n            }}\r\n            value={this.state.formInputs.displayName}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field required error={this.state.formError.symbol}>\r\n          <label>Symbol</label>\r\n          <input\r\n            onChange={e => {\r\n              this.clearFormErrors();\r\n              this.setState({\r\n                formInputs: {\r\n                  ...this.state.formInputs,\r\n                  symbol: e.target.value\r\n                }\r\n              });\r\n            }}\r\n            value={this.state.formInputs.symbol}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field required error={this.state.formError.address}>\r\n          <label>Address</label>\r\n          <input\r\n            onChange={e => {\r\n              this.clearFormErrors();\r\n              this.setState({\r\n                formInputs: {\r\n                  ...this.state.formInputs,\r\n                  address: e.target.value\r\n                }\r\n              });\r\n            }}\r\n            value={this.state.formInputs.address}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field required error={this.state.formError.decimals}>\r\n          <label>Decimals</label>\r\n          <input\r\n            onChange={e => {\r\n              this.clearFormErrors();\r\n              this.setState({\r\n                formInputs: {\r\n                  ...this.state.formInputs,\r\n                  decimals: e.target.value\r\n                }\r\n              });\r\n            }}\r\n            value={this.state.formInputs.decimals}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field required error={this.state.formError.logo}>\r\n          <label>PNG Logo</label>\r\n          {this.renderDropBox(\r\n            this.state.formInputs.logo,\r\n            this.state.formError.logo\r\n          )}\r\n          <Label className=\"label-warning\">\r\n            <Icon name=\"warning circle\" />\r\n            Please upload only square logos. Preferably 200x200 px.\r\n          </Label>\r\n        </Form.Field>\r\n\r\n        <Button\r\n          icon\r\n          labelPosition=\"right\"\r\n          onClick={e => this.handleAddTeam()}\r\n          className=\"dark-button\">\r\n          <Icon name=\"plus\" />\r\n          Add\r\n        </Button>\r\n\r\n        <FormMessage message={this.state.formMessage} />\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  renderDropBox(logo, error) {\r\n    const classNameModifier = error ? 'dropdown-div-error' : '';\r\n\r\n    return (\r\n      <Dropzone\r\n        handleDelete={e => {\r\n          this.setState({\r\n            formInputs: { ...this.state.formInputs, logo: false }\r\n          });\r\n        }}\r\n        droppedImg={logo}\r\n        classNameModifier={classNameModifier}\r\n        onDrop={(accepted, rejected) => this.onDrop(accepted, rejected)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TokenForm;\r\n","import axios from 'axios';\r\nimport { backend } from '../../config/config';\r\n\r\nconst addToken = async token => {\r\n  const data = new FormData();\r\n  data.append('displayName', token.displayName);\r\n  data.append('symbol', token.symbol);\r\n  data.append('address', token.address);\r\n  data.append('decimals', token.decimals);\r\n  data.append('logo', token.logo);\r\n\r\n  const response = await axios({\r\n    method: 'post',\r\n    url: '/backend/new_token',\r\n    data: data,\r\n    config: { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport default addToken;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAHA;AArBA;AA0BA;AACA;;;AACA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AASA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AAUA;;;;;;;;AAQA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AASA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AAVA;AAcA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AAVA;AAcA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AAVA;AAcA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AAVA;AAcA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAKA;AAAA;AAIA;AAAA;AAGA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAWA;;;;AAzNA;AACA;AA2NA;;;;;;;;;;;;;;;;;;;;;;;;;ACrOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AATA;AAQA;AARA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}