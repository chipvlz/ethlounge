{"version":3,"file":"static/webpack/static\\development\\pages\\admin\\dashboard\\tokens.js.9676c667c8f12ed567f4.hot-update.js","sources":["webpack:///./components/dashboard/tokens/TokenListItem.js","webpack:///./utils/api/AddToken.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Image, Icon, Popup, Button } from 'semantic-ui-react';\r\nimport { backend } from '../../../config/config';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Router } from '../../../next-routes';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nclass TokenListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.lastMode;\r\n\r\n    this.id = props.item._id;\r\n    this.displayName = props.item.displayName;\r\n    this.symbol = props.item.symbol;\r\n    this.address = props.item.address;\r\n    this.decimals = props.item.decimals;\r\n\r\n    this.tokenNameElement;\r\n    this.tokenSymbolElement;\r\n    this.tokenDecimalsElement;\r\n\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.controlInput = this.controlInput.bind(this);\r\n    this.state = {\r\n      editMode: false,\r\n      newLogo: '',\r\n      newName: props.name,\r\n      logoURL: `${backend}/img/tokens/${this.symbol}.png`\r\n    };\r\n  }\r\n\r\n  handleEdit(event) {\r\n    this.setState({\r\n      editMode: true,\r\n      newDisplayName: this.displayName,\r\n      newSymbol: this.symbol,\r\n      newAddress: this.address,\r\n      newDecimals: this.decimals,\r\n      newLogo: ''\r\n    });\r\n  }\r\n\r\n  async handleDelete() {\r\n    await axios({\r\n      method: 'post',\r\n      url: '/backend/delete_token',\r\n      data: { id: this.id }\r\n    });\r\n\r\n    Router.replaceRoute('/admin/dashboard/tokens');\r\n  }\r\n\r\n  hasSomethingChanged() {\r\n    const { newDisplayName, newSymbol, newDecimals } = this.state;\r\n    if (this.displayName !== newDisplayName) return true;\r\n    if (this.symbol !== newSymbol) return true;\r\n    if (this.decimals !== newDecimals) return true;\r\n    if (this.state.newLogo) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  async handleUpdate() {\r\n    if (this.hasSomethingChanged()) {\r\n      const data = new FormData();\r\n      data.append('id', this.id);\r\n      data.append('displayName', this.state.newDisplayName);\r\n      data.append('symbol', this.state.newSymbol);\r\n      data.append('address', this.state.newAddress);\r\n      data.append('decimals', this.state.newDecimals);\r\n      data.append('logo', this.state.newLogo);\r\n\r\n      await axios({\r\n        method: 'post',\r\n        url: '/backend/update_token',\r\n        data: data,\r\n        config: { headers: { 'Content-Type': 'multipart/form-data' } }\r\n      });\r\n    }\r\n    const logo = this.state.newLogo.preview || this.state.logoURL;\r\n    this.setState({ editMode: false, logoURL: logo });\r\n    Router.replaceRoute('/admin/dashboard/tokens');\r\n  }\r\n\r\n  undo() {\r\n    this.setState({ editMode: false });\r\n    this.tokenNameElement.textContent = this.displayName;\r\n    this.tokenSymbolElement.textContent = this.symbol;\r\n    this.tokenDecimalsElement = this.decimals;\r\n  }\r\n\r\n  onDrop(accepted, rejected) {\r\n    const [file] = accepted;\r\n    this.setState({ newLogo: file });\r\n  }\r\n\r\n  controlInput(event) {\r\n    switch (event.target) {\r\n      case this.tokenNameElement: {\r\n        this.setState({\r\n          newDisplayName: event.target.textContent\r\n        });\r\n        return;\r\n      }\r\n      case this.tokenSymbolElement: {\r\n        this.setState({\r\n          newSymbol: event.target.textContent\r\n        });\r\n        return;\r\n      }\r\n      case this.tokenAddressElement: {\r\n        this.setState({\r\n          newAddress: event.target.textContent\r\n        });\r\n        return;\r\n      }\r\n      case this.tokenDecimalsElement: {\r\n        this.setState({\r\n          newDecimals: event.target.textContent\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table.Row key={this.id} active={this.state.editMode}>\r\n        <Table.Cell>{this.id}</Table.Cell>\r\n        <Table.Cell>\r\n          <div\r\n            onInput={e => this.controlInput(e)}\r\n            spellCheck=\"false\"\r\n            ref={div => (this.tokenNameElement = div)}\r\n            suppressContentEditableWarning={true}\r\n            contentEditable={`${this.state.editMode}`}>\r\n            {`${this.displayName}`}\r\n          </div>\r\n        </Table.Cell>\r\n\r\n        <Table.Cell>\r\n          <div\r\n            onInput={e => this.controlInput(e)}\r\n            spellCheck=\"false\"\r\n            ref={div => (this.tokenSymbolElement = div)}\r\n            suppressContentEditableWarning={true}\r\n            contentEditable={`${this.state.editMode}`}>\r\n            {`${this.symbol}`}\r\n          </div>\r\n        </Table.Cell>\r\n\r\n        <Table.Cell>\r\n          <div>{`${this.address}`}</div>\r\n        </Table.Cell>\r\n\r\n        <Table.Cell>\r\n          <div\r\n            onInput={e => this.controlInput(e)}\r\n            spellCheck=\"false\"\r\n            ref={div => (this.tokenDecimalsElement = div)}\r\n            suppressContentEditableWarning={true}\r\n            contentEditable={`${this.state.editMode}`}>\r\n            {`${this.decimals}`}\r\n          </div>\r\n        </Table.Cell>\r\n\r\n        <Table.Cell>{this.renderImage(this.state.newLogo)}</Table.Cell>\r\n\r\n        <Table.Cell>{this.renderIcons(this.state.editMode)}</Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n\r\n  renderImage(newLogo) {\r\n    if (this.state.editMode) {\r\n      if (this.state.newLogo) {\r\n        return (\r\n          <Dropzone\r\n            style={{}}\r\n            accept=\"image/png\"\r\n            onDrop={(accepted, rejected) => this.onDrop(accepted, rejected)}>\r\n            <Image src={newLogo.preview} size=\"mini\" verticalAlign=\"middle\" />\r\n          </Dropzone>\r\n        );\r\n      } else {\r\n        return (\r\n          <Dropzone\r\n            style={{}}\r\n            accept=\"image/png\"\r\n            onDrop={(accepted, rejected) => this.onDrop(accepted, rejected)}>\r\n            <Image\r\n              src={this.state.logoURL}\r\n              size=\"mini\"\r\n              verticalAlign=\"middle\"\r\n            />\r\n          </Dropzone>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <Image src={this.state.logoURL} size=\"mini\" verticalAlign=\"middle\" />\r\n    );\r\n  }\r\n\r\n  renderIcons(editMode) {\r\n    if (editMode) {\r\n      return (\r\n        <div>\r\n          <Popup\r\n            on=\"click\"\r\n            trigger={<Icon className=\"table-icon\" circular name=\"check\" />}>\r\n            Are you sure?\r\n            <br />\r\n            <Button\r\n              onClick={e => this.handleUpdate()}\r\n              color=\"green\"\r\n              size=\"mini\"\r\n              fluid\r\n              compact>\r\n              UPDATE\r\n            </Button>\r\n          </Popup>\r\n          <Icon\r\n            className=\"table-icon\"\r\n            circular\r\n            name=\"chevron right\"\r\n            onClick={e => this.undo()}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Icon\r\n            className=\"table-icon\"\r\n            circular\r\n            name=\"edit\"\r\n            onClick={e => this.handleEdit(e)}\r\n          />\r\n          <Popup\r\n            on=\"click\"\r\n            trigger={<Icon className=\"table-icon\" circular name=\"delete\" />}>\r\n            Are you sure?\r\n            <br />\r\n            <Button\r\n              color=\"red\"\r\n              size=\"mini\"\r\n              onClick={e => this.handleDelete()}\r\n              fluid\r\n              compact>\r\n              DELETE\r\n            </Button>\r\n          </Popup>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default TokenListItem;\r\n","import axios from 'axios';\r\nimport { backend } from '../../config/config';\r\n\r\nconst AddToken = async token => {\r\n  const data = new FormData();\r\n  data.append('displayName', token.displayName);\r\n  data.append('symbol', token.symbol);\r\n  data.append('address', token.address);\r\n  data.append('decimals', token.decimals);\r\n  data.append('logo', token.logo);\r\n\r\n  const response = await axios({\r\n    method: 'post',\r\n    url: '/backend/new_token',\r\n    data: data,\r\n    config: { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport default AddToken;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAlBA;AAwBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AACA;;AAKA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;AAGA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAxBA;AA0BA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAYA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAgBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAeA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAQA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAWA;AACA;;;;AA5PA;AACA;AA8PA;;;;;;;;;;;;;;;;;;;;;;;;;ACvQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AATA;AAQA;AARA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}