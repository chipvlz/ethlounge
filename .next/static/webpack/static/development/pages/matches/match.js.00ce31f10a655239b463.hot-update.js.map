{"version":3,"file":"static/webpack/static\\development\\pages\\matches\\match.js.00ce31f10a655239b463.hot-update.js","sources":["webpack:///./components/Token.js","webpack:///./components/match/BettingBox.js","webpack:///./components/match/BettingBoxItem.js"],"sourcesContent":["import React from 'react';\r\nimport { DictionarrySymbol } from '../helpers/SupportedTokens';\r\nimport { Label, Image } from 'semantic-ui-react';\r\nimport TokenFromWei from '../helpers/TokenFromWei';\r\n\r\nexport default (props) => {\r\n    console.log('I try to TOKEN: ', this.props.token)\r\n    return (\r\n        <Label as='a' key={props.token.address} className=\"token-label\">\r\n            <Image avatar spaced='right' src={`/static/img/tokens/${DictionarrySymbol.get(props.token.address)}.png`} />\r\n            {TokenFromWei(props.token, 'symbol', true)}\r\n        </Label>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport BettingBoxItem from './BettingBoxItem';\r\nimport RangeSlider from '../RangeSlider'\r\n\r\nclass BettingBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderTokens(tokens) { \r\n        let bettingBoxes = [];\r\n        const numberOfBoxes = 4;\r\n        \r\n\r\n        for (let i = 0; i < numberOfBoxes; i++) {\r\n            let pos = `betting-box-${i}`;       \r\n            let tokenProp;\r\n            let rangeSlider = '';\r\n\r\n            for (let token of tokens) {\r\n                if (token.position === pos) {\r\n                    tokenProp = token;\r\n                    rangeSlider = <RangeSlider prices={this.props.prices} token={token} toBet={tokens} handleRange={this.props.handleRange}></RangeSlider>\r\n                }\r\n            }\r\n            \r\n            bettingBoxes.push(\r\n                    <Grid.Row key={pos}>\r\n                        <Grid.Column width={7}>\r\n                            <BettingBoxItem pos={pos} droppedItem={tokenProp} handleDelete={this.props.handleDelete}/>                           \r\n                        </Grid.Column>\r\n                        <Grid.Column width={9} verticalAlign=\"middle\">\r\n                            {rangeSlider}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n            );\r\n        }\r\n\r\n        return bettingBoxes;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"betting-box\">\r\n                <Grid columns='equal'>\r\n                    {this.renderTokens(this.props.tokens)}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BettingBox;","import React, { Component } from 'react';\r\nimport { Segment, Icon } from 'semantic-ui-react';\r\nimport { DropTarget } from 'react-dnd';\r\nimport Token from '../Token';\r\n\r\nconst itemSource = {\r\n    drop(props) {\r\n        return {pos: props.pos};\r\n    },\r\n}\r\n\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        token: monitor.getItem(),\r\n        canDrop: monitor.canDrop()\r\n    }\r\n}\r\n\r\nclass BettingBoxToken extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.props.handleDelete(this.props.droppedToken);\r\n    }\r\n\r\n    render() {\r\n        const { canDrop, connectDropTarget, isOver, token, pos } = this.props;\r\n        \r\n        let classNameModifier = '';\r\n\r\n        if (isOver && canDrop) {\r\n            classNameModifier += ' betting-box-token-hovered';\r\n        }\r\n\r\n        if (!isOver && canDrop) {\r\n            classNameModifier += ' betting-box-token-candrop';\r\n        }\r\n\r\n        let Token;\r\n\r\n        if (this.props.droppedToken) {\r\n            TokenToRender = <Token token={this.props.droppedToken} className=\"token-dropped\"></Token>\r\n\r\n            classNameModifier = ' betting-box-token-dropped'\r\n\r\n            return (            \r\n                <div>\r\n                    <Segment onClick={this.handleClick} textAlign='center' className={'betting-box-token' + classNameModifier}>\r\n                        {TokenToRender}\r\n                    </Segment>\r\n                </div>\r\n            );\r\n        } \r\n            \r\n\r\n            return connectDropTarget(            \r\n                <div>\r\n                    <Segment size={\"big\"} textAlign='center' className={'betting-box-token' + classNameModifier}>\r\n                    </Segment>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nexport default DropTarget('token', itemSource, collect)(BettingBoxToken);"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAKA;;;;AA9CA;AACA;AAgDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAKA;;;;AAhDA;AACA;AAkDA;;;;A","sourceRoot":""}