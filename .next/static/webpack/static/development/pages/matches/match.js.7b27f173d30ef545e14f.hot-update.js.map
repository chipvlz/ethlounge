{"version":3,"file":"static/webpack/static\\development\\pages\\matches\\match.js.7b27f173d30ef545e14f.hot-update.js","sources":["webpack:///./pages/matches/match.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Button, List, Label } from 'semantic-ui-react';\r\nimport BettingBox from '../../components/BettingBox';\r\nimport TokenBox from '../../components/TokenBox';\r\nimport { changeItemPosition, changeItemAmount, updatePrices } from '../../redux/actions/actions';\r\nimport CryptoPrices from '../../components/helpers/CryptoPrices';\r\nimport store from '../../redux/store';\r\n\r\nclass Match extends Component {\r\n\r\n    static async getInitialProps(props) {\r\n        const matchID = props.query.id;\r\n        \r\n        // This information will be pulled from database //\r\n        const teams = [{\r\n            name: 'Fnatic',\r\n            slug: 'fnatic',\r\n            imgUrl: `../../img/teams/fnatic.png`\r\n        }, {\r\n            name: 'Gambit',\r\n            slug: 'gambit',\r\n            imgUrl: `../../img/teams/gambit.png`\r\n        }];\r\n\r\n        // This information will be pulled from Ethereum blockchain (downloaded on server)\r\n        const odds = new Map();\r\n        odds.set(teams[0].slug, 1,2);\r\n        odds.set(teams[1].slug, 5,8)\r\n\r\n        return {matchID, teams};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const prices = await CryptoPrices();\r\n        store.dispatch(updatePrices(prices))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (                \r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={8}>\r\n                                FNATIC vs GAMBIT\r\n                            </Grid.Column>\r\n                            <Grid.Column width={8}>\r\n                                <h2>Place bet</h2>\r\n                                <BettingBox prices={this.props.prices} items={this.props.items.toBet} handleRange={this.props.handleRange} handleDelete={this.props.changePosition}/>\r\n                                <div className=\"bet-container\">\r\n                                    <Button className=\"button-bet\" size=\"large\" color=\"black\" >\r\n                                        Place bet\r\n                                        {/* <Icon name='fire' /> */}\r\n                                    </Button> \r\n                                    <List relaxed floated=\"right\" className=\"info-bet\">\r\n                                        <List.Item><Label color='orange' horizontal>ESTIMATED BET VALUE</Label> {this.props.betValue}$</List.Item>\r\n                                        <List.Item><Label color='orange' horizontal>ESTIMATED REWARD</Label> 2442$</List.Item>\r\n                                    \r\n                                    </List>\r\n                                </div>    \r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                        <Grid.Row>\r\n                            <Grid.Column width={8}>\r\n                                LAST BETS:\r\n                            </Grid.Column>\r\n                            <Grid.Column width={8}>\r\n                                <h2>Balances</h2>\r\n                                <TokenBox signedIn={this.props.signedIn} items={this.props.items.wallet} handleDrop={this.props.changePosition}/>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePosition: (item, pos) => {\r\n            dispatch(changeItemPosition(item, pos));\r\n        },\r\n\r\n        handleRange: (item) => {\r\n            dispatch(changeItemAmount(item))\r\n        }\r\n    }\r\n}\r\n  \r\n\r\nconst mapStateToProps = (state) => {\r\n        console.log('mapStateToProps', state);\r\n        console.log('prices is ', state.prices)\r\n        return {\r\n            items: state.items,\r\n            signedIn: state.signedIn,\r\n            betValue: state.betValue,\r\n            prices: state.prices\r\n        }\r\n    \r\n  }\r\n\r\nMatch = DragDropContext(HTML5Backend)(Match);\r\n\r\nexport default Layout(connect(mapStateToProps, mapDispatchToProps)(Match));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;;AADA;AACA;AACA;;;;;;;;;;;;;;;AAGA;AAEA;AAGA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;;;;;;AAjEA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAtBA;AACA;AAqEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}