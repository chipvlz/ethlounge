{"version":3,"file":"static/webpack/static\\development\\pages\\matches\\match.js.4c086c904ebb00d40dbe.hot-update.js","sources":["webpack:///./components/match/ConfirmBetModal.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport store from '../../redux/store';\r\nimport { Modal, Grid, Image, Button, List, Icon, Header } from 'semantic-ui-react'\r\nimport { toggleModal } from '../../redux/actions';\r\nimport TokenFromWei from '../../helpers/TokenFromWei';\r\nimport EthLounge from '../../ethereum/EthLounge';\r\n\r\nclass ConfirmBetModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleConfirm = this.handleConfirm.bind(this);\r\n        this.state = {isLoading: false, isFinalModalOpen: false};\r\n    }\r\n\r\n    async handleConfirm(tokensToBet, pickedTeam, account, matchID) {\r\n        this.setState({isLoading: true});\r\n        const tokens = tokensToBet.map((curr) => curr.address);\r\n        const amounts = tokensToBet.map((curr) => curr.amount);\r\n\r\n        try {\r\n            await EthLounge.methods.placeBet(matchID, pickedTeam.slug, tokens, amounts).send({from: account});\r\n        } catch (err) {\r\n\r\n        }\r\n        \r\n        this.setState({isLoading: false});\r\n        \r\n    }\r\n\r\n    render() {\r\n        let { open, tokensToBet, pickedTeam, account, matchID } = this.props;\r\n\r\n        const tokenList = tokensToBet.map((curr) => {\r\n            return <List.Item as='p'><Icon name='right triangle' />{TokenFromWei(curr, 'symbol')}</List.Item>\r\n        });\r\n\r\n        return (\r\n                <Modal size='tiny' open={open}>\r\n                <FinalModal />\r\n                    <Modal.Header>You are about to place a bet</Modal.Header>\r\n                    <Modal.Content>\r\n                        \r\n                        <Modal.Description>\r\n                            <Grid>\r\n                                <Grid.Column width={10}>\r\n                                    <Header>Your bet:</Header>\r\n                                    <List className=\"confirm-bet-modal-ul font-dark-orange\" as='ul'>{tokenList}</List>\r\n                                    <Header>Picked Team: <span className=\"font-dark-orange\">{pickedTeam.name}</span></Header>\r\n                                    <Header>Odds: <span className=\"font-dark-orange\">{pickedTeam.odds}</span></Header>                        \r\n                                </Grid.Column>\r\n                                <Grid.Column verticalAlign=\"middle\" width={6}><Image className=\"confirm-bet-modal-img\" floated=\"right\" size='small' src={`/static/img/teams/${pickedTeam.slug}.png`} />\r\n                                </Grid.Column> \r\n                            </Grid>\r\n                                                                    \r\n                        </Modal.Description>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>                    \r\n                        <Button color=\"black\" onClick={(e) => {store.dispatch(toggleModal('confirmBetModal'))}}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button loading={this.state.isLoading} className=\"dark-orange-bg font-white\" onClick={e => this.handleConfirm(tokensToBet, pickedTeam, account, matchID)}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nclass FinalModal extends Component {\r\n  \r\n    render() { \r\n      return (\r\n        <Modal  size='tiny'>\r\n          <Modal.Header>Modal #2</Modal.Header>\r\n          <Modal.Content>\r\n            <p>That's everything!</p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            \r\n          </Modal.Actions>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default ConfirmBetModal;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAIA;AACA;;;;;;AACA;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;AAGA;AAAA;AAAA;AACA;;;;;;;;;;AAIA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAOA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA7DA;AACA;AA+DA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAUA;;;;AAdA;AACA;AAgBA;;;;A","sourceRoot":""}