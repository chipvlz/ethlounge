{"version":3,"file":"static/webpack/static\\development\\pages\\matches\\match.js.fce90464cc643df09ff6.hot-update.js","sources":["webpack:///./components/Layout/Menu.js","webpack:///./redux/actions.js","webpack:///./redux/reducers.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Menu, Image, Icon, Grid, Modal, Header } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport web3 from '../../ethereum/web3';\r\nimport Blockies from 'react-blockies';\r\nimport EthLounge from '../../ethereum/EthLounge';\r\nimport store from '../../redux/store';\r\nimport { Sleep } from '../../helpers/Sleep';\r\nimport ShortEthAddress from '../../helpers/ShortEthAddress';\r\n\r\nclass Item {\r\n    constructor(token, amount, position) {\r\n        this.address = token;\r\n        this.amount = amount;\r\n        this.initialAmount = amount;\r\n        this.position = position;\r\n    }\r\n}\r\n\r\nclass MenuExampleSizeLarge extends Component {\r\n\r\n   constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {loading: false, account: '', signedIn: false, items: {}, popupOpen: false, readyToGenerateRightMenu: false}; \r\n   }\r\n\r\n   async componentDidMount() {\r\n        // Restore session from local storage\r\n        const account = window.localStorage.getItem('eth-account', account);\r\n        const openSessionAccounts = await web3.eth.getAccounts();\r\n        \r\n        if (account && openSessionAccounts.length > 0) {\r\n            store.dispatch({ type: 'LOG_IN', account: account });\r\n            this.setState({signedIn: true, account: account})\r\n            this.getItems(account);\r\n        }\r\n        else\r\n        store.dispatch({ type: 'LOG_OUT' }); \r\n        \r\n        this.setState({readyToGenerateRightMenu: true})\r\n   }\r\n\r\n    generateRightMenu(signedIn, readyToGenerateRightMenu) {\r\n        if(readyToGenerateRightMenu) {\r\n            if (signedIn) {\r\n            const ethAddressShort = ShortEthAddress(this.state.account);           \r\n\r\n            const ethAddressStyle = {color: 'white'};\r\n\r\n            return (\r\n                <Grid>\r\n                    <Grid.Row verticalAlign='middle'>\r\n                        <Grid.Column width={4}>\r\n                            <div className='user-avatar'><Blockies seed={this.state.account} scale={6} size={14}/></div>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={1}>\r\n\r\n                        </Grid.Column>\r\n                        <Grid.Column width={10} className='user-column-right'>\r\n                            <div className='user-column-right-address'><a style={ethAddressStyle} href={`https://etherscan.io/address/${this.state.account}`} target='_blank'>{ethAddressShort}</a></div>\r\n                            <Button onClick={e => this.handleLogout(e)} loading={this.state.loading} size='mini' color='black' icon labelPosition='right' className='user-column-right-signout-button'>\r\n                                Log out\r\n                                <Icon name='power off' />\r\n                            </Button>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n                </Grid>); \r\n       } \r\n        return (<Button className='menu-right-item-button' loading={this.state.loading} onClick={e => this.handleLogin(e)} color='black'>Sign in</Button>);       \r\n        }\r\n       \r\n      return <Button loading={true} className=\"dark-orange-bg\" />;\r\n   }\r\n\r\n  async handleLogin(e) {  \r\n    this.setState({loading: true});\r\n    await Sleep(300);\r\n\r\n    let account;\r\n\r\n    [ account ] = await web3.eth.getAccounts();\r\n\r\n    if (typeof account !== 'undefined') {\r\n        this.setState({account: account});\r\n        this.getItems(account);\r\n        this.setState({signedIn: true});\r\n        store.dispatch({ type: 'LOG_IN', account: account });\r\n        window.localStorage.setItem('eth-account', account);\r\n    } else {\r\n        this.setState({popupOpen: true});\r\n    }\r\n\r\n    this.setState({loading: false});\r\n  }\r\n\r\n  async handleLogout(e) {\r\n    this.setState({loading: true});\r\n    await Sleep(600);\r\n    this.setState({signedIn: false});\r\n    store.dispatch({ type: 'LOG_OUT' });\r\n    this.setState({loading: false});\r\n    window.localStorage.removeItem('eth-account');\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Menu inverted size='large' className='menu'>\r\n        <Menu.Item>\r\n            <Image src='/static/img/logo.png' />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            <Icon name='chess knight' />       \r\n             My Bets\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            <Icon name='angle double down' />   \r\n            Deposit\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n            <Icon name='angle double up' />   \r\n            Withdraw\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n            <Icon name='question circle outline' />   \r\n            FAQ\r\n        </Menu.Item>\r\n        <Menu.Item position='right' className='menu-right-item'>\r\n            {this.generateRightMenu(this.state.signedIn, this.state.readyToGenerateRightMenu)}     \r\n        </Menu.Item>\r\n\r\n        <Modal open={this.state.popupOpen} size='small'>\r\n                <Modal.Header>You need Metamask to sign in</Modal.Header>\r\n                <Modal.Content image>\r\n                    <Image wrapped size='medium' src='/static/img/metamask.png' />\r\n                    <Modal.Description>\r\n                        <Header>What is Metamask?</Header>\r\n                        <p>MetaMask is an extension for accessing Ethereum Dapps. You can download it <a href='https://metamask.io/' target='_blank'>here</a>.</p>                        <Header>But I have Metamask...</Header>\r\n                        <p>If you have Metamask installed, please make sure to unlock your account.</p>                        \r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button className=\"dark-orange-bg font-white\" onClick={(e) => {this.setState({popupOpen: false})}}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Actions>\r\n        </Modal>        \r\n      </Menu>\r\n      \r\n\r\n    );\r\n  }\r\n\r\n\r\n  async getItems(account) {\r\n    const result = await EthLounge.methods.getBalances().call({from: account});\r\n    const tokenAddresses = result[0];\r\n    const tokenAmounts = result[1];\r\n\r\n    for (let i = 0; i < tokenAmounts.length; i++) {\r\n        if (tokenAmounts[i] !== '0') {\r\n\r\n            const newToken = new Item(tokenAddresses[i], tokenAmounts[i], 'token-box');\r\n            store.dispatch({ type: 'ADD_TOKEN', token: newToken });\r\n\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect()(MenuExampleSizeLarge);","export function addItem(token) {\r\n    return {\r\n        type: 'ADD_TOKEN',\r\n        token\r\n    }\r\n}\r\n\r\nexport function changeTokenPosition(token, pos) {\r\n    return {\r\n        type: 'CHANGE_POS',\r\n        token,\r\n        pos\r\n    }\r\n}\r\n\r\nexport function changeTokenAmount(token) {\r\n    return {\r\n        type: 'CHANGE_AMOUNT',\r\n        token\r\n    }\r\n}\r\n\r\nexport function updateEstimateBet(sum) {\r\n    return {\r\n        type: 'UPDATE_ESTIMATE_BET',\r\n        sum\r\n    }\r\n}\r\n\r\nexport function updatePrices(prices) {\r\n    return {\r\n        type: 'UPDATE_PRICES',\r\n        prices\r\n    }\r\n}\r\n\r\nexport function pickTeam(team) {\r\n    return {\r\n        type: 'PICK_TEAM',\r\n        team\r\n    }\r\n}\r\n\r\nexport function toggleModal(head = '', reasons = []) {\r\n    return {\r\n        type: 'TOGGLE_MODAL',\r\n        head: head,\r\n        reasons: reasons\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport EstimateBetValue from '../helpers/EstimateBetValue';\r\n\r\nconst initialState = {tokens: {toBet: [], wallet: []}, account: '', signedIn: false, prices: {}, betValue: 0, pickedTeam: {}, errorModal: {isOpen: false, head: '', reasons: [] }};\r\n\r\nconst matchReducer = (state = initialState, action) => {\r\n    let newState = _.cloneDeep(state);\r\n\r\n    switch(action.type) {               \r\n        case 'ADD_TOKEN': {\r\n            if (newState.tokens.wallet.some( (curr) => curr.address == action.token.address) ) return;\r\n            if (newState.tokens.toBet.some( (curr) => curr.address == action.token.address) ) return;\r\n           \r\n            newState.tokens.wallet.push(action.token);\r\n            \r\n            break;\r\n        }  \r\n\r\n        case 'CHANGE_POS': {          \r\n            if (action.token.position === 'token-box') {\r\n                action.token.position = action.pos;\r\n                newState.tokens.toBet.push(action.token);\r\n                newState.tokens.wallet = newState.tokens.wallet.filter((curr) => curr.address != action.token.address);\r\n            } else {\r\n                action.token.position = 'token-box';\r\n                action.token.amount = action.token.initialAmount;\r\n                newState.tokens.wallet.push(action.token);\r\n                newState.tokens.toBet = newState.tokens.toBet.filter((curr) => curr.address != action.token.address);           \r\n            }\r\n\r\n            newState.betValue = EstimateBetValue(newState.tokens.toBet, newState.prices, false);\r\n\r\n            break;\r\n        }\r\n\r\n        case 'LOG_OUT': {\r\n            newState = {...initialState};\r\n            newState.prices = state.prices;\r\n            console.log('Logged out! State is now: ', newState);\r\n            break;\r\n        }  \r\n\r\n        case 'LOG_IN': {\r\n            console.log('Loggin in...');\r\n            newState.account = action.account;\r\n            newState.signedIn = true;\r\n            console.log('Logging in! State is now: ', newState);\r\n            break;\r\n        }\r\n\r\n        case 'UPDATE_PRICES': {\r\n            newState.prices = action.prices;\r\n            break;\r\n        }\r\n\r\n        case 'UPDATE_ESTIMATE_BET': {\r\n            newState.betValue = action.sum;\r\n            break;\r\n        }\r\n\r\n        case 'PICK_TEAM': {\r\n            newState.pickedTeam = action.team;\r\n            break;\r\n        }\r\n\r\n        case 'TOGGLE_MODAL': {\r\n            newState.errorModal.isOpen = !state.errorModal.isOpen;\r\n            newState.errorModal.head = action.head;\r\n            newState.errorModal.reasons = action.reasons;\r\n            break;\r\n        }\r\n\r\n    }\r\n    \r\n    return newState;\r\n}\r\n\r\nexport default matchReducer;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAIA;AACA;;;;;;;;;;;;AAEA;AACA;;AACA;AACA;;AADA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;;AACA;AACA;;;AAGA;AACA;;;;AADA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAEA;;;;;AACA;AAAA;AAAA;;AACA;AACA;;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAIA;AAAA;AAKA;AAAA;AAKA;AAAA;AAGA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;AAGA;;;;;;;AACA;AAAA;AAAA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAzJA;AACA;AA8JA;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;;;;;ACjiEA;AACA;AACA;AACA;;;;A","sourceRoot":""}