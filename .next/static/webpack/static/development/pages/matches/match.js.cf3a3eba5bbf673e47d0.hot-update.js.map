{"version":3,"file":"static/webpack/static\\development\\pages\\matches\\match.js.cf3a3eba5bbf673e47d0.hot-update.js","sources":["webpack:///./components/match/BettingBox.js","webpack:///./components/match/MatchDetails.js","webpack:///./utils/constants.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, List, Label, Icon } from 'semantic-ui-react';\r\nimport {\r\n  BET_PENDING_ICON,\r\n  BET_WON_ICON,\r\n  BET_LOST_ICON,\r\n  BET_DRAW_ICON,\r\n  BET_CANCELED_ICON\r\n} from '../../utils/constants';\r\nimport _ from 'lodash';\r\n\r\nimport BettingBoxToken from './BettingBoxToken';\r\nimport RangeSlider from './RangeSlider';\r\n\r\nclass BettingBox extends Component {\r\n  NUMBER_OF_BOXES = 4;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderBetInfo(bet, odds) {\r\n    const estimatedBetValue = bet.estimatedBetValue.toFixed(2);\r\n    const estimatedReturn = (bet.estimatedBetValue * odds).toFixed(2);\r\n    let statusIcon, status, statusClassName;\r\n\r\n    switch (bet.state) {\r\n      case 'pending': {\r\n        statusIcon = BET_PENDING_ICON;\r\n        break;\r\n      }\r\n\r\n      case 'won': {\r\n        statusClassName = 'bet-info-status-won';\r\n        statusIcon = BET_WON_ICON;\r\n        break;\r\n      }\r\n\r\n      case 'lost': {\r\n        statusClassName = 'bet-info-status-lost';\r\n        statusIcon = BET_LOST_ICON;\r\n        break;\r\n      }\r\n\r\n      case 'draw': {\r\n        statusIcon = BET_DRAW_ICON;\r\n        break;\r\n      }\r\n\r\n      case 'canceled': {\r\n        statusIcon = BET_CANCELED_ICON;\r\n        break;\r\n      }\r\n    }\r\n    status = bet.state;\r\n\r\n    return (\r\n      <div>\r\n        <List className=\"bet-info\">\r\n          <List.Item>\r\n            <Label className=\"orange-label-light\" horizontal>\r\n              PICKED TEAM\r\n            </Label>\r\n            <span>\r\n              <strong>{bet.team.displayName}</strong>\r\n            </span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Label className=\"orange-label-light\" horizontal>\r\n              STATUS\r\n            </Label>\r\n            <span className={statusClassName}>\r\n              <strong>{status}</strong> <Icon name={statusIcon} />\r\n            </span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Label className=\"orange-label-light\" horizontal>\r\n              ESTIMATED BET VALUE\r\n            </Label>\r\n            <span>\r\n              <strong>{estimatedBetValue}$</strong>\r\n            </span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Label className=\"orange-label-light\" horizontal>\r\n              ESTIMATED RETURN\r\n            </Label>\r\n            <span>\r\n              <strong>{estimatedReturn}$</strong>\r\n            </span>\r\n          </List.Item>\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTokensToBet(tokens) {\r\n    const items = [];\r\n\r\n    for (let i = 0; i < this.NUMBER_OF_BOXES; i++) {\r\n      const token = tokens[i] || null;\r\n      items.push(\r\n        <Grid.Row className=\"betting-box-row\" key={i}>\r\n          <Grid.Column>\r\n            <BettingBoxToken token={token} />\r\n          </Grid.Column>\r\n          <Grid.Column verticalAlign=\"middle\">\r\n            <RangeSlider\r\n              prices={this.props.prices}\r\n              token={token}\r\n              toBet={tokens}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      );\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  renderTokensBet(tokens) {\r\n    const items = [];\r\n\r\n    for (let i = 0; i < this.NUMBER_OF_BOXES; i++) {\r\n      const token = tokens[i] || null;\r\n      items.push(\r\n        <Grid.Row className=\"betting-box-row\" key={i}>\r\n          <Grid.Column width={7}>\r\n            <BettingBoxToken token={token} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      );\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  render() {\r\n    const { tokens, bet, teams } = this.props;\r\n\r\n    if (!bet)\r\n      return (\r\n        <div className=\"betting-box\">\r\n          <Grid style={{ paddingTop: '1em' }} columns=\"equal\">\r\n            {this.renderTokensToBet(tokens)}\r\n          </Grid>\r\n        </div>\r\n      );\r\n\r\n    const odds = _.find(teams, { id: bet.teamID }).odds;\r\n\r\n    return (\r\n      <div className=\"betting-box\">\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row>\r\n            <Grid.Column>{this.renderTokensBet(bet.tokensBet)}</Grid.Column>\r\n            <Grid.Column>{this.renderBetInfo(bet, odds)}</Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BettingBox;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Icon, Label, List, Header } from 'semantic-ui-react';\r\nimport { backend } from '../../config/config';\r\nimport DateFormatter from '../../utils/DateFormatter';\r\nimport {\r\n  DATE_ICON,\r\n  GAME_SCHEDULED_ICON,\r\n  GAME_STARTED_ICON,\r\n  GAME_FINISHED_ICON\r\n} from '../../utils/constants';\r\n\r\nclass MatchDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { match } = this.props;\r\n    const {\r\n      teams,\r\n      league,\r\n      numberOfBets,\r\n      highestBet,\r\n      tokensInPool,\r\n      serie,\r\n      startTime,\r\n      state\r\n    } = match;\r\n\r\n    if (!serie) serie = '';\r\n    if (!league) league = { displayName: '' };\r\n\r\n    const date = DateFormatter(startTime);\r\n\r\n    let aproxIcon;\r\n    if (date.isFuture) {\r\n      aproxIcon = GAME_SCHEDULED_ICON;\r\n    } else {\r\n      if (state === 'finalized' || state === 'canceled') {\r\n        aproxIcon = GAME_FINISHED_ICON;\r\n      } else {\r\n        aproxIcon = GAME_STARTED_ICON;\r\n      }\r\n    }\r\n\r\n    console.log(aproxIcon);\r\n\r\n    if (match)\r\n      return (\r\n        <div style={{ marginTop: '0.5em' }}>\r\n          <Grid>\r\n            <Grid.Row columns=\"1\">\r\n              <Grid.Column textAlign=\"right\">\r\n                <Label className=\"orange-label-light\" size=\"large\">\r\n                  <Icon name={DATE_ICON} />\r\n                  {date.formatedDate}\r\n                </Label>\r\n                <Label className=\"orange-label-light\" size=\"large\">\r\n                  <Icon name={aproxIcon} />\r\n                  {date.aprox}\r\n                </Label>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row columns=\"2\">\r\n              <Grid.Column>\r\n                <Header dividing as=\"h4\">\r\n                  Match statistics\r\n                </Header>\r\n                <List className=\"details-list\">\r\n                  <List.Item>\r\n                    <List.Icon name=\"dollar sign\" className=\"font-dark\" />\r\n                    <List.Content>\r\n                      <List.Header>{`${(\r\n                        teams[0].totalDollarsBet + teams[1].totalDollarsBet\r\n                      ).toFixed(2)}$`}</List.Header>\r\n                      <List.Description>Total bet</List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"ticket alternate\" className=\"font-dark\" />\r\n                    <List.Content>\r\n                      <List.Header>{numberOfBets}</List.Header>\r\n                      <List.Description>Bets total</List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"chess king\" className=\"font-dark\" />\r\n                    <List.Content>\r\n                      <List.Header>{`${highestBet.toFixed(2)}$`}</List.Header>\r\n                      <List.Description>Highest bet</List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"ethereum\" className=\"font-dark\" />\r\n                    <List.Content>\r\n                      <List.Header>{tokensInPool.length}</List.Header>\r\n                      <List.Description>\r\n                        Different tokens in pool\r\n                      </List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                </List>\r\n              </Grid.Column>\r\n              <Grid.Column verticalAlign=\"middle\" textAlign=\"center\">\r\n                <img\r\n                  className=\"league-image undragable\"\r\n                  src={`${backend}/img/${league.logo}`}\r\n                />\r\n                <p className=\"league-caption\">{`${\r\n                  league.displayName\r\n                } ${serie}`}</p>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n      );\r\n\r\n    return '';\r\n  }\r\n}\r\n\r\nexport default MatchDetails;\r\n","module.exports = {\r\n  DATE_ICON: 'calendar alternate outline',\r\n  GAME_SCHEDULED_ICON: 'hourglass start',\r\n  GAME_STARTED_ICON: 'hourglass half',\r\n  GAME_FINISHED_ICON: 'hourglass end',\r\n  BET_PENDING_ICON: 'hourglass half',\r\n  BET_WON_ICON: 'trophy',\r\n  BET_LOST_ICON: 'minus',\r\n  BET_DRAW_ICON: 'law',\r\n  BET_CANCELED_ICON: 'calendar times'\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA1BA;AACA;AA2BA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AAQA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAQA;AAAA;AAAA;AAUA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAQA;;;;AAnJA;AACA;AAqJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AASA;AAAA;AAAA;AAOA;AAAA;AAAA;AAOA;AAAA;AAAA;AAUA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AASA;AACA;;;;AA3GA;AACA;AA6GA;;;;;;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;A","sourceRoot":""}