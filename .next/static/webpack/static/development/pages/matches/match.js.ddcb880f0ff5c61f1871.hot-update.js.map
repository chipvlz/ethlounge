{"version":3,"file":"static/webpack/static\\development\\pages\\matches\\match.js.ddcb880f0ff5c61f1871.hot-update.js","sources":["webpack:///./components/match/BettingBox.js","webpack:///./components/match/BettingBoxItem.js","webpack:///./components/match/TokenBox.js","webpack:///./components/match/TokenBoxItem.js","webpack:///./ethereum/web3.js","webpack:///./pages/matches/match.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport BettingBoxItem from './BettingBoxItem';\r\nimport RangeSlider from '../RangeSlider'\r\n\r\nclass BettingBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderItems(items) {    \r\n        let bettingBoxes = [];\r\n        const numberOfBoxes = 4;\r\n        \r\n\r\n        for (let i = 0; i < numberOfBoxes; i++) {\r\n            let pos = `betting-box-${i}`;       \r\n            let itemProp;\r\n            let rangeSlider = '';\r\n\r\n            for (let item of items) {\r\n                if (item.position === pos) {\r\n                    itemProp = item;\r\n                    rangeSlider = <RangeSlider prices={this.props.prices} item={item} toBet={items} handleRange={this.props.handleRange}></RangeSlider>\r\n                }\r\n            }\r\n\r\n            \r\n            bettingBoxes.push(\r\n                    <Grid.Row key={pos}>\r\n                        <Grid.Column width={7}>\r\n                            <BettingBoxItem pos={pos} droppedItem={itemProp} handleDelete={this.props.handleDelete}/>                           \r\n                        </Grid.Column>\r\n                        <Grid.Column width={9} verticalAlign=\"middle\">\r\n                            {rangeSlider}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n            );\r\n        }\r\n\r\n        return bettingBoxes;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"betting-box\">\r\n\r\n                <Grid columns='equal'>\r\n                    {this.renderItems(this.props.items)}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BettingBox;","import React, { Component } from 'react';\r\nimport { Segment, Icon } from 'semantic-ui-react';\r\nimport { DropTarget } from 'react-dnd';\r\nimport Item from '../Item';\r\n\r\nconst itemSource = {\r\n    drop(props) {\r\n        return {pos: props.pos};\r\n    },\r\n}\r\n\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        item: monitor.getItem(),\r\n        canDrop: monitor.canDrop()\r\n    }\r\n}\r\n\r\nclass BettingBoxItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.props.handleDelete(this.props.droppedItem);\r\n    }\r\n\r\n    render() {\r\n        const { canDrop, connectDropTarget, isOver, item, pos } = this.props;\r\n        \r\n        let classNameModifier = '';\r\n\r\n        if (isOver && canDrop) {\r\n            classNameModifier += ' betting-box-item-hovered';\r\n        }\r\n\r\n        if (!isOver && canDrop) {\r\n            classNameModifier += ' betting-box-item-candrop';\r\n        }\r\n\r\n        let token;\r\n\r\n        if (this.props.droppedItem) {\r\n            token = <Item item={this.props.droppedItem} className=\"item-dropped\"></Item>\r\n\r\n            classNameModifier = ' betting-box-item-dropped'\r\n\r\n            return (            \r\n                <div>\r\n                    <Segment onClick={this.handleClick} textAlign='center' className={'betting-box-item' + classNameModifier}>\r\n                    {token}\r\n                    </Segment>\r\n                </div>\r\n            );\r\n        } \r\n            \r\n\r\n            return connectDropTarget(            \r\n                <div>\r\n                    <Segment size={\"big\"} textAlign='center' className={'betting-box-item' + classNameModifier}>\r\n                    </Segment>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nexport default DropTarget('item', itemSource, collect)(BettingBoxItem);","import React, { Component } from 'react';\r\nimport TokenBoxItem from './TokenBoxItem';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\n\r\nclass TokenBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);    \r\n        \r\n        this.handleDrop = this.handleDrop.bind(this);\r\n    }\r\n\r\n    handleDrop(item, pos) {\r\n        this.props.handleDrop(item, pos);\r\n    }\r\n\r\n    renderItems = (items) => {\r\n        if(!items) return <h2>Loading...</h2>;\r\n        else {\r\n            const toRender = <div>{items.map(item => {\r\n                if(item.position == 'token-box') {\r\n                return (\r\n                <TokenBoxItem key={item.token} item={{token: item.token, amount: item.amount, initialAmount: item.initialAmount, position: item.position}} handleDrop={(item, pos) => this.handleDrop(item, pos)}></TokenBoxItem>);\r\n                } else {return \"\"};            \r\n            })}</div>;\r\n            \r\n            return toRender;\r\n        }\r\n      }\r\n\r\n    render() {\r\n        if (this.props.signedIn)\r\n        return (\r\n            <div className=\"tokens-box\">            \r\n                {this.renderItems(this.props.items)}   \r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <Message\r\n            warning\r\n            header='Sign in with Metamask'\r\n            content='Please sign in with Metamask in order to see your balances and place bets.'\r\n          />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TokenBox;","import React, { Component } from 'react';\r\nimport Item from '../Item';\r\nimport { DragSource } from 'react-dnd';\r\n\r\nconst itemSource = {\r\n    beginDrag(props) {\r\n        return props.item;\r\n    },\r\n    endDrag(props, monitor) {\r\n        if(!monitor.didDrop()) return;\r\n        return props.handleDrop(props.item, monitor.getDropResult().pos);\r\n        \r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDragSource: connect.dragSource(),\r\n        connectDragPreview: connect.dragPreview(),\r\n        isDragging: monitor.isDragging()\r\n    }\r\n}\r\n\r\nclass TokenBoxItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { isDragging, connectDragSource} = this.props;\r\n\r\n        let classNameModifier = '';\r\n\r\n        if (isDragging) {\r\n            classNameModifier = ' token-box-item-dragging';\r\n        } \r\n\r\n        return connectDragSource(\r\n            <div className={'token-box-item'+classNameModifier}><Item item={this.props.item} ></Item></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragSource('item', itemSource, collect)(TokenBoxItem);","import Web3 from 'web3';\r\n\r\nlet web3;\r\n\r\nif (typeof window != 'undefined' && typeof window.web3 != 'undefined') {\r\n    web3 = new Web3(window.web3.currentProvider)\r\n} else {\r\n    const provider = new Web3.providers.HttpProvider(\r\n        'https://rinkeby.infura.io/v3/6e6283bc1a354b07b064b06356766315'\r\n    );\r\n\r\n    web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Button, List, Label } from 'semantic-ui-react';\r\nimport BettingBox from '../../components/match/BettingBox';\r\nimport TokenBox from '../../components/match/TokenBox';\r\nimport { changeItemPosition, changeItemAmount, updatePrices } from '../../redux/actions';\r\nimport CryptoPrices from '../../components/helpers/CryptoPrices';\r\nimport store from '../../redux/store';\r\n\r\nclass Match extends Component {\r\n\r\n    static async getInitialProps(props) {\r\n        const matchID = props.query.id;\r\n        \r\n        // This information will be pulled from database //\r\n        const teams = [{\r\n            name: 'Fnatic',\r\n            slug: 'fnatic',\r\n            imgUrl: `../../img/teams/fnatic.png`\r\n        }, {\r\n            name: 'Gambit',\r\n            slug: 'gambit',\r\n            imgUrl: `../../img/teams/gambit.png`\r\n        }];\r\n\r\n        // This information will be pulled from Ethereum blockchain (downloaded on server)\r\n        const odds = new Map();\r\n        odds.set(teams[0].slug, 1,2);\r\n        odds.set(teams[1].slug, 5,8)\r\n\r\n        return {matchID, teams};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const prices = await CryptoPrices();\r\n        store.dispatch(updatePrices(prices))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (                \r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column width={8}>\r\n                        FNATIC vs GAMBIT\r\n                    </Grid.Column>\r\n                    <Grid.Column width={8}>\r\n                        <h2>Place bet</h2>\r\n                        <BettingBox prices={this.props.prices} items={this.props.items.toBet} handleRange={this.props.handleRange} handleDelete={this.props.changePosition}/>\r\n                        <div className=\"bet-container\">\r\n                            <Button className=\"button-bet\" size=\"large\" color=\"black\" >\r\n                                Place bet\r\n                            </Button> \r\n                            <List relaxed floated=\"right\" className=\"info-bet\">\r\n                                <List.Item><Label color='orange' horizontal>ESTIMATED BET VALUE</Label> {this.props.betValue}$</List.Item>\r\n                                <List.Item><Label color='orange' horizontal>ESTIMATED REWARD</Label> 2442$</List.Item>                        \r\n                            </List>\r\n                        </div>    \r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column width={8}>\r\n                        LAST BETS:\r\n                    </Grid.Column>\r\n                    <Grid.Column width={8}>\r\n                        <h2>Balances</h2>\r\n                        <TokenBox signedIn={this.props.signedIn} items={this.props.items.wallet} handleDrop={this.props.changePosition}/>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>                \r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePosition: (item, pos) => {\r\n            dispatch(changeItemPosition(item, pos));\r\n        },\r\n\r\n        handleRange: (item) => {\r\n            dispatch(changeItemAmount(item))\r\n        }\r\n    }\r\n}\r\n  \r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            items: state.items,\r\n            signedIn: state.signedIn,\r\n            betValue: state.betValue,\r\n            prices: state.prices\r\n        }\r\n    \r\n  }\r\n\r\nMatch = DragDropContext(HTML5Backend)(Match);\r\n\r\nexport default Layout(connect(mapStateToProps, mapDispatchToProps)(Match));"],"mappings":"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","sourceRoot":""}