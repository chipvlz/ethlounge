{"version":3,"file":"static/webpack/static\\development\\pages\\matches\\match.js.9d3aa045dee91bec77cb.hot-update.js","sources":["webpack:///./components/match/ConfirmBetModal.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Modal\r\n} from 'semantic-ui-react';\r\n\r\nimport { toggleModal } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport { Router } from '../../next-routes';\r\nimport TokenFromWei from '../../utils/TokenFromWei';\r\nimport { backend } from '../../config/config';\r\nimport PlaceBet from '../../utils/api/PlaceBet';\r\n\r\nclass ConfirmBetModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleConfirm = this.handleConfirm.bind(this);\r\n    this.closeFinalModal = this.closeFinalModal.bind(this);\r\n    this.state = {\r\n      isLoading: false,\r\n      isCancelDisabled: false,\r\n      isFinalModalSuccessOpen: false,\r\n      isFinalModalSuccessOpen: false,\r\n      isFinalModalErrorOpen: false,\r\n      errorMessage: '',\r\n      transactionInfo: {}\r\n    };\r\n  }\r\n\r\n  closeFinalModal() {\r\n    this.setState({\r\n      isFinalModalErrorOpen: false,\r\n      isFinalModalSuccessOpen: false\r\n    });\r\n    store.dispatch(toggleModal('confirmBetModal'));\r\n  }\r\n\r\n  async handleConfirm(match, pickedTeam, tokensToBet, user) {\r\n    this.setState({\r\n      isLoading: true,\r\n      isCancelDisabled: true\r\n    });\r\n\r\n    const tokensBet = tokensToBet.map(curr => {\r\n      return { id: curr.id, amount: curr.amount };\r\n    });\r\n\r\n    const api_response = await PlaceBet({\r\n      matchID: match._id,\r\n      teamID: pickedTeam._id,\r\n      betMakerID: user.id,\r\n      tokensBet\r\n    });\r\n\r\n    const data = api_response.data;\r\n\r\n    console.log(data);\r\n\r\n    this.setState({\r\n      isLoading: false,\r\n      isCancelDisabled: false\r\n    });\r\n  }\r\n\r\n  renderTeamLogos(match, pickedTeam) {\r\n    const notPickedTeamID =\r\n      pickedTeam._id === match.teams[0].id\r\n        ? match.teams[1].id\r\n        : match.teams[0].id;\r\n\r\n    return (\r\n      <div className=\"confirm-bet-modal-img-div\">\r\n        <div className=\"confirm-bet-modal-img-divider\" />\r\n        <Image\r\n          className=\"confirm-bet-modal-img confirm-bet-modal-img-picked\"\r\n          src={`${backend}/img/teams/${pickedTeam._id}.png`}\r\n        />\r\n\r\n        <Image\r\n          className=\"confirm-bet-modal-img confirm-bet-modal-img-notpicked\"\r\n          src={`${backend}/img/teams/${notPickedTeamID}.png`}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let { open, tokensToBet, pickedTeam, user, match } = this.props;\r\n\r\n    const tokenList = tokensToBet.map(curr => {\r\n      return (\r\n        <List.Item as=\"p\" key={curr.symbol}>\r\n          <Icon name=\"right triangle\" />\r\n          {`${TokenFromWei(curr)} ${curr.symbol}`}\r\n        </List.Item>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Modal size=\"tiny\" open={open}>\r\n        <FinalModalSuccess\r\n          open={this.state.isFinalModalSuccessOpen}\r\n          transactionInfo={this.state.transactionInfo}\r\n          match={match}\r\n          close={this.closeFinalModal}\r\n        />\r\n        <FinalModalError\r\n          open={this.state.isFinalModalErrorOpen}\r\n          errorMessage={this.state.errorMessage}\r\n          close={this.closeFinalModal}\r\n        />\r\n        <Modal.Header className=\"modal-header\">\r\n          <Icon name=\"check\" />\r\n          You are about to place a bet\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <Grid>\r\n              <Grid.Column width={10}>\r\n                <Header>Your bet: </Header>\r\n                <List className=\"confirm-bet-modal-ul font-dark-orange\" as=\"ul\">\r\n                  {tokenList}\r\n                </List>\r\n                <Header>\r\n                  Picked Team:\r\n                  <span className=\"font-dark-orange\">\r\n                    {' ' + pickedTeam.displayName}\r\n                  </span>\r\n                </Header>\r\n                <span className=\"odds-message\">\r\n                  <Icon name=\"info circle\" />\r\n                  Odds are now {pickedTeam.odds} but keep in mind they can\r\n                  change prior to the game start based on future bets.\r\n                </span>\r\n              </Grid.Column>\r\n              <Grid.Column width={6}>\r\n                {this.renderTeamLogos(match, pickedTeam)}\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            disabled={this.state.isCancelDisabled}\r\n            color=\"black\"\r\n            onClick={e => store.dispatch(toggleModal('confirmBetModal'))}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            loading={this.state.isLoading}\r\n            className=\"dark-orange-bg font-white\"\r\n            onClick={e =>\r\n              this.handleConfirm(match, pickedTeam, tokensToBet, user)\r\n            }>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass FinalModalSuccess extends Component {\r\n  render() {\r\n    const { open, close, transactionInfo, match } = this.props;\r\n\r\n    const hash = transactionInfo.transactionHash;\r\n\r\n    return (\r\n      <Modal open={open} size=\"tiny\">\r\n        <Modal.Header>Bet placed successfuly</Modal.Header>\r\n        <Modal.Content className=\"word-wrap\">\r\n          <p>\r\n            Transaction hash:{' '}\r\n            <a href={` https://etherscan.io/tx/${hash}`}>{hash}</a>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            className=\"dark-orange-bg font-white\"\r\n            onClick={e => {\r\n              close();\r\n              Router.push(`/matches/${match._id}`);\r\n            }}>\r\n            {' '}\r\n            Go back\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass FinalModalError extends Component {\r\n  render() {\r\n    return (\r\n      <Modal open={this.props.open} size=\"mini\">\r\n        <Modal.Header className=\"font-error\">Placing bet failed</Modal.Header>\r\n        <Modal.Content className=\"font-error word-wrap\">\r\n          <p>{this.props.errorMessage}</p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            className=\"dark-orange-bg font-white\"\r\n            onClick={e => this.props.close()}>\r\n            Go back\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmBetModal;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAaA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;AAEA;;;;;;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;;AADA;AAOA;AAEA;AAEA;AACA;AACA;AAFA;AACA;;;;;;;;;;;;;;;AAKA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAIA;AAAA;AACA;AAAA;AAKA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AAAA;AAAA;AAHA;AAWA;;;;AAlJA;AACA;AAoJA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAYA;;;;AA5BA;AACA;AA8BA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AAQA;;;;AAjBA;AACA;AAmBA;;;;A","sourceRoot":""}