{"version":3,"file":"static/webpack/static\\development\\pages\\matches\\match.js.d57550f8d70843b9620b.hot-update.js","sources":["webpack:///./components/ErrorModal.js","webpack:///./components/match/ConfirmBetModal.js","webpack:///./pages/matches/match.js","webpack:///./redux/actions.js","webpack:///./redux/reducers.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport store from '../redux/store';\r\nimport { Modal, Message, Button, Header, Icon } from 'semantic-ui-react'\r\nimport { toggleErrorModal } from '../redux/actions';\r\n\r\nclass ErrorModal extends Component {\r\n\r\n    render() {\r\n        let { modal } = this.props;\r\n        const list = modal.reasons.map((curr) => {\r\n            return <li>{curr}</li>\r\n        })\r\n\r\n        return (\r\n            <Modal size=\"tiny\" open={modal.isOpen} closeOnDocumentClick={true}>\r\n                 \r\n                <Modal.Header className=\"font-error\">\r\n                    <Icon  name='times circle outline' />\r\n                    {modal.head}\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description className=\"font-error\">\r\n                        <ul>\r\n                            {list}\r\n                        </ul>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button className=\"dark-orange-bg font-white\" onClick={(e) => store.dispatch(toggleErrorModal())}>\r\n                        OK\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n    \r\n\r\n \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorModal;","import React, { Component } from 'react';\r\nimport store from '../../redux/store';\r\nimport { Modal, Message, Button, Header, Icon } from 'semantic-ui-react'\r\nimport { toggleErrorModal } from '../../redux/actions';\r\n\r\nclass ConfirmBetModal extends Component {\r\n\r\n    render() {\r\n        let { modal } = this.props;\r\n\r\n        const tokensList = tokensToBet.map((curr) => {\r\n            return <li>{TokenFromWei(curr, 'full')}</li>\r\n        });\r\n\r\n        return (          \r\n            <Modal size='tiny' open={true}>\r\n                <Modal.Header>You are about to place a bet</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <ul></ul>                        \r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    {/* <Button className=\"dark-orange-bg font-white\" onClick={(e) => {this.setState({popupOpen: false})}}>\r\n                        Close\r\n                    </Button> */}\r\n                </Modal.Actions>\r\n            </Modal>        \r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmBetModal;","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Button, List, Label, Modal} from 'semantic-ui-react';\r\nimport BettingBox from '../../components/match/BettingBox';\r\nimport TokenBox from '../../components/match/TokenBox';\r\nimport { changeTokenPosition, changeTokenAmount, updatePrices, toggleErrorModal, toggleModal } from '../../redux/actions';\r\nimport CryptoPrices from '../../helpers/CryptoPrices';\r\nimport store from '../../redux/store';\r\nimport Teams from '../../components/match/Teams';\r\nimport _ from 'lodash';\r\nimport ErrorModal from '../../components/ErrorModal';\r\nimport TokenFromWei from '../../helpers/TokenFromWei';\r\nimport ConfirmBetModal from '../../components/match/ConfirmBetModal';\r\n\r\nclass Match extends Component {\r\n\r\n    static async getInitialProps(props) {\r\n        const matchID = props.query.id;\r\n        \r\n        // This information will be pulled from database //\r\n        const teams = [{\r\n            name: 'Fnatic',\r\n            slug: 'fnatic',\r\n            imgUrl: `../../img/teams/fnatic.png`,\r\n            odds: 1.56\r\n        }, {\r\n            name: 'Gambit',\r\n            slug: 'gambit',\r\n            imgUrl: `../../img/teams/gambit.png`,\r\n            odds: 2.77\r\n        }];\r\n\r\n        return { teams };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const prices = await CryptoPrices();\r\n        store.dispatch(updatePrices(prices))\r\n    }\r\n\r\n    handleClick(event, tokensToBet) {\r\n        event.preventDefault();\r\n        const errorHead = \"You forgot to do the following\"\r\n        const errors = [];\r\n        if (!this.props.signedIn) errors.push('Please log in to place bets.');\r\n        if (tokensToBet.length === 0) errors.push('Please place at least one token in order to place a bet.');\r\n        if (_.isEmpty(this.props.pickedTeam)) errors.push('Please pick a team.');\r\n        if (errors.length > 0) { store.dispatch(toggleErrorModal(errorHead, errors)); return; }\r\n\r\n        toggleModal('confirmBetModal');\r\n               \r\n    }\r\n\r\n    render() {\r\n        return (                \r\n            <Grid relaxed>  \r\n                <ErrorModal modal={this.props.errorModal} />\r\n                <ConfirmBetModal open={confirmBetModal.isOpen} tokensToBet={this.props.tokens.toBet} pickedTeam={this.props.pickedTeam} teams={this.props.teams}/>\r\n                <Grid.Column width={8}>\r\n                    <Teams teams={this.props.initial.teams} pickedTeam={this.props.pickedTeam} signedIn={this.props.signedIn} />\r\n                    LAST BETS:\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                    <h2>Place bet</h2>\r\n                    <BettingBox prices={this.props.prices} tokens={this.props.tokens.toBet}  />\r\n                    <div className=\"bet-container\">\r\n                        <Button onClick={(event) => this.handleClick(event, this.props.tokens.toBet)} className=\"button-bet\" size=\"large\" color=\"black\" >\r\n                            Place bet\r\n                        </Button>\r\n                      \r\n                        <List relaxed floated=\"right\" className=\"info-bet\">\r\n                            {this.renderBetValue(this.props.betValue)}\r\n                            {this.renderEstimatedReward(this.props.betValue)}                 \r\n                        </List>\r\n                    </div>\r\n                        <h2>Balances</h2>\r\n                    <TokenBox signedIn={this.props.signedIn} tokens={this.props.tokens.wallet} />\r\n                </Grid.Column>                             \r\n            </Grid>                \r\n        );\r\n    }\r\n\r\n    renderBetValue(betValue) {\r\n        if (this.props.tokens.toBet.length > 0)\r\n        return <List.Item><Label className=\"orange-label\" horizontal>ESTIMATED BET VALUE</Label><strong>{` ${betValue}$`}</strong></List.Item>;\r\n\r\n        return '';\r\n    }\r\n\r\n    renderEstimatedReward(betValue) {\r\n        if (this.props.tokens.toBet.length > 0 && !(_.isEmpty(this.props.pickedTeam)) )\r\n        return <List.Item><Label className=\"orange-label\" horizontal>ESTIMATED RETURN</Label><strong>{` ${(parseFloat(betValue) * this.props.pickedTeam.odds).toFixed(2)}$`}</strong></List.Item>;\r\n\r\n        return '';\r\n    }\r\n}\r\n  \r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            tokens: state.tokens,\r\n            signedIn: state.signedIn,\r\n            betValue: state.betValue,\r\n            prices: state.prices,\r\n            pickedTeam: state.pickedTeam,\r\n            errorModal: state.errorModal,\r\n            confirmBetModal: state.confirmBetModal\r\n        }\r\n    \r\n  }\r\n\r\nMatch = DragDropContext(HTML5Backend)(Match);\r\n\r\nexport default Layout(connect(mapStateToProps)(Match));","export function addToken(token) {\r\n    return {\r\n        type: 'ADD_TOKEN',\r\n        token\r\n    }\r\n}\r\n\r\nexport function changeTokenPosition(token, pos) {\r\n    return {\r\n        type: 'CHANGE_POS',\r\n        token,\r\n        pos\r\n    }\r\n}\r\n\r\nexport function changeTokenAmount(token) {\r\n    return {\r\n        type: 'CHANGE_AMOUNT',\r\n        token\r\n    }\r\n}\r\n\r\nexport function updateEstimateBet(sum) {\r\n    return {\r\n        type: 'UPDATE_ESTIMATE_BET',\r\n        sum\r\n    }\r\n}\r\n\r\nexport function updatePrices(prices) {\r\n    return {\r\n        type: 'UPDATE_PRICES',\r\n        prices\r\n    }\r\n}\r\n\r\nexport function pickTeam(team) {\r\n    return {\r\n        type: 'PICK_TEAM',\r\n        team\r\n    }\r\n}\r\n\r\nexport function toggleErrorModal(head = '', reasons = []) {\r\n    return {\r\n        type: 'TOGGLE_ERROR_MODAL',\r\n        head: head,\r\n        reasons: reasons\r\n    }\r\n}\r\n\r\nexport function toggleModal(property) {\r\n    return {\r\n        type: 'TOGGLE_MODAL',\r\n        property\r\n    }\r\n}","import _ from 'lodash';\r\nimport EstimateBetValue from '../helpers/EstimateBetValue';\r\n\r\nconst initialState = {tokens: {toBet: [], wallet: []}, account: '', signedIn: false, prices: {}, betValue: 0, pickedTeam: {}, errorModal: {isOpen: false, head: '', reasons: [] }, confirmBetModal: {isOpen: false}};\r\n\r\nconst matchReducer = (state = initialState, action) => {\r\n    let newState = _.cloneDeep(state);\r\n\r\n    switch(action.type) {               \r\n        case 'ADD_TOKEN': {\r\n            if (newState.tokens.wallet.some( (curr) => curr.address == action.token.address) ) return;\r\n            if (newState.tokens.toBet.some( (curr) => curr.address == action.token.address) ) return;\r\n           \r\n            newState.tokens.wallet.push(action.token);\r\n            \r\n            break;\r\n        }  \r\n\r\n        case 'CHANGE_POS': {\r\n            console.log(action.token, state)          \r\n            if (action.token.position === 'balance-box') {\r\n                action.token.position = action.pos;\r\n                newState.tokens.toBet.push(action.token);\r\n                newState.tokens.wallet = newState.tokens.wallet.filter((curr) => curr.address != action.token.address);\r\n            } else {\r\n                action.token.position = 'balance-box';\r\n                action.token.amount = action.token.initialAmount;\r\n                newState.tokens.wallet.push(action.token);\r\n                newState.tokens.toBet = newState.tokens.toBet.filter((curr) => curr.address != action.token.address);           \r\n            }\r\n\r\n            newState.betValue = EstimateBetValue(newState.tokens.toBet, newState.prices, false);\r\n\r\n            break;\r\n        }\r\n\r\n        case 'LOG_OUT': {\r\n            newState = {...initialState};\r\n            newState.prices = state.prices;\r\n            console.log('Logged out! State is now: ', newState);\r\n            break;\r\n        }  \r\n\r\n        case 'LOG_IN': {\r\n            console.log('Loggin in...');\r\n            newState.account = action.account;\r\n            newState.signedIn = true;\r\n            console.log('Logging in! State is now: ', newState);\r\n            break;\r\n        }\r\n\r\n        case 'UPDATE_PRICES': {\r\n            newState.prices = action.prices;\r\n            break;\r\n        }\r\n\r\n        case 'UPDATE_ESTIMATE_BET': {\r\n            newState.betValue = action.sum;\r\n            break;\r\n        }\r\n\r\n        case 'PICK_TEAM': {\r\n            newState.pickedTeam = action.team;\r\n            break;\r\n        }\r\n\r\n        case 'TOGGLE_ERROR_MODAL': {\r\n            newState.errorModal.isOpen = !state.errorModal.isOpen;\r\n            newState.errorModal.head = action.head;\r\n            newState.errorModal.reasons = action.reasons;\r\n            break;\r\n        }\r\n\r\n        case 'TOGGLE_MODAL': {\r\n            newState[property].isOpen = !newState[property].isOpen;\r\n            break;\r\n        }\r\n\r\n    }\r\n    \r\n    return newState;\r\n}\r\n\r\nexport default matchReducer;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AAjCA;AACA;AAmCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAcA;;;;AAxBA;AACA;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;;AADA;AACA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAIA;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;AA9EA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAnBA;AACA;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;;;;;ACxpEA;AACA;AAuEA;AACA;AACA;AACA;;;;A","sourceRoot":""}