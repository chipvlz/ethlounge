{"version":3,"file":"static\\development\\pages\\matches\\match.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Layout/Layout.js","webpack:///./components/Layout/Menu.js","webpack:///./components/Layout/MenuUser.js","webpack:///./components/match/BalanceBox.js","webpack:///./components/match/BettingBox.js","webpack:///./components/match/BettingBoxToken.js","webpack:///./components/match/ConfirmBetModal.js","webpack:///./components/match/ErrorModal.js","webpack:///./components/match/LastBets.js","webpack:///./components/match/MatchDetails.js","webpack:///./components/match/RangeSlider.js","webpack:///./components/match/Teams.js","webpack:///./components/match/Token.js","webpack:///./components/match/WinningsBox.js","webpack:///./config/config.js","webpack:///./next-routes.js","webpack:///./pages/matches/match.js","webpack:///./redux/index.js","webpack:///./redux/layout/actions.js","webpack:///./redux/layout/loginReducer.js","webpack:///./redux/match/actions.js","webpack:///./redux/match/matchReducer.js","webpack:///./redux/store.js","webpack:///./utils/CookieCall.js","webpack:///./utils/DateFormatter.js","webpack:///./utils/EstimateBetValue.js","webpack:///./utils/FormValidation/IsPasswordOk.js","webpack:///./utils/FormValidation/IsUsernameOk.js","webpack:///./utils/FormValidation/isEmailOk.js","webpack:///./utils/OptimizeTokenAmount.js","webpack:///./utils/SeverSideRedirect.js","webpack:///./utils/Sleep.js","webpack:///./utils/TokenFromWei.js","webpack:///./utils/api/PlaceBet.js","webpack:///./utils/constants.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"big.js\"","webpack:///external \"ethereum-blockies-base64\"","webpack:///external \"lodash\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-rangeslider\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-thunk\"","webpack:///external \"semantic-ui-react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React, { Component } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Head from 'next/head';\r\nimport { Provider } from 'react-redux';\r\nimport Menu from './Menu';\r\nimport store from '../../redux/store';\r\nimport '../../static/css/layout.css';\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport 'react-rangeslider/lib/index.css';\r\nimport axios from 'axios';\r\nimport { login } from '../../redux/layout/actions';\r\nimport { backend } from '../../config/config';\r\nimport CookieCall from '../../utils/CookieCall';\r\n\r\nconst layout = ChildPage =>\r\n  class extends Component {\r\n    static async getInitialProps(initialProps) {\r\n      const { req } = initialProps;\r\n      let res;\r\n\r\n      let api_response;\r\n\r\n      try {\r\n        api_response = await CookieCall(req, '/api/current_user');\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      const user = api_response.data;\r\n\r\n      let props = { user };\r\n\r\n      const getInitialProps = ChildPage.getInitialProps;\r\n\r\n      if (getInitialProps) {\r\n        let childPageProps = await getInitialProps(initialProps);\r\n\r\n        props = {\r\n          ...props,\r\n          ...childPageProps\r\n        };\r\n      }\r\n\r\n      return props;\r\n    }\r\n\r\n    componentWillMount() {\r\n      store.dispatch(login(this.props.user));\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Provider store={store}>\r\n          <div>\r\n            <Head>\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"\r\n              />\r\n            </Head>\r\n            <Menu user={this.props.user} />\r\n            <Container>\r\n              <ChildPage initial={this.props} />\r\n              <div className=\"footer\" />\r\n            </Container>\r\n          </div>\r\n        </Provider>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default layout;\r\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Menu,\n  Image,\n  Icon,\n  Modal,\n  Message,\n  Form,\n  Input,\n  Label,\n  Grid,\n  List\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport store from '../../redux/store';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport axios from 'axios';\nimport MenuUser from './MenuUser';\nimport IsUsernameOk from '../../utils/FormValidation/IsUsernameOk';\nimport IsPasswordOk from '../../utils/FormValidation/IsPasswordOk';\nimport IsEmailOk from '../../utils/FormValidation/isEmailOk';\n\nclass TopMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      password_2: '',\n      signUpErrors: [],\n      signUpOpen: false,\n      signInOpen: false\n    };\n  }\n\n  renderRightMenu(user) {\n    switch (user) {\n      case false: {\n        return (\n          <div className=\"auth-buttons\">\n            <Button\n              onClick={e => this.setState({ signInOpen: true })}\n              color=\"black\">\n              Sign in\n            </Button>\n            <span className=\"or\">or</span>\n            <Button\n              onClick={e => this.setState({ signUpOpen: true })}\n              color=\"black\"\n              className=\"margin-right-1em\">\n              Sign up\n            </Button>\n          </div>\n        );\n      }\n\n      case null: {\n        return '';\n      }\n\n      default: {\n        return <MenuUser user={user} />;\n      }\n    }\n  }\n\n  async handleSignIn() {\n    const { username, password } = this.state;\n\n    let data = JSON.stringify({\n      password: password,\n      username: username\n    });\n\n    const response = await axios.post('/login', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    console.log(response);\n  }\n\n  async handleSignUp() {\n    const { username, password, password_2, email } = this.state;\n\n    const signUpErrors = [];\n\n    const isUsernameOk = IsUsernameOk(username);\n    if (isUsernameOk !== true) signUpErrors.push(isUsernameOk);\n\n    const isPasswordOk = IsPasswordOk(password, password_2);\n    if (isPasswordOk !== true) signUpErrors.push(isPasswordOk);\n\n    const isEmailOk = IsEmailOk(email);\n    if (isEmailOk !== true) signUpErrors.push(isEmailOk);\n\n    if (signUpErrors.length > 0) {\n      this.setState({ signUpErrors });\n      return;\n    }\n\n    const response = await axios({\n      method: 'post',\n      url: '/register',\n      data: { username, password, email },\n      config: { headers: { 'Content-Type': 'multipart/form-data' } }\n    });\n\n    if (!response.data.errors) {\n      // here display message about email verification\n    } else {\n      this.setState({\n        signUpErrors: response.data.errors\n      });\n    }\n  }\n\n  isButtonDisabled(inputs) {\n    const ok = inputs.every(curr => curr.length > 0);\n\n    return !ok;\n  }\n\n  renderAvatar(username) {\n    if (IsUsernameOk(username) === true)\n      return (\n        <div className=\"sign-up-avatar-box\">\n          <p>Your avatar:</p>\n          <Image src={makeBlockie(username)} />\n        </div>\n      );\n\n    return (\n      <div className=\"sign-up-avatar-box\">\n        <p>Your avatar:</p>\n        <Image\n          className=\"sign-up-avatar-box-img-placeholder\"\n          src={makeBlockie('dfgdasd')}\n        />\n      </div>\n    );\n  }\n\n  renderSignUpModal(open) {\n    return (\n      <Modal open={open} size=\"small\">\n        <Modal.Header className=\"modal-header\">\n          Sign up as a new user\n        </Modal.Header>\n        <Modal.Content>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={10}>\n                <Form>\n                  <Form.Field>\n                    <label>Username</label>\n                    <Input\n                      onChange={e => {\n                        this.setState({ username: e.target.value });\n                        this.resetErrors();\n                      }}\n                      value={this.state.username}>\n                      <input />\n                    </Input>\n                    <span className=\"sign-up-hint\">\n                      Username should contain between 3 and 15 characters.\n                    </span>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>E-mail</label>\n                    <Input\n                      onChange={e => {\n                        this.setState({ email: e.target.value });\n                        this.resetErrors();\n                      }}\n                      value={this.state.email}>\n                      <input />\n                    </Input>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Password</label>\n                    <input\n                      type=\"password\"\n                      onChange={e => {\n                        this.setState({ password: e.target.value });\n                        this.resetErrors();\n                      }}\n                      value={this.state.password}\n                    />\n                    <span className=\"sign-up-hint\">\n                      Password should contain at least 8 characters.\n                    </span>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Repeat password</label>\n                    <input\n                      type=\"password\"\n                      onChange={e => {\n                        this.setState({ password_2: e.target.value });\n                        this.resetErrors();\n                      }}\n                      value={this.state.password_2}\n                    />\n                  </Form.Field>\n                </Form>\n                {this.renderSingUpErrors(this.state.signUpErrors)}\n              </Grid.Column>\n              <Grid.Column width={6} verticalAlign=\"middle\" textAlign=\"center\">\n                {this.renderAvatar(this.state.username)}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            className=\"dark-button\"\n            onClick={e => {\n              this.setState({\n                signUpOpen: false,\n                username: '',\n                password: '',\n                password_2: '',\n                signUpErrors: []\n              });\n            }}>\n            Back\n          </Button>\n\n          <Button\n            className=\"orange-button-dark\"\n            onClick={e => this.handleSignUp()}\n            disabled={this.isButtonDisabled([\n              this.state.username,\n              this.state.password,\n              this.state.password_2,\n              this.state.email\n            ])}>\n            Sign Up\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  renderSignInModal(open) {\n    return (\n      <Modal open={open} size=\"small\">\n        <Modal.Header className=\"modal-header\">Sign in</Modal.Header>\n        <Modal.Content>\n          <Form id=\"login_form\" action=\"/login\" method=\"get\">\n            <Form.Field>\n              <label>Username</label>\n              <input\n                name=\"username\"\n                onChange={e => this.setState({ username: e.target.value })}\n                value={this.state.username}\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Password</label>\n              <input\n                name=\"password\"\n                type=\"password\"\n                onChange={e => this.setState({ password: e.target.value })}\n                value={this.state.password}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            className=\"dark-button\"\n            onClick={e => {\n              this.setState({\n                signInOpen: false,\n                username: '',\n                password: ''\n              });\n            }}>\n            Back\n          </Button>\n\n          <Button\n            onClick={() => this.handleSignIn()}\n            className=\"orange-button-dark\"\n            disabled={this.isButtonDisabled([\n              this.state.username,\n              this.state.password\n            ])}>\n            Sign In\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <Menu inverted size=\"large\" className=\"top-menu\" icon=\"labeled\">\n        <Menu.Item className=\"item-logo\">\n          <Image className=\"logo\" src=\"/static/img/logo/logo.png\" />\n        </Menu.Item>\n        <Menu.Item>\n          <Icon name=\"chess knight\" />\n          My Bets\n        </Menu.Item>\n        <Menu.Item>\n          <Icon name=\"angle double down\" />\n          Deposit\n        </Menu.Item>\n\n        <Menu.Item>\n          <Icon name=\"angle double up\" />\n          Withdraw\n        </Menu.Item>\n\n        <Menu.Item>\n          <Icon name=\"question circle outline\" />\n          FAQ\n        </Menu.Item>\n\n        <Menu.Item className=\"menu-right-item\" position=\"right\">\n          {this.renderRightMenu(this.props.user)}\n        </Menu.Item>\n\n        {this.renderSignUpModal(this.state.signUpOpen)}\n\n        {this.renderSignInModal(this.state.signInOpen)}\n      </Menu>\n    );\n  }\n\n  resetErrors() {\n    this.setState({ signUpErrors: [] });\n  }\n\n  renderSingUpErrors(errors) {\n    if (errors[0]) {\n      return (\n        <Message\n          error\n          header=\"There were some errors in your sign up form.\"\n          list={errors}\n        />\n      );\n    }\n    return '';\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.login.user\n  };\n};\n\nexport default connect(mapStateToProps)(TopMenu);\n","import React, { Component } from 'react';\nimport { Grid, Header, Button } from 'semantic-ui-react';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport axios from 'axios';\nimport Sleep from '../../utils/Sleep';\n\nclass MenuUser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSingOut = this.handleSignOut.bind(this);\n    this.state = { avatarClassNameModifier: '' };\n  }\n\n  async handleSignOut() {\n    this.setState({ avatarClassNameModifier: 'avatar-exit' });\n    await axios.get('/logout');\n    Sleep(100);\n    window.location.href = window.location.href;\n  }\n\n  render() {\n    let { user } = this.props;\n\n    const { username, id } = user;\n    const usernameStyle = { color: 'white' };\n\n    return (\n      <Grid className=\"top-menu-right\">\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column width={6}>\n            <div>\n              <img\n                src={makeBlockie(username)}\n                className={`user-avatar user-avatar-menu undragable ${\n                  this.state.avatarClassNameModifier\n                }`}\n              />\n            </div>\n          </Grid.Column>\n\n          <Grid.Column\n            width={10}\n            className=\"user-column-right\"\n            textAlign=\"left\">\n            <div className=\"user-column-right-content\">\n              <div>\n                <Header size=\"tiny\" style={usernameStyle}>\n                  {username}\n                </Header>\n              </div>\n\n              <div className=\"user-column-right-buttons\">\n                <Button\n                  size=\"small\"\n                  onClick={e => this.handleSignOut()}\n                  icon=\"power off\"\n                  className=\"user-column-right-button orange-button-dark\"\n                />\n                <Button\n                  size=\"small\"\n                  icon=\"setting\"\n                  className=\"user-column-right-button orange-button-dark\"\n                />\n              </div>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default MenuUser;\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\nimport { changeTokenPosition } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport Token from './Token';\r\n\r\nclass BalanceBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(token) {\r\n    store.dispatch(changeTokenPosition(token));\r\n  }\r\n\r\n  render() {\r\n    if (this.props.user)\r\n      return (\r\n        <div className=\"tokens-box\">{this.renderItems(this.props.tokens)}</div>\r\n      );\r\n\r\n    return (\r\n      <Message\r\n        warning\r\n        header=\"Sign in\"\r\n        content=\"Please sign in in order to see your balances and place bets.\"\r\n      />\r\n    );\r\n  }\r\n\r\n  renderItems = tokens => {\r\n    const tokensInBalance = _.filter(tokens, { position: 'balance-box' });\r\n\r\n    const toRender = (\r\n      <div>\r\n        {tokensInBalance.map(token => {\r\n          return (\r\n            <div\r\n              className={'balance-box-token'}\r\n              onClick={() => this.handleClick(token)}\r\n              key={token.id}>\r\n              <Token token={token} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n\r\n    return toRender;\r\n  };\r\n}\r\n\r\nexport default BalanceBox;\r\n","import React, { Component } from 'react';\r\nimport { Grid, List, Label, Icon } from 'semantic-ui-react';\r\nimport { ICON } from '../../utils/constants';\r\nimport _ from 'lodash';\r\n\r\nimport BettingBoxToken from './BettingBoxToken';\r\nimport RangeSlider from './RangeSlider';\r\n\r\nclass BettingBox extends Component {\r\n  NUMBER_OF_BOXES = 4;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderBetInfo(bet, odds) {\r\n    const estimatedBetValue = bet.estimatedBetValue.toFixed(2);\r\n    const estimatedReturn = (bet.estimatedBetValue * odds).toFixed(2);\r\n    let statusIcon, status, statusClassName;\r\n\r\n    switch (bet.state) {\r\n      case 'pending': {\r\n        statusIcon = ICON.BET_PENDING;\r\n        break;\r\n      }\r\n\r\n      case 'won': {\r\n        statusClassName = 'bet-info-status-won';\r\n        statusIcon = ICON.BET_WON;\r\n        break;\r\n      }\r\n\r\n      case 'lost': {\r\n        statusClassName = 'bet-info-status-lost';\r\n        statusIcon = ICON.BET_LOST;\r\n        break;\r\n      }\r\n\r\n      case 'draw': {\r\n        statusIcon = ICON.BET_DRAW;\r\n        break;\r\n      }\r\n\r\n      case 'canceled': {\r\n        statusIcon = ICON.BET_CANCELED;\r\n        break;\r\n      }\r\n    }\r\n    status = bet.state;\r\n\r\n    return (\r\n      <div>\r\n        <List className=\"bet-info\">\r\n          <List.Item>\r\n            <Label className=\"orange-label-light\" horizontal>\r\n              PICKED TEAM\r\n            </Label>\r\n            <span>\r\n              <strong>{bet.team.displayName}</strong>\r\n            </span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Label className=\"orange-label-light\" horizontal>\r\n              STATUS\r\n            </Label>\r\n            <span className={statusClassName}>\r\n              <strong>{status}</strong> <Icon name={statusIcon} />\r\n            </span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Label className=\"orange-label-light\" horizontal>\r\n              ESTIMATED BET VALUE\r\n            </Label>\r\n            <span>\r\n              <strong>{estimatedBetValue}$</strong>\r\n            </span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Label className=\"orange-label-light\" horizontal>\r\n              ESTIMATED RETURN\r\n            </Label>\r\n            <span>\r\n              <strong>{estimatedReturn}$</strong>\r\n            </span>\r\n          </List.Item>\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTokensToBet(tokens) {\r\n    const items = [];\r\n\r\n    for (let i = 0; i < this.NUMBER_OF_BOXES; i++) {\r\n      const token = tokens[i] || null;\r\n      items.push(\r\n        <Grid.Row className=\"betting-box-row\" key={i}>\r\n          <Grid.Column>\r\n            <BettingBoxToken token={token} />\r\n          </Grid.Column>\r\n          <Grid.Column verticalAlign=\"middle\">\r\n            <RangeSlider\r\n              prices={this.props.prices}\r\n              token={token}\r\n              toBet={tokens}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      );\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  renderTokensBet(tokens) {\r\n    const items = [];\r\n\r\n    for (let i = 0; i < this.NUMBER_OF_BOXES; i++) {\r\n      const token = tokens[i] || null;\r\n      items.push(\r\n        <Grid.Row className=\"betting-box-row\" key={i}>\r\n          <Grid.Column width={7}>\r\n            <BettingBoxToken token={token} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      );\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  render() {\r\n    const { tokens, bet, teams } = this.props;\r\n\r\n    if (!bet)\r\n      return (\r\n        <div className=\"betting-box\">\r\n          <Grid style={{ paddingTop: '1em' }} columns=\"equal\">\r\n            {this.renderTokensToBet(tokens)}\r\n          </Grid>\r\n        </div>\r\n      );\r\n\r\n    const odds = _.find(teams, { id: bet.teamID }).odds;\r\n\r\n    return (\r\n      <div className=\"betting-box\">\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row>\r\n            <Grid.Column>{this.renderTokensBet(bet.tokensBet)}</Grid.Column>\r\n            <Grid.Column>{this.renderBetInfo(bet, odds)}</Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BettingBox;\r\n","import React, { Component } from 'react';\r\nimport { Segment, Icon } from 'semantic-ui-react';\r\nimport Token from './Token';\r\nimport { changeTokenPosition } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\n\r\nclass BettingBoxToken extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(token) {\r\n    store.dispatch(changeTokenPosition(token));\r\n  }\r\n\r\n  render() {\r\n    const { token } = this.props;\r\n\r\n    if (token) {\r\n      const style = token.balance\r\n        ? { cursor: 'pointer' }\r\n        : { cursor: 'default' };\r\n      return (\r\n        <div>\r\n          <Segment\r\n            style={style}\r\n            onClick={() => this.handleClick(token)}\r\n            textAlign=\"center\"\r\n            className={'betting-box-segment betting-box-segment-filled'}>\r\n            <Token\r\n              isBettingBox={true}\r\n              token={token}\r\n              className=\"token-dropped\"\r\n            />\r\n          </Segment>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Segment\r\n          size={'big'}\r\n          textAlign=\"center\"\r\n          className={'betting-box-segment'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BettingBoxToken;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Modal\r\n} from 'semantic-ui-react';\r\n\r\nimport { toggleModal } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport { Router } from '../../next-routes';\r\nimport TokenFromWei from '../../utils/TokenFromWei';\r\nimport PlaceBet from '../../utils/api/PlaceBet';\r\nimport Sleep from '../../utils/Sleep';\r\n\r\nclass ConfirmBetModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleConfirm = this.handleConfirm.bind(this);\r\n    this.closeFinalModal = this.closeFinalModal.bind(this);\r\n    this.state = {\r\n      isConfirmButtonLoading: false,\r\n      confirmButtonIcon: false,\r\n      confirmButtonText: 'Confirm and place bet',\r\n      confirmButtonClassName: 'orange-button-dark',\r\n      isConfirmButtonDisabled: false,\r\n      isBackButtonDisabled: false\r\n    };\r\n  }\r\n\r\n  closeFinalModal() {\r\n    this.setState({\r\n      isFinalModalErrorOpen: false,\r\n      isFinalModalSuccessOpen: false\r\n    });\r\n    store.dispatch(toggleModal('confirmBetModal'));\r\n  }\r\n\r\n  async handleConfirm(match, pickedTeam, tokensToBet, user) {\r\n    if (this.state.isConfirmButtonDisabled) return;\r\n    this.setState({\r\n      isConfirmButtonLoading: true,\r\n      isConfirmButtonDisabled: true,\r\n      isBackButtonDisabled: true\r\n    });\r\n\r\n    const tokensBet = tokensToBet.map(token => {\r\n      return { id: token.id, amount: token.balance };\r\n    });\r\n\r\n    const api_response = await PlaceBet({\r\n      matchID: match._id,\r\n      teamID: pickedTeam.id,\r\n      betMakerID: user._id,\r\n      tokensBet\r\n    });\r\n\r\n    const { data } = api_response;\r\n\r\n    if (data.bet) {\r\n      this.setState({\r\n        isConfirmButtonLoading: false,\r\n        isBackButtonDisabled: false,\r\n        confirmButtonIcon: 'chevron down',\r\n        confirmButtonText: 'Bet placed successfuly'\r\n      });\r\n\r\n      await Sleep(400);\r\n\r\n      //Router.push(`/matches/${match._id}`);\r\n      window.location.href = window.location.href;\r\n    } else {\r\n      this.setState({\r\n        isConfirmButtonLoading: false,\r\n        isConfirmButtonDisabled: false,\r\n        isBackButtonDisabled: false,\r\n        confirmButtonIcon: 'exclamation',\r\n        confirmButtonText: 'Placing bet failed',\r\n        confirmButtonClassName: 'error-button'\r\n      });\r\n    }\r\n  }\r\n\r\n  renderTeamLogos(match, pickedTeam) {\r\n    const notPickedTeam =\r\n      pickedTeam.id === match.teams[0].id ? match.teams[1] : match.teams[0];\r\n\r\n    return (\r\n      <div className=\"confirm-bet-modal-img-div\">\r\n        <div className=\"confirm-bet-modal-img-divider\" />\r\n        <Image\r\n          className=\"confirm-bet-modal-img confirm-bet-modal-img-picked\"\r\n          src={`/img/${pickedTeam.logo}`}\r\n        />\r\n\r\n        <Image\r\n          className=\"confirm-bet-modal-img confirm-bet-modal-img-notpicked\"\r\n          src={`/img/${notPickedTeam.logo}`}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let { open, tokensToBet, pickedTeam, user, match } = this.props;\r\n\r\n    const tokenList = tokensToBet.map(curr => {\r\n      return (\r\n        <List.Item as=\"p\" key={curr.symbol}>\r\n          <Icon name=\"right triangle\" />\r\n          {`${TokenFromWei(curr)} ${curr.symbol}`}\r\n        </List.Item>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Modal size=\"tiny\" open={open}>\r\n        <Modal.Header className=\"modal-header\">\r\n          <Icon style={{ marginRight: '1em' }} name=\"check\" />\r\n          You are about to place a bet\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <Grid>\r\n              <Grid.Column width={10}>\r\n                <Header>Your bet: </Header>\r\n                <List className=\"confirm-bet-modal-ul font-dark-orange\" as=\"ul\">\r\n                  {tokenList}\r\n                </List>\r\n                <Header>\r\n                  Picked Team:\r\n                  <span className=\"font-dark-orange\">\r\n                    {' ' + pickedTeam.displayName}\r\n                  </span>\r\n                </Header>\r\n                <span className=\"odds-message\">\r\n                  <Icon name=\"info circle\" />\r\n                  Odds are now {pickedTeam.odds} but keep in mind they can\r\n                  change prior to the game start based on future bets.\r\n                </span>\r\n              </Grid.Column>\r\n              <Grid.Column width={6}>\r\n                {this.renderTeamLogos(match, pickedTeam)}\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            disabled={this.state.isBackButtonDisabled}\r\n            className=\"dark-button\"\r\n            onClick={e => store.dispatch(toggleModal('confirmBetModal'))}>\r\n            Back\r\n          </Button>\r\n          <Button\r\n            loading={this.state.isConfirmButtonLoading}\r\n            icon={this.state.confirmButtonIcon}\r\n            className={this.state.confirmButtonClassName}\r\n            content={this.state.confirmButtonText}\r\n            onClick={e =>\r\n              this.handleConfirm(match, pickedTeam, tokensToBet, user)\r\n            }\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmBetModal;\r\n","import React, { Component } from 'react';\r\nimport { Button, Header, Icon, Message, Modal } from 'semantic-ui-react';\r\n\r\nimport { toggleErrorModal } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\n\r\nclass ErrorModal extends Component {\r\n  render() {\r\n    let { modal } = this.props;\r\n    const list = modal.reasons.map(curr => {\r\n      return <li key={curr}>{curr}</li>;\r\n    });\r\n\r\n    return (\r\n      <Modal size=\"tiny\" open={modal.isOpen} closeOnDocumentClick={true}>\r\n        <Modal.Header className=\"font-error\">\r\n          <Icon name=\"times circle outline\" />\r\n          {modal.head}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description className=\"font-error\">\r\n            <ul>{list}</ul>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            className=\"dark-orange-bg font-white\"\r\n            onClick={e => store.dispatch(toggleErrorModal())}>\r\n            OK\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorModal;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Reveal } from 'semantic-ui-react';\r\nimport makeBlockie from 'ethereum-blockies-base64';\r\nimport Token from './Token';\r\n\r\nclass LastBets extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderTokens(tokens, bet) {\r\n    const markup = tokens.map(token => {\r\n      return (\r\n        <Grid.Column\r\n          key={bet.betMakerID + token.id}\r\n          className=\"last-bets-token-column\"\r\n          width={4}>\r\n          {<Token token={token} />}\r\n        </Grid.Column>\r\n      );\r\n    });\r\n\r\n    return markup;\r\n  }\r\n\r\n  renderLastBets(bets) {\r\n    const markup = bets.map(bet => {\r\n      let { betMakerID, betMakerUsername, tokensBet, team } = bet;\r\n\r\n      return (\r\n        <Grid.Row key={betMakerID} className=\"last-bets-row\">\r\n          <Grid.Column width={3} verticalAlign=\"middle\">\r\n            <Reveal animated=\"rotate\">\r\n              <Reveal.Content visible>\r\n                <img\r\n                  src={makeBlockie(betMakerUsername)}\r\n                  className=\"user-avatar undragable\"\r\n                />\r\n              </Reveal.Content>\r\n              <Reveal.Content hidden>\r\n                <img\r\n                  src={`/img/${team.logo}`}\r\n                  className=\"user-avatar undragable img-team-reveal\"\r\n                />\r\n              </Reveal.Content>\r\n            </Reveal>\r\n          </Grid.Column>\r\n          <Grid.Column width={13} verticalAlign=\"middle\">\r\n            <Grid>\r\n              <Grid.Row>{this.renderTokens(tokensBet, bet)}</Grid.Row>\r\n            </Grid>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      );\r\n    });\r\n\r\n    return markup;\r\n  }\r\n\r\n  render() {\r\n    const { bets } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Grid padded>{this.renderLastBets(bets)}</Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LastBets;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Icon, Label, List, Header } from 'semantic-ui-react';\r\nimport DateFormatter from '../../utils/DateFormatter';\r\nimport { ICON } from '../../utils/constants';\r\n\r\nclass MatchDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { match } = this.props;\r\n    const {\r\n      teams,\r\n      league,\r\n      numberOfBets,\r\n      highestBet,\r\n      tokensInPool,\r\n      serie,\r\n      startTime,\r\n      state\r\n    } = match;\r\n\r\n    if (!serie) serie = '';\r\n    if (!league) league = { displayName: '' };\r\n\r\n    const date = DateFormatter(startTime);\r\n\r\n    let aproxIcon;\r\n    if (date.isFuture) {\r\n      aproxIcon = ICON.GAME_SCHEDULED;\r\n    } else {\r\n      if (state === 'finalized' || state === 'canceled') {\r\n        aproxIcon = ICON.GAME_FINISHED;\r\n      } else {\r\n        aproxIcon = ICON.GAME_STARTED;\r\n      }\r\n    }\r\n\r\n    if (match)\r\n      return (\r\n        <div style={{ marginTop: '0.5em' }}>\r\n          <Grid>\r\n            <Grid.Row columns=\"1\">\r\n              <Grid.Column textAlign=\"right\">\r\n                <Label className=\"orange-label-light\" size=\"large\">\r\n                  <Icon name={ICON.DATE} />\r\n                  {date.formatedDate}\r\n                </Label>\r\n                <Label className=\"orange-label-light\" size=\"large\">\r\n                  <Icon name={aproxIcon} />\r\n                  {date.aprox}\r\n                </Label>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row columns=\"2\">\r\n              <Grid.Column>\r\n                <Header dividing as=\"h4\">\r\n                  Match statistics\r\n                </Header>\r\n                <List className=\"details-list\">\r\n                  <List.Item>\r\n                    <List.Icon name=\"dollar sign\" className=\"font-dark\" />\r\n                    <List.Content>\r\n                      <List.Header>{`${(\r\n                        teams[0].totalDollarsBet + teams[1].totalDollarsBet\r\n                      ).toFixed(2)}$`}</List.Header>\r\n                      <List.Description>Total bet</List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"ticket alternate\" className=\"font-dark\" />\r\n                    <List.Content>\r\n                      <List.Header>{numberOfBets}</List.Header>\r\n                      <List.Description>Bets total</List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"chess king\" className=\"font-dark\" />\r\n                    <List.Content>\r\n                      <List.Header>{`${highestBet.toFixed(2)}$`}</List.Header>\r\n                      <List.Description>Highest bet</List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"ethereum\" className=\"font-dark\" />\r\n                    <List.Content>\r\n                      <List.Header>{tokensInPool.length}</List.Header>\r\n                      <List.Description>\r\n                        Different tokens in pool\r\n                      </List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                </List>\r\n              </Grid.Column>\r\n              <Grid.Column verticalAlign=\"middle\" textAlign=\"center\">\r\n                <img\r\n                  className=\"league-image undragable\"\r\n                  src={`/img/${league.logo}`}\r\n                />\r\n                <p className=\"league-caption\">{`${\r\n                  league.displayName\r\n                } ${serie}`}</p>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n      );\r\n\r\n    return '';\r\n  }\r\n}\r\n\r\nexport default MatchDetails;\r\n","import Big from 'big.js';\r\nimport React, { Component } from 'react';\r\nimport Slider from 'react-rangeslider';\r\nimport { changeTokenAmount } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport EstimateBetValue from '../../utils/EstimateBetValue';\r\n\r\nclass RangeSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRange = this.handleRange.bind(this);\r\n    this.maxValue = 2000;\r\n    this.lastValue = this.maxValue;\r\n\r\n    this.state = { value: this.maxValue };\r\n  }\r\n\r\n  handleRange = (val, token) => {\r\n    if (!token) return;\r\n    this.setState({ value: val });\r\n    const change = val / this.maxValue;\r\n    let newBalance = `${Big(token.initialBalance)\r\n      .mul(change)\r\n      .toFixed(0)}`;\r\n    newBalance = newBalance < 1 ? 1 : newBalance;\r\n    token.balance = newBalance;\r\n    store.dispatch(changeTokenAmount(token));\r\n  };\r\n\r\n  render() {\r\n    const { token, toBet, prices } = this.props;\r\n\r\n    let className;\r\n    if (!token) {\r\n      className = 'range-slider-inactive';\r\n      if (this.lastValue !== this.state.value)\r\n        this.setState({ value: this.maxValue });\r\n      this.lastValue = this.state.value;\r\n    }\r\n\r\n    return (\r\n      <Slider\r\n        className={className}\r\n        min={1}\r\n        max={this.maxValue}\r\n        step={10}\r\n        tooltip={false}\r\n        value={this.state.value}\r\n        onChange={val => this.handleRange(val, token)}\r\n        onChangeComplete={() => {\r\n          EstimateBetValue(toBet, prices);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RangeSlider;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Image, Label, Rail, Segment } from 'semantic-ui-react';\r\nimport { pickTeam } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport DateFormatter from '../../utils/DateFormatter';\r\n\r\nclass Teams extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleClick = (user, team, pickedTeam) => {\r\n    if (user) {\r\n      if (user.bet) return;\r\n      if (pickedTeam.id === team.id) {\r\n        store.dispatch(pickTeam({}));\r\n        return;\r\n      }\r\n      store.dispatch(pickTeam(team));\r\n    }\r\n  };\r\n\r\n  renderTeamLabel(user, team, pickedTeam) {\r\n    const style = user && !user.bet ? { cursor: 'pointer' } : {};\r\n    let nameClassNameModifier = '';\r\n    let labelClassNameModifier = '';\r\n\r\n    if (user.bet) {\r\n      if (user.bet.teamID == team.id) {\r\n        labelClassNameModifier = ' team-label-picked';\r\n        nameClassNameModifier = ' team-name-picked';\r\n      }\r\n    } else {\r\n      if (pickedTeam.id == team.id)\r\n        labelClassNameModifier = ' team-label-picked';\r\n      nameClassNameModifier = ' team-name-picked';\r\n    }\r\n\r\n    return (\r\n      <div\r\n        onClick={event => {\r\n          this.handleClick(user, team, pickedTeam);\r\n        }}>\r\n        <Label\r\n          size=\"huge\"\r\n          style={style}\r\n          className={`team-label${labelClassNameModifier}`}>\r\n          <Image className=\"undragable\" src={`/img/${team.logo}`} />\r\n        </Label>\r\n        <div style={style}>\r\n          <p className={`team-name${nameClassNameModifier}`}>\r\n            {team.displayName}\r\n          </p>\r\n        </div>{' '}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderOdds(match, index) {\r\n    const percentageAndOdds = (\r\n      <div>\r\n        <p className=\"team-percentage\">{match.teams[index].percentages}%</p>\r\n        <p className=\"team-odds\">x {match.teams[index].odds.toFixed(2)}</p>\r\n      </div>\r\n    );\r\n\r\n    if (index === 0)\r\n      return (\r\n        <Label color=\"black\" ribbon>\r\n          {percentageAndOdds}\r\n        </Label>\r\n      );\r\n\r\n    return (\r\n      <Label color=\"black\" ribbon=\"right\">\r\n        {percentageAndOdds}\r\n      </Label>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let { match, pickedTeam, user } = this.props;\r\n    const { bet } = user;\r\n\r\n    if (match)\r\n      return (\r\n        <div>\r\n          <Grid className=\"teams-grid\" padded>\r\n            <Grid.Row>\r\n              <Grid.Column />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column width={2}>{this.renderOdds(match, 0)}</Grid.Column>\r\n\r\n              <Grid.Column width={5} verticalAlign=\"middle\" textAlign=\"center\">\r\n                {this.renderTeamLabel(user, match.teams[0], pickedTeam)}\r\n              </Grid.Column>\r\n\r\n              <Grid.Column width={2} verticalAlign=\"middle\" textAlign=\"center\">\r\n                <Label color=\"black\">VS</Label>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column width={5} verticalAlign=\"middle\" textAlign=\"center\">\r\n                {this.renderTeamLabel(user, match.teams[1], pickedTeam)}\r\n              </Grid.Column>\r\n\r\n              <Grid.Column width={2}>{this.renderOdds(match, 1)}</Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column />\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n      );\r\n\r\n    return '';\r\n  }\r\n}\r\n\r\nexport default Teams;\r\n","import React from 'react';\r\nimport { Image, Label } from 'semantic-ui-react';\r\nimport TokenFromWei from '../../utils/TokenFromWei';\r\n\r\nexport default props => {\r\n  const { token, isBettingBox } = props;\r\n\r\n  if (isBettingBox || token.balance)\r\n    return (\r\n      <Label className=\"token balancebox-token\">\r\n        <span>{`${TokenFromWei(token, true)}`}</span>\r\n        <Image\r\n          className=\"undragable\"\r\n          spaced=\"left\"\r\n          src={`/img/${token.logo}`}\r\n        />\r\n      </Label>\r\n    );\r\n\r\n  if (token)\r\n    return (\r\n      <Label className=\"token lastbets-token\">\r\n        <span className=\"lastbets-token-span\">{`${TokenFromWei(\r\n          token,\r\n          true\r\n        )}`}</span>\r\n        <Image\r\n          className=\"undragable\"\r\n          spaced=\"left\"\r\n          src={`/img/${token.logo}`}\r\n        />\r\n      </Label>\r\n    );\r\n\r\n  return <Label className=\"token lastbets-token\" />;\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass WinningsBox extends Component {\r\n  render() {\r\n    const { bet } = this.props;\r\n\r\n    // switch lost, won, pending, draw\r\n\r\n    return <h3>Not yet implemented</h3>;\r\n  }\r\n}\r\n\r\nexport default WinningsBox;\r\n","const config = {\r\n  backend: process.env.BACKEND_URL || 'http://localhost:5000'\r\n};\r\n\r\nmodule.exports = config;\r\n","const routes = require('next-routes')();\r\n\r\nroutes.add('match', '/matches/:id', '/matches/match');\r\n\r\nmodule.exports = routes;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Grid, Label, List, Icon, Header } from 'semantic-ui-react';\r\n\r\nimport Layout from '../../components/Layout/Layout';\r\nimport BettingBox from '../../components/match/BettingBox';\r\nimport ConfirmBetModal from '../../components/match/ConfirmBetModal';\r\nimport ErrorModal from '../../components/match/ErrorModal';\r\nimport Teams from '../../components/match/Teams';\r\nimport BalanceBox from '../../components/match/BalanceBox';\r\nimport {\r\n  toggleErrorModal,\r\n  toggleModal,\r\n  addTokens\r\n} from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport '../../static/css/match.css';\r\nimport CookieCall from '../../utils/CookieCall';\r\nimport ServerSideRedirect from '../../utils/SeverSideRedirect';\r\nimport MatchDetails from '../../components/match/MatchDetails';\r\nimport LastBets from '../../components/match/LastBets';\r\nimport WinningsBox from '../../components/match/WinningsBox';\r\n\r\nclass Match extends Component {\r\n  static async getInitialProps(props) {\r\n    const { req, res } = props;\r\n    const matchID = props.query.id;\r\n\r\n    const api_response = await CookieCall(req, `/api/match_info?id=${matchID}`);\r\n\r\n    const data = api_response.data;\r\n\r\n    const errorURL = '/404';\r\n\r\n    if (!data) {\r\n      ServerSideRedirect(res, errorURL);\r\n    }\r\n\r\n    const matchInfo = { ...data };\r\n\r\n    return { matchInfo };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    const { tokens, user } = this.props.initial.matchInfo;\r\n\r\n    //store.dispatch(updatePrices(prices));\r\n    this.addTokens(user.balances);\r\n  }\r\n\r\n  async addTokens(userBalances) {\r\n    if (userBalances) store.dispatch(addTokens(userBalances));\r\n  }\r\n\r\n  handleClick(event, tokensToBet) {\r\n    event.preventDefault();\r\n    const errorHead = 'You forgot to do the following';\r\n    const errors = [];\r\n    if (!this.props.user) errors.push('Please log in to place bets.');\r\n    if (tokensToBet.length === 0)\r\n      errors.push('Please place at least one token in order to place a bet.');\r\n    if (_.isEmpty(this.props.pickedTeam)) errors.push('Please pick a team.');\r\n    if (errors.length > 0) {\r\n      store.dispatch(toggleErrorModal(errorHead, errors));\r\n      return;\r\n    }\r\n\r\n    store.dispatch(toggleModal('confirmBetModal'));\r\n  }\r\n\r\n  render() {\r\n    const { match, user } = this.props.initial.matchInfo;\r\n    console.log(match);\r\n    const {\r\n      pickedTeam,\r\n      prices,\r\n      tokens,\r\n      betValue,\r\n      confirmBetModal\r\n    } = this.props;\r\n\r\n    return (\r\n      <Grid relaxed>\r\n        <ErrorModal modal={this.props.errorModal} />\r\n        <ConfirmBetModal\r\n          open={confirmBetModal.isOpen}\r\n          tokensToBet={tokens.toBet}\r\n          pickedTeam={pickedTeam}\r\n          user={user}\r\n          match={match}\r\n        />\r\n\r\n        <Grid.Column computer={8} mobile={16} tablet={16}>\r\n          <Teams user={user} match={match} pickedTeam={pickedTeam} />\r\n\r\n          <MatchDetails match={match} />\r\n\r\n          <h2>Last bets</h2>\r\n          <LastBets bets={match.bets} />\r\n        </Grid.Column>\r\n        <Grid.Column computer={8} mobile={16} tablet={16}>\r\n          <h2>{user.bet ? 'Your bet' : 'Place bet'}</h2>\r\n          <BettingBox\r\n            teams={match.teams}\r\n            prices={prices}\r\n            tokens={tokens.toBet}\r\n            bet={user.bet}\r\n          />\r\n          {user.bet ? (\r\n            ''\r\n          ) : (\r\n            <div className=\"bet-container\">\r\n              <Button\r\n                icon\r\n                onClick={event => this.handleClick(event, tokens.toBet)}\r\n                className=\"button-bet\"\r\n                size=\"large\"\r\n                color=\"black\">\r\n                Bet\r\n                <Icon style={{ marginLeft: '1em !important' }} name=\"check\" />\r\n              </Button>\r\n              <List relaxed floated=\"right\" className=\"info-bet\">\r\n                {this.renderBetValue(betValue)}\r\n                {this.renderEstimatedReturn(betValue)}\r\n              </List>\r\n            </div>\r\n          )}\r\n\r\n          <h2>{user.bet ? 'Winnings' : 'Balances'}</h2>\r\n          {user.bet ? (\r\n            <WinningsBox bet={user.bet} />\r\n          ) : (\r\n            <BalanceBox user={user} tokens={tokens.wallet} />\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  renderBetValue(betValue) {\r\n    const { tokens } = this.props;\r\n    if (tokens.toBet.length > 0)\r\n      return (\r\n        <List.Item>\r\n          <Label className=\"orange-label-light\" horizontal>\r\n            ESTIMATED BET VALUE\r\n          </Label>\r\n          <span className=\"font-dark\">\r\n            <strong>{` ${betValue.toFixed(2)}$`}</strong>\r\n          </span>\r\n        </List.Item>\r\n      );\r\n\r\n    return '';\r\n  }\r\n\r\n  renderEstimatedReturn(betValue) {\r\n    const { pickedTeam, tokens } = this.props;\r\n    if (tokens.toBet.length !== 0 && !_.isEmpty(pickedTeam)) {\r\n      return (\r\n        <List.Item>\r\n          <Label className=\"orange-label-light\" horizontal>\r\n            ESTIMATED RETURN\r\n          </Label>\r\n          <span className=\"font-dark\">\r\n            <strong>{` ${(parseFloat(betValue) * pickedTeam.odds).toFixed(\r\n              2\r\n            )}$`}</strong>\r\n          </span>\r\n        </List.Item>\r\n      );\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tokens: state.match.tokens,\r\n    betValue: state.match.betValue,\r\n    prices: state.match.prices,\r\n    pickedTeam: state.match.pickedTeam,\r\n    errorModal: state.match.errorModal,\r\n    confirmBetModal: state.match.confirmBetModal,\r\n    user: state.login.user\r\n  };\r\n};\r\n\r\nexport default Layout(connect(mapStateToProps)(Match));\r\n","import matchReducer from './match/matchReducer';\r\nimport loginReducer from './layout/loginReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst lastAction = (state = null, action) => {\r\n  return action;\r\n};\r\n\r\nexport default combineReducers({\r\n  login: loginReducer,\r\n  match: matchReducer,\r\n  lastAction: lastAction\r\n});\r\n","import axios from 'axios';\r\n\r\nexport function login(user) {\r\n  return {\r\n    type: 'LOG_IN',\r\n    user: user\r\n  };\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n  await axios.get('/logout');\r\n  dispatch({ type: 'LOG_OUT' });\r\n};\r\n","import _ from 'lodash';\r\n\r\nconst initialState = {\r\n  user: null\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  let newState = _.cloneDeep(state);\r\n\r\n  switch (action.type) {\r\n    case 'LOG_OUT': {\r\n      newState = { user: false };\r\n      break;\r\n    }\r\n\r\n    case 'LOG_IN': {\r\n      newState.user = action.user || false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nexport default loginReducer;\r\n","export function addTokens(tokens) {\r\n  return {\r\n    type: 'ADD_TOKENS',\r\n    tokens\r\n  };\r\n}\r\n\r\nexport function changeTokenPosition(token, pos) {\r\n  return {\r\n    type: 'CHANGE_POS',\r\n    token\r\n  };\r\n}\r\n\r\nexport function changeTokenAmount(token) {\r\n  return {\r\n    type: 'CHANGE_AMOUNT',\r\n    token\r\n  };\r\n}\r\n\r\nexport function updateEstimateBet(sum) {\r\n  return {\r\n    type: 'UPDATE_ESTIMATE_BET',\r\n    sum\r\n  };\r\n}\r\n\r\nexport function pickTeam(team) {\r\n  return {\r\n    type: 'PICK_TEAM',\r\n    team\r\n  };\r\n}\r\n\r\nexport function toggleErrorModal(head = '', reasons = []) {\r\n  return {\r\n    type: 'TOGGLE_ERROR_MODAL',\r\n    head: head,\r\n    reasons: reasons\r\n  };\r\n}\r\n\r\nexport function toggleModal(property) {\r\n  return {\r\n    type: 'TOGGLE_MODAL',\r\n    property\r\n  };\r\n}\r\n","import _ from 'lodash';\r\nimport EstimateBetValue from '../../utils/EstimateBetValue';\r\n\r\nconst initialState = {\r\n  tokens: { toBet: [], wallet: [] },\r\n  prices: {},\r\n  betValue: 0,\r\n  pickedTeam: {},\r\n  errorModal: { isOpen: false, head: '', reasons: [] },\r\n  confirmBetModal: { isOpen: false }\r\n};\r\n\r\nconst matchReducer = (state = initialState, action) => {\r\n  let newState = _.cloneDeep(state);\r\n\r\n  switch (action.type) {\r\n    case 'ADD_TOKENS': {\r\n      const tokens = action.tokens.map(token => {\r\n        return {\r\n          ...token,\r\n          position: 'balance-box',\r\n          initialBalance: token.balance\r\n        };\r\n      });\r\n\r\n      newState.tokens.wallet = tokens;\r\n      break;\r\n    }\r\n\r\n    case 'CHANGE_POS': {\r\n      if (action.token.position === 'balance-box') {\r\n        action.token.position = 'betting-box';\r\n        newState.tokens.toBet.push(action.token);\r\n        newState.tokens.wallet = newState.tokens.wallet.filter(\r\n          curr => curr.symbol != action.token.symbol\r\n        );\r\n      } else {\r\n        action.token.position = 'balance-box';\r\n        action.token.balance = action.token.initialBalance;\r\n        newState.tokens.wallet.push(action.token);\r\n        newState.tokens.toBet = newState.tokens.toBet.filter(\r\n          curr => curr.symbol != action.token.symbol\r\n        );\r\n      }\r\n\r\n      newState.betValue = EstimateBetValue(newState.tokens.toBet, false);\r\n\r\n      break;\r\n    }\r\n\r\n    case 'UPDATE_ESTIMATE_BET': {\r\n      newState.betValue = action.sum;\r\n      break;\r\n    }\r\n\r\n    case 'PICK_TEAM': {\r\n      newState.pickedTeam = action.team;\r\n      break;\r\n    }\r\n\r\n    case 'TOGGLE_MODAL': {\r\n      newState[action.property].isOpen = !newState[action.property].isOpen;\r\n      break;\r\n    }\r\n\r\n    case 'TOGGLE_ERROR_MODAL': {\r\n      newState.errorModal.isOpen = !state.errorModal.isOpen;\r\n      newState.errorModal.head = action.head;\r\n      newState.errorModal.reasons = action.reasons;\r\n      break;\r\n    }\r\n\r\n    case 'LOG_OUT': {\r\n      newState = { ...initialState };\r\n      newState.prices = state.prices;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nexport default matchReducer;\r\n","import rootReducer from '.';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport { backend } from '../config/config';\r\n\r\nconst CookieCall = async (req, path) => {\r\n  let response;\r\n\r\n  if (req) {\r\n    if (req.headers.cookie) {\r\n      response = await axios.get(`${backend}${path}`, {\r\n        headers: { cookie: req.headers.cookie }\r\n      });\r\n    } else {\r\n      response = await axios.get(`${backend}${path}`);\r\n    }\r\n  } else {\r\n    response = await axios.get(path);\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport default CookieCall;\r\n","const DateFormatter = date => {\r\n  date = new Date(date);\r\n  const hours =\r\n    date.getHours().toString().length > 1\r\n      ? date.getHours()\r\n      : `0${date.getHours()}`;\r\n\r\n  const minutes =\r\n    date.getMinutes().toString().length > 1\r\n      ? date.getMinutes()\r\n      : `0${date.getMinutes()}`;\r\n\r\n  let formatedDate = `${date.getDate()}/${date.getMonth() +\r\n    1}/${date.getFullYear()} ${hours}:${minutes}`;\r\n\r\n  const now = new Date();\r\n\r\n  let difference;\r\n  let aprox;\r\n\r\n  if (date > now) {\r\n    difference = (date.getTime() - now.getTime()) / 60000;\r\n    aprox = `${minutesToWord(difference)} from now`;\r\n    return { formatedDate, aprox, isFuture: true };\r\n  } else {\r\n    difference = (now.getTime() - date.getTime()) / 60000;\r\n    aprox = `${minutesToWord(difference)} ago`;\r\n    return { formatedDate, aprox, isFuture: false };\r\n  }\r\n};\r\n\r\nconst minutesToWord = minutes => {\r\n  minutes = Math.round(minutes);\r\n  if (minutes < 60) {\r\n    if (minutes === 1) return '1 minute';\r\n    else return `${minutes} minutes`;\r\n  } else if (minutes < 60 * 24) {\r\n    const hours = Math.round(minutes / 60);\r\n\r\n    if (hours === 1) return '1 hour';\r\n    else return `${hours} hours`;\r\n  } else {\r\n    const days = Math.round(minutes / (60 * 24));\r\n\r\n    if (days === 1) return '1 day';\r\n    else return `${days} days`;\r\n  }\r\n};\r\n\r\nexport default DateFormatter;\r\n","import Big from 'big.js';\r\nimport TokenFromWei from './TokenFromWei';\r\nimport store from '../redux/store';\r\nimport { updateEstimateBet } from '../redux/match/actions';\r\n\r\nconst EstimateBetValue = (tokensToBet, dispatch = true) => {\r\n  let sum = tokensToBet.reduce((sum, token) => {\r\n    return (\r\n      sum +\r\n      parseFloat(\r\n        Big(TokenFromWei(token))\r\n          .mul(token.price.USD)\r\n          .toFixed(2)\r\n      )\r\n    );\r\n  }, 0);\r\n\r\n  if (sum === '00.00') sum = '0';\r\n\r\n  if (dispatch) store.dispatch(updateEstimateBet(sum));\r\n\r\n  return sum;\r\n};\r\n\r\nexport default EstimateBetValue;\r\n","const MINIMUM_PASSWORD_LENGTH = 8;\r\n\r\nconst isPasswordOk = (password, repeatedPassword) => {\r\n  if (password.length < MINIMUM_PASSWORD_LENGTH)\r\n    return `Password should contain at least ${MINIMUM_PASSWORD_LENGTH} characters.`;\r\n\r\n  if (password !== repeatedPassword) return 'Passwords do not match.';\r\n  return true;\r\n};\r\n\r\nexport default isPasswordOk;\r\n","const MAXIMUM_USERNAME_LENGTH = 20;\r\nconst MINIMUM_USERNAME_LENGTH = 3;\r\n\r\nconst isUsernameOk = username => {\r\n  if (username.length < MINIMUM_USERNAME_LENGTH)\r\n    return `Username should be at least ${MINIMUM_USERNAME_LENGTH} characters long.`;\r\n\r\n  if (username.length > MAXIMUM_USERNAME_LENGTH)\r\n    return `Username should be maximum ${MAXIMUM_USERNAME_LENGTH} characters long.`;\r\n\r\n  return true;\r\n};\r\n\r\nexport default isUsernameOk;\r\n","const isEmailOk = email => {\r\n  if (!isEmail(email))\r\n    return 'This does not look like a proper e-mail address.';\r\n  return true;\r\n};\r\n\r\nfunction isEmail(email) {\r\n  return /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/.test(\r\n    email\r\n  );\r\n}\r\n\r\nexport default isEmailOk;\r\n","import Big from 'big.js';\r\n\r\nconst optimize = amount => {\r\n  const minimalAmountToDisplay = 0.0001;\r\n\r\n  amount = Big(amount);\r\n\r\n  if (\r\n    amount.cmp(minimalAmountToDisplay) === 1 ||\r\n    amount.cmp(minimalAmountToDisplay) === 0\r\n  ) {\r\n    return amount.round(4);\r\n  }\r\n\r\n  return `< ${minimalAmountToDisplay}`;\r\n};\r\n\r\nexport default optimize;\r\n","import { Router } from '../next-routes';\r\nconst ServerSideRedirect = (res, path) => {\r\n  if (res) {\r\n    res.writeHead(302, {\r\n      Location: path\r\n    });\r\n    res.end();\r\n  } else {\r\n    Router.pushRoute(path);\r\n  }\r\n};\r\n\r\nexport default ServerSideRedirect;\r\n","const Sleep = ms => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n\r\nexport default Sleep;\r\n","import Optimize from './OptimizeTokenAmount';\r\nimport Big from 'big.js';\r\n\r\nconst getScientificNotation = decimals => {\r\n  const number = decimals - 1;\r\n\r\n  return `10e+${number}`;\r\n};\r\n\r\nexport default (token, optimize = false) => {\r\n  const amount = token.balance ? token.balance : token.amount;\r\n  const { decimals } = token;\r\n\r\n  // console.log(\r\n  //   'I divide ' +\r\n  //     Big(amount) +\r\n  //     'by ' +\r\n  //     getScientificNotation(decimals) +\r\n  //     ' and it gives me ' +\r\n  //     Big(amount)\r\n  //       .div(getScientificNotation(decimals))\r\n  //       .toFixed()\r\n  // );\r\n\r\n  if (optimize)\r\n    return `${Optimize(\r\n      Big(amount)\r\n        .div(getScientificNotation(decimals))\r\n        .toFixed()\r\n    )}`;\r\n\r\n  return `${Big(amount)\r\n    .div(getScientificNotation(decimals))\r\n    .toFixed()}`;\r\n};\r\n","import axios from 'axios';\r\n\r\nconst PlaceBet = async bet => {\r\n  const data = {\r\n    matchID: bet.matchID,\r\n    teamID: bet.teamID,\r\n    betMakerID: bet.betMakerID,\r\n    tokensBet: bet.tokensBet\r\n  };\r\n\r\n  const response = await axios({\r\n    method: 'post',\r\n    url: '/place_bet',\r\n    data: data\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport default PlaceBet;\r\n","export const ICON = {\r\n  DATE: 'calendar alternate outline',\r\n  GAME_SCHEDULED: 'hourglass start',\r\n  GAME_STARTED: 'hourglass half',\r\n  GAME_FINISHED: 'hourglass end',\r\n  BET_PENDING: 'stopwatch',\r\n  BET_WON: 'trophy',\r\n  BET_LOST: 'minus',\r\n  BET_DRAW: 'law',\r\n  BET_CANCELED: 'calendar times'\r\n};\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"big.js\");","module.exports = require(\"ethereum-blockies-base64\");","module.exports = require(\"lodash\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-rangeslider\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"semantic-ui-react\");"],"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A;AAHA;AAQA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAQA;;;;AAnJA;AACA;AAqJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAHA;AAQA;AACA;AACA;AAGA;AACA;AACA;AAHA;AAOA;;;;AA5CA;AACA;AA8CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAYA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;AAEA;;;;;;AACA;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;;AADA;AAOA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;;AACA;AACA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;;;;;;;;;;;;;;;AAUA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AA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EA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA7DA;AACA;AA+DA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAMA;AAAA;AAAA;AADA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AASA;AACA;AAVA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAYA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;;;;;;;;;ACrBA;AAAA;AACA;AACA;AAKA;AAKA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAQA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACxBA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AASA;AACA;AACA;AAHA;AACA;AATA;AAQA;AARA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}