{"version":3,"file":"static\\development\\pages\\matches\\match.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Layout/Layout.js","webpack:///./components/Layout/Menu.js","webpack:///./components/Layout/MenuUser.js","webpack:///./components/match/BalanceBox.js","webpack:///./components/match/BettingBox.js","webpack:///./components/match/BettingBoxItem.js","webpack:///./components/match/ConfirmBetModal.js","webpack:///./components/match/ErrorModal.js","webpack:///./components/match/RangeSlider.js","webpack:///./components/match/Teams.js","webpack:///./components/match/Token.js","webpack:///./config/config.js","webpack:///./ethereum/EthLounge.js","webpack:///./ethereum/web3.js","webpack:///./next-routes.js","webpack:///./pages/matches/match.js","webpack:///./redux/index.js","webpack:///./redux/layout/actions.js","webpack:///./redux/layout/loginReducer.js","webpack:///./redux/match/actions.js","webpack:///./redux/match/matchReducer.js","webpack:///./redux/store.js","webpack:///./utils/CookieCall.js","webpack:///./utils/CryptoPrices.js","webpack:///./utils/EstimateBetValue.js","webpack:///./utils/GetTokenPrice.js","webpack:///./utils/OptimizeTokenAmount.js","webpack:///./utils/TokenFromWei.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"big.js\"","webpack:///external \"ethereum-blockies-base64\"","webpack:///external \"lodash\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-dnd\"","webpack:///external \"react-dnd-html5-backend\"","webpack:///external \"react-rangeslider\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-thunk\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React, { Component } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Head from 'next/head';\r\nimport { Provider } from 'react-redux';\r\nimport Menu from './Menu';\r\nimport store from '../../redux/store';\r\nimport '../../static/css/layout.css';\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport 'react-rangeslider/lib/index.css';\r\nimport axios from 'axios';\r\nimport { login } from '../../redux/layout/actions';\r\nimport { backend } from '../../config/config';\r\nimport CookieCall from '../../utils/CookieCall';\r\n\r\nconst layout = ChildPage =>\r\n  class extends Component {\r\n    static async getInitialProps(initialProps) {\r\n      const { req } = initialProps;\r\n      let res;\r\n\r\n      let api_response;\r\n\r\n      try {\r\n        api_response = await CookieCall(req, '/api/current_user');\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      const user = api_response.data;\r\n\r\n      let props = { user };\r\n\r\n      const getInitialProps = ChildPage.getInitialProps;\r\n\r\n      if (getInitialProps) {\r\n        let childPageProps = await getInitialProps(initialProps);\r\n\r\n        props = {\r\n          ...props,\r\n          ...childPageProps\r\n        };\r\n      }\r\n\r\n      return props;\r\n    }\r\n\r\n    componentWillMount() {\r\n      store.dispatch(login(this.props.user));\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Provider store={store}>\r\n          <div>\r\n            <Head>\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"\r\n              />\r\n            </Head>\r\n            <Menu user={this.props.user} />\r\n            <Container>\r\n              <ChildPage initial={this.props} />\r\n              <h2>Footer</h2>\r\n            </Container>\r\n          </div>\r\n        </Provider>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default layout;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Menu,\r\n  Image,\r\n  Icon,\r\n  Modal,\r\n  Message,\r\n  Form\r\n} from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../redux/store';\r\nimport axios from 'axios';\r\nimport MenuUser from './MenuUser';\r\n\r\nclass MenuExampleSizeLarge extends Component {\r\n  constructor(props) {\r\n    console.log('state in constructor of menu', store.getState());\r\n    super(props);\r\n    this.handleSignUp = this.handleSignUp.bind(this);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      password_2: '',\r\n      signUpErrors: [],\r\n      signUpOpen: false,\r\n      signInOpen: false,\r\n      avatarClassNameModifier: ''\r\n    };\r\n  }\r\n\r\n  renderRightMenu(user) {\r\n    switch (user) {\r\n      case false: {\r\n        return (\r\n          <div>\r\n            <Button\r\n              onClick={e => this.setState({ signInOpen: true })}\r\n              color=\"black\">\r\n              Sign in\r\n            </Button>\r\n            <span className=\"or\">or</span>\r\n            <Button\r\n              onClick={e => this.setState({ signUpOpen: true })}\r\n              color=\"black\"\r\n              className=\"margin-right-1em\">\r\n              Sign up\r\n            </Button>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      case null: {\r\n        return '';\r\n      }\r\n\r\n      default: {\r\n        const { username } = user;\r\n        const usernameStyle = { color: 'white' };\r\n        return (\r\n          <MenuUser\r\n            user={user}\r\n            avatarClassNameModifier={this.state.avatarClassNameModifier}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  async handleSignUp() {\r\n    // Client side check\r\n    const { username, password, password_2 } = this.state;\r\n    const signUpErrors = [];\r\n\r\n    if (username.length < 5) {\r\n      signUpErrors.push('Username should be at least 4 characters long.');\r\n    } else if (username.length > 20) {\r\n      signUpErrors.push('Username should be maximum 20 characters long.');\r\n    }\r\n\r\n    if (password.length >= 8) {\r\n      if (password !== password_2) {\r\n        signUpErrors.push('Passwords do not seem to match.');\r\n      }\r\n    } else {\r\n      c;\r\n    }\r\n\r\n    if (signUpErrors.length > 0) {\r\n      this.setState({ signUpErrors });\r\n      return;\r\n    }\r\n\r\n    const response = await axios({\r\n      method: 'post',\r\n      url: '/register',\r\n      data: { username, password },\r\n      config: { headers: { 'Content-Type': 'multipart/form-data' } }\r\n    });\r\n\r\n    console.log(response.data);\r\n\r\n    if (response.data.success) {\r\n    } else {\r\n      this.setState({\r\n        signUpErrors: [\r\n          'This username already exist. Try to pick something else.'\r\n        ]\r\n      });\r\n    }\r\n  }\r\n\r\n  isButtonDisabled(text) {\r\n    const ok = text.every(curr => curr.length > 0);\r\n\r\n    return !ok;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu inverted size=\"large\" className=\"top-menu\">\r\n        <Menu.Item>\r\n          <Image src=\"/static/img/logo.png\" />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Icon name=\"chess knight\" />\r\n          My Bets\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Icon name=\"angle double down\" />\r\n          Deposit\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Icon name=\"angle double up\" />\r\n          Withdraw\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Icon name=\"question circle outline\" />\r\n          FAQ\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          {this.renderRightMenu(this.props.user)}\r\n        </Menu.Item>\r\n\r\n        <Modal open={this.state.signUpOpen} size=\"small\">\r\n          <Modal.Header>Sign up as a new user</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Username</label>\r\n                <input\r\n                  onChange={e => this.setState({ username: e.target.value })}\r\n                  value={this.state.username}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  onChange={e => this.setState({ password: e.target.value })}\r\n                  value={this.state.password}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Repeat password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  onChange={e => this.setState({ password_2: e.target.value })}\r\n                  value={this.state.password_2}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n            {this.renderSingUpErrors(this.state.signUpErrors)}\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              className=\"dark-orange-bg font-white\"\r\n              onClick={e => {\r\n                this.setState({\r\n                  signUpOpen: false,\r\n                  username: '',\r\n                  password: '',\r\n                  password_2: ''\r\n                });\r\n              }}>\r\n              Back\r\n            </Button>\r\n\r\n            <Button\r\n              className=\"dark-button\"\r\n              onClick={e => this.handleSignUp()}\r\n              disabled={this.isButtonDisabled([\r\n                this.state.username,\r\n                this.state.password,\r\n                this.state.password_2\r\n              ])}>\r\n              Sign Up\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n\r\n        <Modal open={this.state.signInOpen} size=\"small\">\r\n          <Modal.Header>Sign in</Modal.Header>\r\n          <Modal.Content>\r\n            <Form id=\"login_form\" action=\"/login\" method=\"post\">\r\n              <Form.Field>\r\n                <label>Username</label>\r\n                <input\r\n                  name=\"username\"\r\n                  onChange={e => this.setState({ username: e.target.value })}\r\n                  value={this.state.username}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  onChange={e => this.setState({ password: e.target.value })}\r\n                  value={this.state.password}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              className=\"dark-orange-bg font-white\"\r\n              onClick={e => {\r\n                this.setState({\r\n                  signInOpen: false,\r\n                  username: '',\r\n                  password: ''\r\n                });\r\n              }}>\r\n              Back\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              form=\"login_form\"\r\n              className=\"dark-button\"\r\n              disabled={this.isButtonDisabled([\r\n                this.state.username,\r\n                this.state.password\r\n              ])}>\r\n              Sign In\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Menu>\r\n    );\r\n  }\r\n\r\n  renderSingUpErrors(errors) {\r\n    if (errors[0]) {\r\n      return (\r\n        <Message\r\n          error\r\n          header=\"There were some errors in your sign up form.\"\r\n          list={errors}\r\n        />\r\n      );\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.login.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MenuExampleSizeLarge);\r\n","import React, { Component } from 'react';\r\nimport { Grid, Header, Button } from 'semantic-ui-react';\r\nimport makeBlockie from 'ethereum-blockies-base64';\r\nimport axios from 'axios';\r\nimport { Router } from '../../next-routes';\r\n\r\nclass MenuUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSingOut = this.handleSignOut.bind(this);\r\n    this.state = { avatarClassNameModifier: '' };\r\n  }\r\n\r\n  async handleSignOut() {\r\n    this.setState({ avatarClassNameModifier: 'avatar-exit' });\r\n    await axios.get('/logout');\r\n    Router.push('/');\r\n  }\r\n\r\n  render() {\r\n    let { user, avatarClassNameModifier } = this.props;\r\n\r\n    if (this.state.avatarClassNameModifier)\r\n      avatarClassNameModifier = this.state.avatarClassNameModifier;\r\n\r\n    const { username } = user;\r\n    const usernameStyle = { color: 'white' };\r\n\r\n    return (\r\n      <Grid className=\"top-menu-right\">\r\n        <Grid.Row verticalAlign=\"middle\">\r\n          <Grid.Column width={4}>\r\n            <div>\r\n              <img\r\n                src={makeBlockie(username)}\r\n                className={`user-avatar undragable ${avatarClassNameModifier}`}\r\n              />\r\n            </div>\r\n          </Grid.Column>\r\n          <Grid.Column width={1} />\r\n          <Grid.Column width={10} className=\"user-column-right\">\r\n            <Grid>\r\n              <Grid.Row style={{ padding: '0' }}>\r\n                <div>\r\n                  <Header size=\"tiny\" style={usernameStyle}>\r\n                    {username}\r\n                  </Header>\r\n                </div>\r\n              </Grid.Row>\r\n              <Grid.Row style={{ padding: '0' }}>\r\n                <Grid.Column width=\"3\" style={{ padding: '0' }}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={e => this.handleSignOut()}\r\n                    icon=\"power off\"\r\n                    className=\"user-column-right-button orange-button-dark\"\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width=\"1\" style={{ padding: '0.5em' }} />\r\n                <Grid.Column style={{ padding: '0' }} width=\"3\">\r\n                  <Button\r\n                    size=\"small\"\r\n                    icon=\"setting\"\r\n                    className=\"user-column-right-button orange-button-dark\"\r\n                  />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuUser;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\nimport { changeTokenPosition } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport Token from './Token';\r\n\r\nclass BalanceBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(token) {\r\n    store.dispatch(changeTokenPosition(token));\r\n  }\r\n\r\n  render() {\r\n    if (this.props.user)\r\n      return (\r\n        <div className=\"tokens-box\">{this.renderItems(this.props.tokens)}</div>\r\n      );\r\n\r\n    return (\r\n      <Message\r\n        warning\r\n        header=\"Sign in\"\r\n        content=\"Please sign in in order to see your balances and place bets.\"\r\n      />\r\n    );\r\n  }\r\n\r\n  renderItems = tokens => {\r\n    const tokensInBalance = _.filter(tokens, { position: 'balance-box' });\r\n\r\n    const toRender = (\r\n      <div>\r\n        {tokensInBalance.map(token => {\r\n          console.log(token);\r\n          return (\r\n            <div\r\n              className={'balance-box-token'}\r\n              onClick={() => this.handleClick(token)}\r\n              key={token.symbol}>\r\n              <Token token={token} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n\r\n    return toRender;\r\n  };\r\n}\r\n\r\nexport default BalanceBox;\r\n","import React, { Component } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nimport BettingBoxToken from './BettingBoxItem';\r\nimport RangeSlider from './RangeSlider';\r\n\r\nclass BettingBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderTokens(tokens) {\r\n    const items = [];\r\n    const numberOfBoxes = 4;\r\n\r\n    for (let i = 0; i < numberOfBoxes; i++) {\r\n      const token = tokens[i] || null;\r\n      items.push(\r\n        <Grid.Row key={i}>\r\n          <Grid.Column width={7}>\r\n            <BettingBoxToken token={token} />\r\n          </Grid.Column>\r\n          <Grid.Column width={9} verticalAlign=\"middle\">\r\n            <RangeSlider\r\n              prices={this.props.prices}\r\n              token={token}\r\n              toBet={tokens}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      );\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"betting-box\">\r\n        <Grid columns=\"equal\">{this.renderTokens(this.props.tokens)}</Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BettingBox;\r\n","import React, { Component } from 'react';\r\nimport { Segment, Icon } from 'semantic-ui-react';\r\nimport Token from './Token';\r\nimport { changeTokenPosition } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\n\r\nclass BettingBoxToken extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(token) {\r\n    store.dispatch(changeTokenPosition(token));\r\n  }\r\n\r\n  render() {\r\n    const { token } = this.props;\r\n\r\n    if (token) {\r\n      return (\r\n        <div>\r\n          <Segment\r\n            onClick={() => this.handleClick(token)}\r\n            textAlign=\"center\"\r\n            className={'betting-box-token betting-box-token-filled'}>\r\n            <Token token={token} className=\"token-dropped\" />\r\n          </Segment>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Segment\r\n          size={'big'}\r\n          textAlign=\"center\"\r\n          className={'betting-box-token'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BettingBoxToken;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Label,\r\n  List,\r\n  Modal\r\n} from 'semantic-ui-react';\r\n\r\nimport EthLounge from '../../ethereum/EthLounge';\r\nimport { toggleModal } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport { Router } from '../../next-routes';\r\nimport TokenFromWei from '../../utils/TokenFromWei';\r\n\r\nclass ConfirmBetModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleConfirm = this.handleConfirm.bind(this);\r\n    this.closeFinalModal = this.closeFinalModal.bind(this);\r\n    this.state = {\r\n      isLoading: false,\r\n      isCancelDisabled: false,\r\n      isFinalModalSuccessOpen: false,\r\n      isFinalModalSuccessOpen: false,\r\n      isFinalModalErrorOpen: false,\r\n      errorMessage: '',\r\n      transactionInfo: {}\r\n    };\r\n  }\r\n\r\n  closeFinalModal() {\r\n    this.setState({\r\n      isFinalModalErrorOpen: false,\r\n      isFinalModalSuccessOpen: false\r\n    });\r\n    store.dispatch(toggleModal('confirmBetModal'));\r\n  }\r\n\r\n  async handleConfirm(tokensToBet, pickedTeam, address, matchID) {\r\n    console.log(this.state);\r\n    this.setState({\r\n      isLoading: true,\r\n      isCancelDisabled: true\r\n    });\r\n    const tokens = tokensToBet.map(curr => curr.address);\r\n    const amounts = tokensToBet.map(curr => curr.amount);\r\n\r\n    // try {\r\n    //   const transactionInfo = await EthLounge.methods\r\n    //     .placeBet(matchID, pickedTeam.slug, tokens, amounts)\r\n    //     .send({ from: address });\r\n    //   if (transactionInfo.status) {\r\n    //     this.setState({\r\n    //       isFinalModalSuccessOpen: true,\r\n    //       transactionInfo: transactionInfo\r\n    //     });\r\n    //   }\r\n    // } catch (err) {\r\n    //   console.log(err);\r\n    //   this.setState({\r\n    //     isFinalModalErrorOpen: true,\r\n    //     errorMessage: err.message.replace('Returned error: ', '')\r\n    //   });\r\n    // }\r\n    this.setState({\r\n      isLoading: false,\r\n      isCancelDisabled: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { open, tokensToBet, pickedTeam, user, matchID } = this.props;\r\n\r\n    const tokenList = tokensToBet.map(curr => {\r\n      return (\r\n        <List.Item as=\"p\" key={curr.symbol}>\r\n          <Icon name=\"right triangle\" />\r\n          {`${TokenFromWei(curr)} ${curr.symbol}`}\r\n        </List.Item>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Modal size=\"tiny\" open={open}>\r\n        <FinalModalSuccess\r\n          open={this.state.isFinalModalSuccessOpen}\r\n          transactionInfo={this.state.transactionInfo}\r\n          matchID={matchID}\r\n          close={this.closeFinalModal}\r\n        />\r\n        <FinalModalError\r\n          open={this.state.isFinalModalErrorOpen}\r\n          errorMessage={this.state.errorMessage}\r\n          close={this.closeFinalModal}\r\n        />\r\n        <Modal.Header>You are about to place a bet</Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <Grid>\r\n              <Grid.Column width={10}>\r\n                <Header>Your bet: </Header>\r\n                <List className=\"confirm-bet-modal-ul font-dark-orange\" as=\"ul\">\r\n                  {tokenList}\r\n                </List>\r\n                <Header>\r\n                  Picked Team:{' '}\r\n                  <span className=\"font-dark-orange\">{pickedTeam.name}</span>\r\n                </Header>\r\n                <Header>\r\n                  Odds:{' '}\r\n                  <span className=\"font-dark-orange\">{pickedTeam.odds}</span>\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column verticalAlign=\"middle\" width={6}>\r\n                <Image\r\n                  className=\"confirm-bet-modal-img\"\r\n                  floated=\"right\"\r\n                  size=\"small\"\r\n                  src={`/static/img/teams/${pickedTeam.slug}.png`}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            disabled={this.state.isCancelDisabled}\r\n            color=\"black\"\r\n            onClick={e => store.dispatch(toggleModal('confirmBetModal'))}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            loading={this.state.isLoading}\r\n            className=\"dark-orange-bg font-white\"\r\n            onClick={e =>\r\n              this.handleConfirm(tokensToBet, pickedTeam, user.address, matchID)\r\n            }>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass FinalModalSuccess extends Component {\r\n  render() {\r\n    const { open, close, transactionInfo, matchID } = this.props;\r\n\r\n    const hash = transactionInfo.transactionHash;\r\n\r\n    return (\r\n      <Modal open={open} size=\"tiny\">\r\n        <Modal.Header>Bet placed successfuly</Modal.Header>\r\n        <Modal.Content className=\"word-wrap\">\r\n          <p>\r\n            Transaction hash:{' '}\r\n            <a href={` https://etherscan.io/tx/${hash}`}>{hash}</a>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            className=\"dark-orange-bg font-white\"\r\n            onClick={e => {\r\n              close();\r\n              Router.push(`/matches/${matchID}`);\r\n            }}>\r\n            {' '}\r\n            Go back\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass FinalModalError extends Component {\r\n  render() {\r\n    return (\r\n      <Modal open={this.props.open} size=\"mini\">\r\n        <Modal.Header className=\"font-error\">Placing bet failed</Modal.Header>\r\n        <Modal.Content className=\"font-error word-wrap\">\r\n          <p>{this.props.errorMessage}</p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            className=\"dark-orange-bg font-white\"\r\n            onClick={e => this.props.close()}>\r\n            Go back\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmBetModal;\r\n","import React, { Component } from 'react';\r\nimport { Button, Header, Icon, Message, Modal } from 'semantic-ui-react';\r\n\r\nimport { toggleErrorModal } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\n\r\nclass ErrorModal extends Component {\r\n  render() {\r\n    let { modal } = this.props;\r\n    const list = modal.reasons.map(curr => {\r\n      return <li key={curr}>{curr}</li>;\r\n    });\r\n\r\n    return (\r\n      <Modal size=\"tiny\" open={modal.isOpen} closeOnDocumentClick={true}>\r\n        <Modal.Header className=\"font-error\">\r\n          <Icon name=\"times circle outline\" />\r\n          {modal.head}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description className=\"font-error\">\r\n            <ul>{list}</ul>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            className=\"dark-orange-bg font-white\"\r\n            onClick={e => store.dispatch(toggleErrorModal())}>\r\n            OK\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorModal;\r\n","import Big from 'big.js';\r\nimport React, { Component } from 'react';\r\nimport Slider from 'react-rangeslider';\r\nimport { changeTokenAmount } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport EstimateBetValue from '../../utils/EstimateBetValue';\r\n\r\nclass RangeSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRange = this.handleRange.bind(this);\r\n    this.maxValue = 2000;\r\n    this.lastValue = this.maxValue;\r\n\r\n    this.state = { value: this.maxValue };\r\n  }\r\n\r\n  handleRange = (val, token) => {\r\n    console.log('han');\r\n    if (!token) return;\r\n    this.setState({ value: val });\r\n    const change = val / this.maxValue;\r\n    let newAmount = `${Big(token.initialAmount)\r\n      .mul(change)\r\n      .toFixed(0)}`;\r\n    newAmount = newAmount < 1 ? 1 : newAmount;\r\n    token.amount = newAmount;\r\n    store.dispatch(changeTokenAmount(token));\r\n  };\r\n\r\n  render() {\r\n    const { token, toBet, prices } = this.props;\r\n\r\n    let className;\r\n    if (!token) {\r\n      className = 'range-slider-inactive';\r\n      if (this.lastValue !== this.state.value)\r\n        this.setState({ value: this.maxValue });\r\n      this.lastValue = this.state.value;\r\n    }\r\n\r\n    return (\r\n      <Slider\r\n        className={className}\r\n        min={1}\r\n        max={this.maxValue}\r\n        step={10}\r\n        tooltip={false}\r\n        value={this.state.value}\r\n        onChange={val => this.handleRange(val, token)}\r\n        onChangeComplete={() => {\r\n          EstimateBetValue(toBet, prices);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RangeSlider;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Image, Label } from 'semantic-ui-react';\r\n\r\nimport { pickTeam } from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\n\r\nclass Teams extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleClick = (event, team, pickedTeam) => {\r\n    if (this.props.user) {\r\n      if (pickedTeam.slug === team.slug) {\r\n        store.dispatch(pickTeam({}));\r\n        return;\r\n      }\r\n      store.dispatch(pickTeam(team));\r\n    }\r\n  };\r\n\r\n  generateTeamLabel(team, pickedTeam) {\r\n    const style = this.props.user ? { cursor: 'pointer' } : {};\r\n    let classNameModifier =\r\n      pickedTeam.slug == team.slug ? ' team-label-picked' : '';\r\n    let teamCaption =\r\n      pickedTeam.slug == team.slug ? (\r\n        <p className=\"team-name team-name-picked\">{team.name}</p>\r\n      ) : (\r\n        <p className=\"team-name\">{team.name}</p>\r\n      );\r\n\r\n    return (\r\n      <div\r\n        onClick={event => {\r\n          this.handleClick(event, team, pickedTeam);\r\n        }}>\r\n        {' '}\r\n        <Label\r\n          size=\"huge\"\r\n          style={style}\r\n          className={`team-label${classNameModifier}`}>\r\n          <Image\r\n            className=\"undragable\"\r\n            src={`/static/img/teams/${team.slug}.png`}\r\n          />\r\n        </Label>\r\n        <div style={style}>{teamCaption}</div>{' '}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  generatePercentage(teams, index) {\r\n    const sumOdds = teams[0].odds + teams[1].odds;\r\n    const percentage = Math.round((1 / teams[index].odds) * 100) + '%';\r\n\r\n    if (index === 0)\r\n      return (\r\n        <Label as=\"a\" color=\"black\" ribbon>\r\n          <p className=\"team-percentage\">{percentage}</p>\r\n          <p className=\"team-odds\">x {teams[index].odds}</p>\r\n        </Label>\r\n      );\r\n\r\n    return (\r\n      <Label as=\"a\" color=\"black\" ribbon=\"right\">\r\n        <p className=\"team-percentage\">{percentage}</p>\r\n        <p className=\"team-odds\">x{teams[index].odds}</p>\r\n      </Label>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let { teams, pickedTeam } = this.props;\r\n\r\n    if (teams)\r\n      return (\r\n        <div>\r\n          <Grid className=\"teams-grid\" padded>\r\n            <Grid.Row>\r\n              <Grid.Column />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column width={2}>\r\n                {this.generatePercentage(teams, 0)}\r\n              </Grid.Column>\r\n\r\n              <Grid.Column width={5} verticalAlign=\"middle\" textAlign=\"center\">\r\n                {this.generateTeamLabel(teams[0], pickedTeam)}\r\n              </Grid.Column>\r\n\r\n              <Grid.Column width={2} verticalAlign=\"middle\" textAlign=\"center\">\r\n                <Label color=\"black\">VS</Label>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column width={5} verticalAlign=\"middle\" textAlign=\"center\">\r\n                {this.generateTeamLabel(teams[1], pickedTeam)}\r\n              </Grid.Column>\r\n\r\n              <Grid.Column width={2}>\r\n                {this.generatePercentage(teams, 1)}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column />\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n      );\r\n\r\n    return '';\r\n  }\r\n}\r\n\r\nexport default Teams;\r\n","import React from 'react';\r\nimport { Image, Label } from 'semantic-ui-react';\r\nimport TokenFromWei from '../../utils/TokenFromWei';\r\nimport { backend } from '../../config/config';\r\n\r\nexport default props => {\r\n  const { token } = props;\r\n  return (\r\n    <Label as=\"a\" key={token.address} className=\"token-label unselectable-text\">\r\n      <Image\r\n        className=\"undragable\"\r\n        avatar\r\n        spaced=\"right\"\r\n        src={`${backend}/img/tokens/${token.symbol}.png`}\r\n      />\r\n      {`${TokenFromWei(token, true)} ${token.symbol} `}\r\n    </Label>\r\n  );\r\n};\r\n","const config = {\r\n  backend: process.env.BACKEND_URL || 'http://localhost:5000'\r\n};\r\n\r\nmodule.exports = config;\r\n","import compiledContract from './build/EthLounge';\r\nimport web3 from './web3';\r\n\r\nconst EthLounge = new web3.eth.Contract(\r\n  JSON.parse(compiledContract.interface),\r\n  '0x524c3f19Ab62706343a118b286f5aF2323B99758'\r\n);\r\n\r\nexport default EthLounge;\r\n","import Web3 from 'web3';\r\n\r\nlet web3;\r\n\r\nif (typeof window != 'undefined' && typeof window.web3 != 'undefined') {\r\n  web3 = new Web3(window.web3.currentProvider);\r\n} else {\r\n  const provider = new Web3.providers.HttpProvider(\r\n    'https://rinkeby.infura.io/v3/6e6283bc1a354b07b064b06356766315'\r\n  );\r\n\r\n  web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;\r\n","const routes = require('next-routes')();\r\n\r\nroutes.add('/matches/:id', '/matches/match');\r\n\r\nmodule.exports = routes;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Grid, Label, List, Modal } from 'semantic-ui-react';\r\n\r\nimport Layout from '../../components/Layout/Layout';\r\nimport BettingBox from '../../components/match/BettingBox';\r\nimport ConfirmBetModal from '../../components/match/ConfirmBetModal';\r\nimport ErrorModal from '../../components/match/ErrorModal';\r\nimport Teams from '../../components/match/Teams';\r\nimport BalanceBox from '../../components/match/BalanceBox';\r\nimport {\r\n  toggleErrorModal,\r\n  toggleModal,\r\n  updatePrices,\r\n  addTokens\r\n} from '../../redux/match/actions';\r\nimport store from '../../redux/store';\r\nimport CryptoPrices from '../../utils/CryptoPrices';\r\nimport '../../static/css/match.css';\r\nimport axios from 'axios';\r\nimport CookieCall from '../../utils/CookieCall';\r\n\r\nclass Token {\r\n  constructor(symbol, amount, position = '', displayName, decimals) {\r\n    this.symbol = symbol;\r\n    this.amount = amount;\r\n    this.initialAmount = amount;\r\n    this.position = position;\r\n    this.displayName = displayName;\r\n    this.decimals = decimals;\r\n  }\r\n}\r\n\r\nclass Match extends Component {\r\n  static async getInitialProps(props) {\r\n    const { req } = props;\r\n    const matchID = props.query.id;\r\n\r\n    // This information will be pulled from database //\r\n    const teams = [\r\n      {\r\n        name: 'Fnatic',\r\n        slug: 'fnatic',\r\n        imgUrl: `../../img/teams/fnatic.png`,\r\n        odds: 1.56\r\n      },\r\n      {\r\n        name: 'Gambit',\r\n        slug: 'gambit',\r\n        imgUrl: `../../img/teams/gambit.png`,\r\n        odds: 2.77\r\n      }\r\n    ];\r\n\r\n    const api_response = await CookieCall(req, `/api/match_info?ID=${matchID}`);\r\n\r\n    const data = api_response.data;\r\n\r\n    const matchInfo = { matchID, teams, ...data };\r\n\r\n    return { matchInfo };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    const { tokens } = this.props.initial.matchInfo;\r\n\r\n    const prices = await CryptoPrices(tokens);\r\n    store.dispatch(updatePrices(prices));\r\n    this.addTokens(\r\n      this.props.user.balances,\r\n      this.props.initial.matchInfo.tokens\r\n    );\r\n  }\r\n\r\n  async addTokens(userBalances, supportedTokens) {\r\n    if (userBalances) {\r\n      const tokens = [];\r\n\r\n      userBalances.forEach(token => {\r\n        const { balance, symbol } = token;\r\n        const { displayName, decimals } = _.find(supportedTokens, { symbol });\r\n\r\n        tokens.push(\r\n          new Token(symbol, balance, 'balance-box', displayName, decimals)\r\n        );\r\n      });\r\n\r\n      store.dispatch(addTokens(tokens));\r\n    }\r\n  }\r\n\r\n  handleClick(event, tokensToBet) {\r\n    event.preventDefault();\r\n    const errorHead = 'You forgot to do the following';\r\n    const errors = [];\r\n    if (!this.props.user) errors.push('Please log in to place bets.');\r\n    if (tokensToBet.length === 0)\r\n      errors.push('Please place at least one token in order to place a bet.');\r\n    if (_.isEmpty(this.props.pickedTeam)) errors.push('Please pick a team.');\r\n    if (errors.length > 0) {\r\n      store.dispatch(toggleErrorModal(errorHead, errors));\r\n      return;\r\n    }\r\n\r\n    store.dispatch(toggleModal('confirmBetModal'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid relaxed>\r\n        <ErrorModal modal={this.props.errorModal} />\r\n        <ConfirmBetModal\r\n          open={this.props.confirmBetModal.isOpen}\r\n          tokensToBet={this.props.tokens.toBet}\r\n          pickedTeam={this.props.pickedTeam}\r\n          user={this.props.user}\r\n          matchID={this.props.initial.matchInfo.matchID}\r\n        />\r\n\r\n        <Grid.Column width={8}>\r\n          <Teams\r\n            teams={this.props.initial.matchInfo.teams}\r\n            pickedTeam={this.props.pickedTeam}\r\n            user={this.props.user}\r\n          />\r\n          LAST BETS:\r\n        </Grid.Column>\r\n        <Grid.Column width={8}>\r\n          <h2>Place bet</h2>\r\n          <BettingBox\r\n            prices={this.props.prices}\r\n            tokens={this.props.tokens.toBet}\r\n          />\r\n          <div className=\"bet-container\">\r\n            <Button\r\n              onClick={event =>\r\n                this.handleClick(event, this.props.tokens.toBet)\r\n              }\r\n              className=\"button-bet\"\r\n              size=\"large\"\r\n              color=\"black\">\r\n              Place bet\r\n            </Button>\r\n            <List relaxed floated=\"right\" className=\"info-bet\">\r\n              {this.renderBetValue(this.props.betValue)}\r\n              {this.renderEstimatedReward(this.props.betValue)}\r\n            </List>\r\n          </div>\r\n          <h2>Balances</h2>\r\n          <BalanceBox\r\n            user={this.props.user}\r\n            tokens={this.props.tokens.wallet}\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  renderBetValue(betValue) {\r\n    if (this.props.tokens.toBet.length > 0)\r\n      return (\r\n        <List.Item>\r\n          <Label className=\"orange-label\" horizontal>\r\n            ESTIMATED BET VALUE\r\n          </Label>\r\n          <strong>{` ${betValue}$`}</strong>\r\n        </List.Item>\r\n      );\r\n\r\n    return '';\r\n  }\r\n\r\n  renderEstimatedReward(betValue) {\r\n    if (this.props.tokens.toBet.length > 0 && !_.isEmpty(this.props.pickedTeam))\r\n      return (\r\n        <List.Item>\r\n          <Label className=\"orange-label\" horizontal>\r\n            ESTIMATED RETURN\r\n          </Label>\r\n          <strong>{` ${(\r\n            parseFloat(betValue) * this.props.pickedTeam.odds\r\n          ).toFixed(2)}$`}</strong>\r\n        </List.Item>\r\n      );\r\n\r\n    return '';\r\n  }\r\n}\r\n\r\n// store.subscribe(() => {\r\n//   if (store.getState().lastAction.type === 'LOG_IN') {\r\n//     getTokens(store.getState().login.gambler.address);\r\n//   }\r\n// });\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tokens: state.match.tokens,\r\n    betValue: state.match.betValue,\r\n    prices: state.match.prices,\r\n    pickedTeam: state.match.pickedTeam,\r\n    errorModal: state.match.errorModal,\r\n    confirmBetModal: state.match.confirmBetModal,\r\n    user: state.login.user\r\n  };\r\n};\r\n\r\nMatch = DragDropContext(HTML5Backend)(Match);\r\n\r\nexport default Layout(connect(mapStateToProps)(Match));\r\n","import matchReducer from './match/matchReducer';\r\nimport loginReducer from './layout/loginReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst lastAction = (state = null, action) => {\r\n  return action;\r\n};\r\n\r\nexport default combineReducers({\r\n  login: loginReducer,\r\n  match: matchReducer,\r\n  lastAction: lastAction\r\n});\r\n","import axios from 'axios';\r\n\r\nexport function login(user) {\r\n  return {\r\n    type: 'LOG_IN',\r\n    user: user\r\n  };\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n  await axios.get('/logout');\r\n  dispatch({ type: 'LOG_OUT' });\r\n};\r\n","import _ from 'lodash';\r\n\r\nconst initialState = {\r\n  user: null\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  let newState = _.cloneDeep(state);\r\n\r\n  switch (action.type) {\r\n    case 'LOG_OUT': {\r\n      newState = { user: false };\r\n      console.log('Logged out! State is now: ', newState);\r\n      break;\r\n    }\r\n\r\n    case 'LOG_IN': {\r\n      newState.user = action.user || false;\r\n      console.log('Logging in! State is now: ', newState);\r\n      break;\r\n    }\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nexport default loginReducer;\r\n","export function addTokens(tokens) {\r\n  return {\r\n    type: 'ADD_TOKENS',\r\n    tokens\r\n  };\r\n}\r\n\r\nexport function changeTokenPosition(token, pos) {\r\n  return {\r\n    type: 'CHANGE_POS',\r\n    token\r\n  };\r\n}\r\n\r\nexport function changeTokenAmount(token) {\r\n  return {\r\n    type: 'CHANGE_AMOUNT',\r\n    token\r\n  };\r\n}\r\n\r\nexport function updateEstimateBet(sum) {\r\n  return {\r\n    type: 'UPDATE_ESTIMATE_BET',\r\n    sum\r\n  };\r\n}\r\n\r\nexport function updatePrices(prices) {\r\n  return {\r\n    type: 'UPDATE_PRICES',\r\n    prices\r\n  };\r\n}\r\n\r\nexport function pickTeam(team) {\r\n  return {\r\n    type: 'PICK_TEAM',\r\n    team\r\n  };\r\n}\r\n\r\nexport function toggleErrorModal(head = '', reasons = []) {\r\n  return {\r\n    type: 'TOGGLE_ERROR_MODAL',\r\n    head: head,\r\n    reasons: reasons\r\n  };\r\n}\r\n\r\nexport function toggleModal(property) {\r\n  return {\r\n    type: 'TOGGLE_MODAL',\r\n    property\r\n  };\r\n}\r\n","import _ from 'lodash';\r\nimport EstimateBetValue from '../../utils/EstimateBetValue';\r\n\r\nconst initialState = {\r\n  tokens: { toBet: [], wallet: [] },\r\n  prices: {},\r\n  betValue: 0,\r\n  pickedTeam: {},\r\n  errorModal: { isOpen: false, head: '', reasons: [] },\r\n  confirmBetModal: { isOpen: false }\r\n};\r\n\r\nconst matchReducer = (state = initialState, action) => {\r\n  let newState = _.cloneDeep(state);\r\n\r\n  switch (action.type) {\r\n    case 'ADD_TOKENS': {\r\n      newState.tokens.wallet = action.tokens;\r\n      console.log(newState.tokens.wallet);\r\n\r\n      break;\r\n    }\r\n\r\n    case 'CHANGE_POS': {\r\n      console.log('Change position: ', action.token);\r\n      if (action.token.position === 'balance-box') {\r\n        action.token.position = 'betting-box';\r\n        newState.tokens.toBet.push(action.token);\r\n        newState.tokens.wallet = newState.tokens.wallet.filter(\r\n          curr => curr.symbol != action.token.symbol\r\n        );\r\n      } else {\r\n        action.token.position = 'balance-box';\r\n        action.token.amount = action.token.initialAmount;\r\n        newState.tokens.wallet.push(action.token);\r\n        newState.tokens.toBet = newState.tokens.toBet.filter(\r\n          curr => curr.symbol != action.token.symbol\r\n        );\r\n      }\r\n\r\n      newState.betValue = EstimateBetValue(\r\n        newState.tokens.toBet,\r\n        newState.prices,\r\n        false\r\n      );\r\n\r\n      break;\r\n    }\r\n\r\n    case 'UPDATE_PRICES': {\r\n      newState.prices = action.prices;\r\n      break;\r\n    }\r\n\r\n    case 'UPDATE_ESTIMATE_BET': {\r\n      newState.betValue = action.sum;\r\n      break;\r\n    }\r\n\r\n    case 'PICK_TEAM': {\r\n      newState.pickedTeam = action.team;\r\n      break;\r\n    }\r\n\r\n    case 'TOGGLE_MODAL': {\r\n      newState[action.property].isOpen = !newState[action.property].isOpen;\r\n      break;\r\n    }\r\n\r\n    case 'TOGGLE_ERROR_MODAL': {\r\n      newState.errorModal.isOpen = !state.errorModal.isOpen;\r\n      newState.errorModal.head = action.head;\r\n      newState.errorModal.reasons = action.reasons;\r\n      break;\r\n    }\r\n\r\n    case 'LOG_OUT': {\r\n      newState = { ...initialState };\r\n      newState.prices = state.prices;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nexport default matchReducer;\r\n","import rootReducer from '.';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport { backend } from '../config/config';\r\n\r\nconst CookieCall = async (req, path) => {\r\n  let response;\r\n\r\n  if (req) {\r\n    if (req.headers.cookie) {\r\n      response = await axios.get(`${backend}${path}`, {\r\n        headers: { cookie: req.headers.cookie }\r\n      });\r\n    } else {\r\n      response = await axios.get(`${backend}${path}`);\r\n    }\r\n  } else {\r\n    response = await axios.get(path);\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport default CookieCall;\r\n","import GetTokenPrice from './GetTokenPrice';\r\n\r\nconst data = async tokens => {\r\n  const response = await GetTokenPrice(tokens.map(curr => curr.symbol));\r\n\r\n  return response;\r\n};\r\n\r\nexport default data;\r\n","import Big from 'big.js';\r\nimport GetTokenPrice from './GetTokenPrice';\r\nimport TokenFromWei from './TokenFromWei';\r\nimport store from '../redux/store';\r\nimport { updateEstimateBet } from '../redux/match/actions';\r\n\r\nconst EstimateBetValue = (tokensToBet, prices, dispatch = true) => {\r\n  const symbols = tokensToBet.map(curr => {\r\n    return curr.symbol;\r\n  });\r\n\r\n  const values = symbols.map(curr => {\r\n    return prices.data[curr].USD;\r\n  });\r\n\r\n  let sum = values.reduce((sum, curr, index) => {\r\n    console.log(\r\n      `${Big(TokenFromWei(tokensToBet[index]))} * ${curr} = ${Big(\r\n        TokenFromWei(tokensToBet[index])\r\n      ).mul(curr)}`\r\n    );\r\n    return (\r\n      sum +\r\n      parseFloat(\r\n        Big(TokenFromWei(tokensToBet[index]))\r\n          .mul(curr)\r\n          .toFixed(2)\r\n      )\r\n    );\r\n  }, 0);\r\n\r\n  if (sum === '00.00') sum = '0';\r\n\r\n  if (dispatch) store.dispatch(updateEstimateBet(sum));\r\n\r\n  return sum;\r\n};\r\n\r\nexport default EstimateBetValue;\r\n","import axios from 'axios';\r\n\r\nconst getTokenPrice = async symbols => {\r\n  let call = await axios(\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${symbols.map(\r\n      curr => curr + ','\r\n    )},&tsyms=USD,ETH`\r\n  );\r\n\r\n  return call;\r\n};\r\n\r\nexport default getTokenPrice;\r\n","import Big from 'big.js';\r\n\r\nconst optimize = amount => {\r\n  const minimalAmountToDisplay = 0.0001;\r\n\r\n  amount = Big(amount);\r\n\r\n  if (\r\n    amount.cmp(minimalAmountToDisplay) === 1 ||\r\n    amount.cmp(minimalAmountToDisplay) === 0\r\n  ) {\r\n    return amount.round(4);\r\n  }\r\n\r\n  return `< ${minimalAmountToDisplay}`;\r\n};\r\n\r\nexport default optimize;\r\n","import Optimize from './OptimizeTokenAmount';\r\nimport Big from 'big.js';\r\n\r\nconst getScientificNotation = decimals => {\r\n  const number = decimals - 1;\r\n\r\n  return `10e+${number}`;\r\n};\r\n\r\nexport default (token, optimize = false) => {\r\n  if (optimize)\r\n    return `${Optimize(\r\n      Big(token.amount)\r\n        .div(getScientificNotation(token.decimals))\r\n        .toFixed()\r\n    )}`;\r\n\r\n  return `${Big(token.amount)\r\n    .div(getScientificNotation(token.decimals))\r\n    .toFixed()}`;\r\n};\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"big.js\");","module.exports = require(\"ethereum-blockies-base64\");","module.exports = require(\"lodash\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-dnd\");","module.exports = require(\"react-dnd-html5-backend\");","module.exports = require(\"react-rangeslider\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"web3\");"],"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AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAYA;;;;AAlEA;AACA;AAoEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyBA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAGA;AAIA;AACA;AACA;AA3CA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AAHA;AAMA;;;;AAvBA;AACA;AA+CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAGA;;;;AApCA;AACA;AAsCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAHA;AAOA;;;;AApCA;AACA;AAsCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAaA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;AAEA;;;;;;AACA;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;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;;AADA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAKA;;;;;;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAFA;AAAA;AACA;AAGA;AAGA;AAEA;AACA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AAGA;AACA;AAFA;AAIA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAOA;;;AAEA;AACA;AAGA;AAAA;AAAA;AAOA;AACA;;;AAEA;AACA;AAGA;AAAA;AAAA;AASA;AACA;;;;;;AAxJA;;;;;;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;;AAQA;AACA;;AADA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AA5BA;AA6JA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAEA;;;;;;;;;;;;ACpNA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AACA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAjEA;AACA;AAmEA;AACA;AACA;AACA;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAMA;AAAA;AAAA;AADA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AASA;AACA;AAVA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAYA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAKA;AAQA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAJA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAOA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACpBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}