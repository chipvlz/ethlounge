{"version":3,"file":"static\\development\\pages\\matches\\match.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ErrorModal.js","webpack:///./components/Layout/Layout.js","webpack:///./components/Layout/Menu.js","webpack:///./components/RangeSlider.js","webpack:///./components/Token.js","webpack:///./components/match/BalanceBoxToken.js","webpack:///./components/match/BettingBox.js","webpack:///./components/match/BettingBoxToken.js","webpack:///./components/match/ConfirmBetModal.js","webpack:///./components/match/Teams.js","webpack:///./components/match/TokenBox.js","webpack:///./ethereum/EthLounge.js","webpack:///./ethereum/web3.js","webpack:///./helpers/CryptoPrices.js","webpack:///./helpers/EstimateBetValue.js","webpack:///./helpers/GetTokenPrice.js","webpack:///./helpers/OptimizeTokenAmount.js","webpack:///./helpers/ShortEthAddress.js","webpack:///./helpers/Sleep.js","webpack:///./helpers/SupportedTokens.js","webpack:///./helpers/TokenFromWei.js","webpack:///./pages/matches/match.js","webpack:///./redux/actions.js","webpack:///./redux/reducers.js","webpack:///./redux/store.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"big.js\"","webpack:///external \"lodash\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-blockies\"","webpack:///external \"react-dnd\"","webpack:///external \"react-dnd-html5-backend\"","webpack:///external \"react-rangeslider\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { Component } from 'react';\r\nimport store from '../redux/store';\r\nimport { Modal, Message, Button, Header, Icon } from 'semantic-ui-react'\r\nimport { toggleErrorModal } from '../redux/actions';\r\n\r\nclass ErrorModal extends Component {\r\n\r\n    render() {\r\n        let { modal } = this.props;\r\n        const list = modal.reasons.map((curr) => {\r\n            return <li>{curr}</li>\r\n        })\r\n\r\n        return (\r\n            <Modal size=\"tiny\" open={modal.isOpen} closeOnDocumentClick={true}>\r\n                 \r\n                <Modal.Header className=\"font-error\">\r\n                    <Icon  name='times circle outline' />\r\n                    {modal.head}\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description className=\"font-error\">\r\n                        <ul>\r\n                            {list}\r\n                        </ul>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button className=\"dark-orange-bg font-white\" onClick={(e) => store.dispatch(toggleErrorModal())}>\r\n                        OK\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n    \r\n\r\n \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorModal;","import React, { Component } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Head from 'next/head';\r\nimport { Provider } from 'react-redux';\r\nimport Menu from './Menu';\r\nimport store from '../../redux/store';\r\n\r\n\r\nconst layout = ChildPage =>\r\n    class extends Component {\r\n        static async getInitialProps(initialProps) {\r\n\r\n            let props = {};\r\n\r\n            const getInitialProps = ChildPage.getInitialProps;\r\n            \r\n            \r\n\r\n            if (getInitialProps) {\r\n\r\n            let childPageProps = await getInitialProps(initialProps);\r\n\r\n              props = {\r\n                ...props,\r\n                ...childPageProps\r\n              }\r\n            }\r\n\r\n            return props;\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Provider store={store}>\r\n                    <Container >\r\n                        <Head>\r\n                            <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css' />\r\n                            <link rel='stylesheet' href='https://unpkg.com/react-rangeslider/umd/rangeslider.min.css' />\r\n                            <link rel='stylesheet' href='/static/css/style.css' />\r\n                        </Head>\r\n                        <Menu />\r\n                        <ChildPage initial={this.props}/>\r\n                        <h2>Footer</h2>\r\n                    </Container>\r\n                </Provider>);            \r\n        }\r\n    }\r\n\r\nexport default layout;","import React, { Component } from 'react'\r\nimport { Button, Menu, Image, Icon, Grid, Modal, Header } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport web3 from '../../ethereum/web3';\r\nimport Blockies from 'react-blockies';\r\nimport EthLounge from '../../ethereum/EthLounge';\r\nimport store from '../../redux/store';\r\nimport { Sleep } from '../../helpers/Sleep';\r\nimport ShortEthAddress from '../../helpers/ShortEthAddress';\r\nimport { addToken } from '../../redux/actions';\r\n\r\nclass Token {\r\n    constructor(address, amount, position) {\r\n        this.address = address;\r\n        this.amount = amount;\r\n        this.initialAmount = amount;\r\n        this.position = position;\r\n    }\r\n}\r\n\r\nclass MenuExampleSizeLarge extends Component {\r\n\r\n   constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {loading: false, account: '', signedIn: false, popupOpen: false, readyToGenerateRightMenu: false}; \r\n   }\r\n\r\n   async componentDidMount() {\r\n        // Restore session from local storage\r\n        const account = window.localStorage.getItem('eth-account', account);\r\n        const openSessionAccounts = await web3.eth.getAccounts();\r\n        \r\n        if (account && openSessionAccounts.length > 0) {\r\n            store.dispatch({ type: 'LOG_IN', account: account });\r\n            this.setState({signedIn: true, account: account})\r\n            this.getTokens(account);\r\n        }\r\n        else\r\n        store.dispatch({ type: 'LOG_OUT' }); \r\n        \r\n        this.setState({readyToGenerateRightMenu: true})\r\n   }\r\n\r\n    generateRightMenu(signedIn, readyToGenerateRightMenu) {\r\n        if(readyToGenerateRightMenu) {\r\n            if (signedIn) {\r\n            const ethAddressShort = ShortEthAddress(this.state.account);           \r\n\r\n            const ethAddressStyle = {color: 'white'};\r\n\r\n            return (\r\n                <Grid>\r\n                    <Grid.Row verticalAlign='middle'>\r\n                        <Grid.Column width={4}>\r\n                            <div className='user-avatar'><Blockies seed={this.state.account} scale={6} size={14}/></div>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={1}>\r\n\r\n                        </Grid.Column>\r\n                        <Grid.Column width={10} className='user-column-right'>\r\n                            <div className='user-column-right-address'><a style={ethAddressStyle} href={`https://etherscan.io/address/${this.state.account}`} target='_blank'>{ethAddressShort}</a></div>\r\n                            <Button onClick={e => this.handleLogout(e)} loading={this.state.loading} size='mini' color='black' icon labelPosition='right' className='user-column-right-signout-button'>\r\n                                Log out\r\n                                <Icon name='power off' />\r\n                            </Button>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n                </Grid>); \r\n       } \r\n        return (<Button loading={this.state.loading} onClick={e => this.handleLogin(e)} color='black'>Sign in</Button>);       \r\n        }\r\n       \r\n      return <Button loading={true} className=\"dark-orange-bg\" />;\r\n   }\r\n\r\n  async handleLogin(e) {  \r\n    this.setState({loading: true});\r\n    await Sleep(300);\r\n\r\n    let account;\r\n\r\n    [ account ] = await web3.eth.getAccounts();\r\n\r\n    if (typeof account !== 'undefined') {\r\n        this.setState({account: account});\r\n        this.getTokens(account);\r\n        this.setState({signedIn: true});\r\n        store.dispatch({ type: 'LOG_IN', account: account });\r\n        window.localStorage.setItem('eth-account', account);\r\n    } else {\r\n        this.setState({popupOpen: true});\r\n    }\r\n\r\n    this.setState({loading: false});\r\n  }\r\n\r\n  async handleLogout(e) {\r\n    this.setState({loading: true});\r\n    await Sleep(600);\r\n    this.setState({signedIn: false});\r\n    store.dispatch({ type: 'LOG_OUT' });\r\n    this.setState({loading: false});\r\n    window.localStorage.removeItem('eth-account');\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Menu inverted size='large' className='menu'>\r\n        <Menu.Item>\r\n            <Image src='/static/img/logo.png' />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            <Icon name='chess knight' />       \r\n             My Bets\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            <Icon name='angle double down' />   \r\n            Deposit\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n            <Icon name='angle double up' />   \r\n            Withdraw\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n            <Icon name='question circle outline' />   \r\n            FAQ\r\n        </Menu.Item>\r\n        <Menu.Item position='right'>\r\n            {this.generateRightMenu(this.state.signedIn, this.state.readyToGenerateRightMenu)}     \r\n        </Menu.Item>\r\n\r\n        <Modal open={this.state.popupOpen} size='tiny'>\r\n                <Modal.Header>You need Metamask to sign in</Modal.Header>\r\n                <Modal.Content image>\r\n                    <Image wrapped size='medium' src='/static/img/metamask.png' />\r\n                    <Modal.Description>\r\n                        <Header>What is Metamask?</Header>\r\n                        <p>MetaMask is an extension for accessing Ethereum Dapps. You can download it <a href='https://metamask.io/' target='_blank'>here</a>.</p>                        <Header>But I have Metamask...</Header>\r\n                        <p>If you have Metamask installed, please make sure to unlock your account.</p>                        \r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button className=\"dark-orange-bg font-white\" onClick={(e) => {this.setState({popupOpen: false})}}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Actions>\r\n        </Modal>        \r\n      </Menu>\r\n      \r\n\r\n    );\r\n  }\r\n\r\n\r\n  async getTokens(account) {\r\n    const result = await EthLounge.methods.getBalances().call({from: account});\r\n    const tokenAddresses = result[0];\r\n    const tokenAmounts = result[1];\r\n\r\n    for (let i = 0; i < tokenAmounts.length; i++) {\r\n        if (tokenAmounts[i] !== '0') {\r\n            const newToken = new Token(tokenAddresses[i], tokenAmounts[i], 'balance-box');\r\n            store.dispatch(addToken(newToken));\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default MenuExampleSizeLarge;","import React, { Component } from 'react';\r\nimport Slider from 'react-rangeslider';\r\nimport Big from 'big.js';\r\nimport EstimateBetValue from '../helpers/EstimateBetValue';\r\nimport { changeTokenAmount } from '../redux/actions';\r\nimport store from '../redux/store';\r\n\r\nclass RangeSlider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);            \r\n        this.handleRange = this.handleRange.bind(this);\r\n\r\n        this.state = {value: 1000}\r\n    }\r\n\r\n    handleRange = (val) => {\r\n        const { token } = this.props;\r\n        this.setState({value: val})\r\n        const change = val/1000;\r\n        const newAmount = `${Big(token.initialAmount).mul(change).toFixed(0)}`;\r\n        token.amount = newAmount;\r\n        store.dispatch(changeTokenAmount(token));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Slider min={1} max={1000} step={10} tooltip={false} value={this.state.value} onChange={(val) => this.handleRange(val)}  onChangeComplete={(event) => {EstimateBetValue(this.props.toBet, this.props.prices)}}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RangeSlider;","import React from 'react';\r\nimport { DictionarrySymbol } from '../helpers/SupportedTokens';\r\nimport { Label, Image } from 'semantic-ui-react';\r\nimport TokenFromWei from '../helpers/TokenFromWei';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Label as='a' key={props.token.address} className=\"token-label\">\r\n            <Image avatar spaced='right' src={`/static/img/tokens/${DictionarrySymbol.get(props.token.address)}.png`} />\r\n            {TokenFromWei(props.token, 'symbol', true)}\r\n        </Label>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport Token from '../Token';\r\nimport { DragSource } from 'react-dnd';\r\n\r\nconst itemSource = {\r\n    beginDrag(props) {\r\n        return props.token;\r\n    },\r\n    endDrag(props, monitor) {\r\n        if(!monitor.didDrop()) return;\r\n        return props.handleDrop(props.token, monitor.getDropResult().pos);\r\n        \r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDragSource: connect.dragSource(),\r\n        connectDragPreview: connect.dragPreview(),\r\n        isDragging: monitor.isDragging()\r\n    }\r\n}\r\n\r\nclass BalanceBoxToken extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { isDragging, connectDragSource} = this.props;\r\n\r\n        let classNameModifier = '';\r\n\r\n        if (isDragging) {\r\n            classNameModifier = ' balance-box-token-dragging';\r\n        } \r\n\r\n        return connectDragSource(\r\n            <div className={'balance-box-token'+classNameModifier}><Token token={this.props.token} ></Token></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragSource('token', itemSource, collect)(BalanceBoxToken);","import React, { Component } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport BettingBoxToken from './BettingBoxToken';\r\nimport RangeSlider from '../RangeSlider';\r\n\r\n\r\nclass BettingBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderTokens(tokens) { \r\n        let bettingBoxes = [];\r\n        const numberOfBoxes = 4;\r\n        \r\n\r\n        for (let i = 0; i < numberOfBoxes; i++) {\r\n            let pos = `betting-box-${i}`;       \r\n            let tokenProp;\r\n            let rangeSlider = '';\r\n\r\n            for (let token of tokens) {\r\n                if (token.position === pos) {\r\n                    tokenProp = token;\r\n                    rangeSlider = <RangeSlider prices={this.props.prices} token={token} toBet={tokens}></RangeSlider>\r\n                }\r\n            }\r\n            \r\n            bettingBoxes.push(\r\n                    <Grid.Row key={pos}>\r\n                        <Grid.Column width={7}>\r\n                            <BettingBoxToken pos={pos} droppedToken={tokenProp} />                        \r\n                        </Grid.Column>\r\n                        <Grid.Column width={9} verticalAlign=\"middle\">\r\n                            {rangeSlider}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n            );\r\n        }\r\n\r\n        return bettingBoxes;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"betting-box\">\r\n                <Grid columns='equal'>\r\n                    {this.renderTokens(this.props.tokens)}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BettingBox;","import React, { Component } from 'react';\r\nimport { Segment, Icon } from 'semantic-ui-react';\r\nimport { DropTarget } from 'react-dnd';\r\nimport Token from '../Token';\r\nimport { changeTokenPosition } from '../../redux/actions';\r\nimport store from '../../redux/store';\r\n\r\nconst itemSource = {\r\n    drop(props) {\r\n        return {pos: props.pos};\r\n    },\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        token: monitor.getItem(),\r\n        canDrop: monitor.canDrop()\r\n    }\r\n}\r\n\r\nclass BettingBoxToken extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        store.dispatch(changeTokenPosition(this.props.droppedToken, 'balance-box'));\r\n    }\r\n\r\n    render() {\r\n        const { canDrop, connectDropTarget, isOver, token, pos } = this.props;\r\n        \r\n        let classNameModifier = '';\r\n\r\n        if (isOver && canDrop) {\r\n            classNameModifier += ' betting-box-token-hovered';\r\n        }\r\n\r\n        if (!isOver && canDrop) {\r\n            classNameModifier += ' betting-box-token-candrop';\r\n        }\r\n\r\n\r\n        if (this.props.droppedToken) {\r\n\r\n            classNameModifier = ' betting-box-token-dropped'\r\n\r\n            return (            \r\n                <div>\r\n                    <Segment onClick={this.handleClick} textAlign='center' className={'betting-box-token' + classNameModifier}>\r\n                        <Token token={this.props.droppedToken} className=\"token-dropped\"></Token>\r\n                    </Segment>\r\n                </div>\r\n            );\r\n        } \r\n            \r\n\r\n            return connectDropTarget(            \r\n                <div>\r\n                    <Segment size={\"big\"} textAlign='center' className={'betting-box-token' + classNameModifier}>\r\n                    </Segment>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nexport default DropTarget('token', itemSource, collect)(BettingBoxToken);","import React, { Component } from 'react';\r\nimport store from '../../redux/store';\r\nimport { Modal, Grid, Image, Button, List, Icon, Header } from 'semantic-ui-react'\r\nimport { toggleModal } from '../../redux/actions';\r\nimport TokenFromWei from '../../helpers/TokenFromWei';\r\nimport EthLounge from '../../ethereum/EthLounge';\r\n\r\nclass ConfirmBetModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleConfirm = this.handleConfirm.bind(this);\r\n        this.state = {isLoading: false, isFinalModalOpen: false};\r\n    }\r\n\r\n    async handleConfirm(tokensToBet, pickedTeam, account, matchID) {\r\n        this.setState({isLoading: true});\r\n        const tokens = tokensToBet.map((curr) => curr.address);\r\n        const amounts = tokensToBet.map((curr) => curr.amount);\r\n\r\n        try {\r\n            await EthLounge.methods.placeBet(matchID, pickedTeam.slug, tokens, amounts).send({from: account});\r\n        } catch (err) {\r\n\r\n        }\r\n        \r\n        this.setState({isLoading: false});\r\n        \r\n    }\r\n\r\n    render() {\r\n        let { open, tokensToBet, pickedTeam, account, matchID } = this.props;\r\n\r\n        const tokenList = tokensToBet.map((curr) => {\r\n            return <List.Item as='p'><Icon name='right triangle' />{TokenFromWei(curr, 'symbol')}</List.Item>\r\n        });\r\n\r\n        return (\r\n                <Modal size='tiny' open={open}>\r\n                <FinalModal />\r\n                    <Modal.Header>You are about to place a bet</Modal.Header>\r\n                    <Modal.Content>\r\n                        \r\n                        <Modal.Description>\r\n                            <Grid>\r\n                                <Grid.Column width={10}>\r\n                                    <Header>Your bet:</Header>\r\n                                    <List className=\"confirm-bet-modal-ul font-dark-orange\" as='ul'>{tokenList}</List>\r\n                                    <Header>Picked Team: <span className=\"font-dark-orange\">{pickedTeam.name}</span></Header>\r\n                                    <Header>Odds: <span className=\"font-dark-orange\">{pickedTeam.odds}</span></Header>                        \r\n                                </Grid.Column>\r\n                                <Grid.Column verticalAlign=\"middle\" width={6}><Image className=\"confirm-bet-modal-img\" floated=\"right\" size='small' src={`/static/img/teams/${pickedTeam.slug}.png`} />\r\n                                </Grid.Column> \r\n                            </Grid>\r\n                                                                    \r\n                        </Modal.Description>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>                    \r\n                        <Button color=\"black\" onClick={(e) => {store.dispatch(toggleModal('confirmBetModal'))}}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button loading={this.state.isLoading} className=\"dark-orange-bg font-white\" onClick={e => this.handleConfirm(tokensToBet, pickedTeam, account, matchID)}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nclass FinalModal extends Component {\r\n  \r\n    render() { \r\n      return (\r\n        <Modal  size='tiny'>\r\n          <Modal.Header>Modal #2</Modal.Header>\r\n          <Modal.Content>\r\n            <p>That's everything!</p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            \r\n          </Modal.Actions>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default ConfirmBetModal;","import React, { Component } from 'react';\r\nimport { Grid, Label, Image } from 'semantic-ui-react';\r\nimport store from '../../redux/store';\r\nimport { pickTeam } from '../../redux/actions';\r\n\r\nclass Teams extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = (event, team, pickedTeam) => {\r\n        if (this.props.signedIn) {\r\n            if (pickedTeam.slug) {\r\n                if (pickedTeam.slug === team.slug) {store.dispatch(pickTeam({})); return;}                                         \r\n            }            \r\n            store.dispatch(pickTeam(team));\r\n        }     \r\n    }\r\n\r\n    generateTeamLabel(team, pickedTeam) {\r\n        const style = this.props.signedIn ? {cursor: 'pointer'} : {};\r\n        let classNameModifier = pickedTeam.slug == team.slug ? ' team-label-picked' : '';\r\n        let teamCaption = pickedTeam.slug == team.slug ? <p className='team-name team-name-picked'>{team.name}</p> : <p className='team-name'>{team.name}</p>;\r\n\r\n        return  <div onClick={(event) => {this.handleClick(event, team, pickedTeam)}}><Label  size='huge' style={style} className={`team-label${classNameModifier}`}><Image src={`/static/img/teams/${team.slug}.png`} /></Label>{teamCaption}</div>;\r\n    }\r\n\r\n    generatePercentage(teams, index) {\r\n        //const sumOdds = teams[0].odds + teams[1].odds;       \r\n        const percentage = Math.round(1 / teams[index].odds * 100) + '%';\r\n\r\n        if (index === 0)\r\n        return (\r\n            <Label as='a' color='black' ribbon>\r\n                <p className='team-percentage'>{percentage}</p>\r\n                <p className='team-odds'>x {teams[index].odds}</p>\r\n            </Label>\r\n        );\r\n\r\n        return (\r\n            <Label as='a' color='black' ribbon='right'>\r\n                <p className='team-percentage'>{percentage}</p>\r\n                <p className='team-odds'>x {teams[index].odds}</p>\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let { teams, pickedTeam } = this.props;\r\n\r\n        if(teams)\r\n        return (\r\n                <Grid className='teams-grid' padded>\r\n                    <Grid.Row>\r\n                        <Grid.Column>                          \r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={2}>\r\n                            {this.generatePercentage(teams, 0)}\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={5} verticalAlign='middle' textAlign='center'>\r\n                            {this.generateTeamLabel(teams[0], pickedTeam)}\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={2} verticalAlign='middle' textAlign='center'>\r\n                            <Label color='black'>VS</Label>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={5} verticalAlign='middle' textAlign='center'>\r\n                            {this.generateTeamLabel(teams[1], pickedTeam)}\r\n                        </Grid.Column>\r\n                        \r\n                        <Grid.Column width={2}>\r\n                            {this.generatePercentage(teams, 1)}\r\n                        </Grid.Column> \r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column></Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n        );\r\n\r\n            return '0';\r\n    }\r\n}\r\n\r\nexport default Teams;","import React, { Component } from 'react';\r\nimport BalanceBoxToken from './BalanceBoxToken';\r\nimport { Message } from 'semantic-ui-react';\r\nimport { changeTokenPosition } from '../../redux/actions';\r\nimport store from '../../redux/store';\r\n\r\nclass TokenBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);    \r\n    }\r\n\r\n    handleDrop(token, pos) {\r\n        store.dispatch(changeTokenPosition(token, pos));\r\n    }\r\n\r\n    renderItems = (tokens) => {\r\n            const toRender = <div>{tokens.map(token => {\r\n                if(token.position == 'balance-box') {\r\n                return (\r\n                <BalanceBoxToken key={token.address} token={{...token}} handleDrop={(token, pos) => this.handleDrop(token, pos)}></BalanceBoxToken>);\r\n                } else {return ''};            \r\n            })}</div>;\r\n            \r\n            return toRender;\r\n        \r\n      }\r\n\r\n    render() {\r\n        if (this.props.signedIn)\r\n        return (\r\n            <div className='tokens-box'>            \r\n                {this.renderItems(this.props.tokens)}   \r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <Message\r\n            warning\r\n            header='Sign in with Metamask'\r\n            content='Please sign in with Metamask in order to see your balances and place bets.'\r\n          />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TokenBox;","import EthLounge from './build/EthLounge'\r\nimport web3 from './web3';\r\n\r\nconst instance = new web3.eth.Contract(\r\n    JSON.parse(EthLounge.interface),\r\n    '0x38c06BE80F47e7d85A6306CF4cc1E3f6fde3B80a');\r\n\r\n\r\nexport default instance;","import Web3 from 'web3';\r\n\r\nlet web3;\r\n\r\nif (typeof window != 'undefined' && typeof window.web3 != 'undefined') {\r\n    web3 = new Web3(window.web3.currentProvider)\r\n} else {\r\n    const provider = new Web3.providers.HttpProvider(\r\n        'https://rinkeby.infura.io/v3/6e6283bc1a354b07b064b06356766315'\r\n    );\r\n\r\n    web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;","import { SupportedTokens, DictionarrySymbol } from './SupportedTokens';\r\nimport GetTokenPrice from './GetTokenPrice';\r\n\r\n\r\nconst data = async () => {\r\n    const response = await GetTokenPrice(SupportedTokens.map((curr) => DictionarrySymbol.get(curr)));\r\n\r\n    return response;\r\n}\r\n\r\nexport default data;","import Big from 'big.js';\r\nimport GetTokenPrice from './GetTokenPrice';\r\nimport { DictionarrySymbol } from './SupportedTokens';\r\nimport TokenFromWei from './TokenFromWei';\r\nimport store from '../redux/store';\r\nimport { updateEstimateBet } from '../redux/actions';\r\n\r\nconst EstimateBetValue = (tokensToBet, prices, dispatch = true) => {\r\n    const symbols = tokensToBet.map((curr) => {\r\n        return DictionarrySymbol.get(curr.address);\r\n    })   \r\n\r\n    const values = symbols.map((curr) => {\r\n        return prices.data[curr].USD;\r\n    });\r\n\r\n    let sum = values.reduce((sum, curr, index) => {\r\n        console.log(`${Big(TokenFromWei(tokensToBet[index]))} * ${curr} = ${Big(TokenFromWei(tokensToBet[index])).mul(curr)}`);\r\n        return sum + parseFloat((Big(TokenFromWei(tokensToBet[index])).mul(curr).toFixed(2)));\r\n    }, 0)\r\n\r\n    if (sum === '00.00') sum = '0'\r\n\r\n    if (dispatch) store.dispatch(updateEstimateBet(sum));\r\n\r\n    return sum;\r\n}\r\n\r\nexport default EstimateBetValue;","import axios from 'axios';\r\n\r\nconst getTokenPrice = async (symbols) => {\r\n    let call = await axios(`https://min-api.cryptocompare.com/data/pricemulti?fsyms=${symbols.map((curr) => curr+',')},&tsyms=USD,ETH`);\r\n\r\n    return call;\r\n}\r\n\r\nexport default getTokenPrice;","import Big from 'big.js';\r\n\r\nconst optimize = (amount) => {\r\n    const minimalAmountToDisplay = 0.0001;\r\n\r\n    amount = Big(amount);\r\n\r\n    if(amount.cmp(minimalAmountToDisplay) === 1 || amount.cmp(minimalAmountToDisplay) === 0) {\r\n        return amount.round(4);\r\n    }\r\n\r\n    return `< ${minimalAmountToDisplay}`\r\n\r\n}\r\n\r\nexport default optimize;","export default (address) => {\r\n    const addressStart = address.slice(0,6);\r\n    const addressEnd = address.slice(36,42);\r\n    \r\n    return `${addressStart}...${addressEnd}`;\r\n}","export function Sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}","const eth = '0x0000000000000000000000000000000000000000';\r\nconst powr = '0x7f0C267ef144D319CcF1d724c222a59A50CD7B43';\r\n\r\nconst SupportedTokens = [\r\n    eth,\r\n    powr\r\n]\r\n\r\nconst DictionarryFull = new Map();\r\nDictionarryFull.set(eth, 'Ethereum');\r\nDictionarryFull.set(powr, 'Power Ledger');\r\n\r\nconst DictionarrySymbol = new Map();\r\nDictionarrySymbol.set(eth, 'ETH');\r\nDictionarrySymbol.set(powr, 'POWR');\r\n\r\nconst DictionarryDecimals = new Map();\r\nDictionarryDecimals.set(eth, 18);\r\nDictionarryDecimals.set(powr, 8);\r\n\r\n\r\nexport { SupportedTokens, DictionarryFull, DictionarrySymbol, DictionarryDecimals };","import { DictionarrySymbol, DictionarryDecimals, DictionarryFull } from './SupportedTokens';\r\nimport Optimize from './OptimizeTokenAmount';\r\nimport Big from 'big.js';\r\n\r\nconst getScientificNotation = (decimals) => {\r\n    const number = decimals - 1;\r\n\r\n    return `10e+${number}`\r\n}\r\n\r\nexport default (token, label = '', optimize = false) => {\r\n    switch (label) {\r\n        case '': {\r\n            if (optimize)\r\n            return `${Optimize(Big(token.amount).div(getScientificNotation(DictionarryDecimals.get(token.address))).toFixed())}`;\r\n            \r\n            return `${Big(token.amount).div(getScientificNotation(DictionarryDecimals.get(token.address))).toFixed()}`;\r\n        }\r\n\r\n        case 'symbol': {\r\n            if (optimize)\r\n            return `${Optimize(Big(token.amount).div(getScientificNotation(DictionarryDecimals.get(token.address))).toFixed())} ${DictionarrySymbol.get(token.address)}`;\r\n\r\n            return `${Big(token.amount).div(getScientificNotation(DictionarryDecimals.get(token.address))).toFixed()} ${DictionarrySymbol.get(token.address)}`;\r\n        }\r\n\r\n        case 'full': {\r\n            if (optimize)\r\n            return `${Optimize(Big(token.amount).div(getScientificNotation(DictionarryDecimals.get(token.address))).toFixed())} ${DictionarryFull.get(token.address)}`;\r\n\r\n            return `${Big(token.amount).div(getScientificNotation(DictionarryDecimals.get(token.address))).toFixed()} ${DictionarryFull.get(token.address)}`;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Button, List, Label, Modal} from 'semantic-ui-react';\r\nimport BettingBox from '../../components/match/BettingBox';\r\nimport TokenBox from '../../components/match/TokenBox';\r\nimport { updatePrices, toggleErrorModal, toggleModal } from '../../redux/actions';\r\nimport CryptoPrices from '../../helpers/CryptoPrices';\r\nimport store from '../../redux/store';\r\nimport Teams from '../../components/match/Teams';\r\nimport _ from 'lodash';\r\nimport ErrorModal from '../../components/ErrorModal';\r\nimport ConfirmBetModal from '../../components/match/ConfirmBetModal';\r\n\r\nclass Match extends Component {\r\n\r\n    static async getInitialProps(props) {\r\n        const matchID = props.query.id;\r\n        \r\n        // This information will be pulled from database //\r\n        const teams = [{\r\n            name: 'Fnatic',\r\n            slug: 'fnatic',\r\n            imgUrl: `../../img/teams/fnatic.png`,\r\n            odds: 1.56\r\n        }, {\r\n            name: 'Gambit',\r\n            slug: 'gambit',\r\n            imgUrl: `../../img/teams/gambit.png`,\r\n            odds: 2.77\r\n        }];\r\n\r\n        const gameInfo = {matchID, teams};\r\n\r\n        return { gameInfo };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const prices = await CryptoPrices();\r\n        store.dispatch(updatePrices(prices))\r\n    }\r\n\r\n    handleClick(event, tokensToBet) {\r\n        event.preventDefault();\r\n        const errorHead = \"You forgot to do the following\"\r\n        const errors = [];\r\n        if (!this.props.signedIn) errors.push('Please log in to place bets.');\r\n        if (tokensToBet.length === 0) errors.push('Please place at least one token in order to place a bet.');\r\n        if (_.isEmpty(this.props.pickedTeam)) errors.push('Please pick a team.');\r\n        if (errors.length > 0) { store.dispatch(toggleErrorModal(errorHead, errors)); return; }\r\n\r\n        store.dispatch(toggleModal('confirmBetModal'));\r\n               \r\n    }\r\n\r\n    render() {\r\n        return (                \r\n            <Grid relaxed>\r\n                <ErrorModal modal={this.props.errorModal} />\r\n                <ConfirmBetModal open={this.props.confirmBetModal.isOpen} tokensToBet={this.props.tokens.toBet} pickedTeam={this.props.pickedTeam} account={this.props.account} matchID={this.props.initial.gameInfo.matchID}/>\r\n\r\n                <Grid.Column width={8}>\r\n                    <Teams teams={this.props.initial.gameInfo.teams} pickedTeam={this.props.pickedTeam} signedIn={this.props.signedIn} />\r\n                    LAST BETS:\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                    <h2>Place bet</h2>\r\n                    <BettingBox prices={this.props.prices} tokens={this.props.tokens.toBet}  />\r\n                    <div className=\"bet-container\">\r\n                        <Button onClick={(event) => this.handleClick(event, this.props.tokens.toBet)} className=\"button-bet\" size=\"large\" color=\"black\" >\r\n                            Place bet\r\n                        </Button>\r\n                        <List relaxed floated=\"right\" className=\"info-bet\">\r\n                            {this.renderBetValue(this.props.betValue)}\r\n                            {this.renderEstimatedReward(this.props.betValue)}                 \r\n                        </List>\r\n                    </div>\r\n                        <h2>Balances</h2>\r\n                    <TokenBox signedIn={this.props.signedIn} tokens={this.props.tokens.wallet} />\r\n                </Grid.Column>                             \r\n            </Grid>                \r\n        );\r\n    }\r\n\r\n    renderBetValue(betValue) {\r\n        if (this.props.tokens.toBet.length > 0)\r\n        return <List.Item><Label className=\"orange-label\" horizontal>ESTIMATED BET VALUE</Label><strong>{` ${betValue}$`}</strong></List.Item>;\r\n\r\n        return '';\r\n    }\r\n\r\n    renderEstimatedReward(betValue) {\r\n        if (this.props.tokens.toBet.length > 0 && !(_.isEmpty(this.props.pickedTeam)) )\r\n        return <List.Item><Label className=\"orange-label\" horizontal>ESTIMATED RETURN</Label><strong>{` ${(parseFloat(betValue) * this.props.pickedTeam.odds).toFixed(2)}$`}</strong></List.Item>;\r\n\r\n        return '';\r\n    }\r\n}\r\n  \r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            tokens: state.tokens,\r\n            signedIn: state.signedIn,\r\n            betValue: state.betValue,\r\n            prices: state.prices,\r\n            pickedTeam: state.pickedTeam,\r\n            errorModal: state.errorModal,\r\n            confirmBetModal: state.confirmBetModal,\r\n            account: state.account\r\n        }\r\n    \r\n  }\r\n\r\nMatch = DragDropContext(HTML5Backend)(Match);\r\n\r\nexport default Layout(connect(mapStateToProps)(Match));","export function addToken(token) {\r\n    return {\r\n        type: 'ADD_TOKEN',\r\n        token\r\n    }\r\n}\r\n\r\nexport function changeTokenPosition(token, pos) {\r\n    return {\r\n        type: 'CHANGE_POS',\r\n        token,\r\n        pos\r\n    }\r\n}\r\n\r\nexport function changeTokenAmount(token) {\r\n    return {\r\n        type: 'CHANGE_AMOUNT',\r\n        token\r\n    }\r\n}\r\n\r\nexport function updateEstimateBet(sum) {\r\n    return {\r\n        type: 'UPDATE_ESTIMATE_BET',\r\n        sum\r\n    }\r\n}\r\n\r\nexport function updatePrices(prices) {\r\n    return {\r\n        type: 'UPDATE_PRICES',\r\n        prices\r\n    }\r\n}\r\n\r\nexport function pickTeam(team) {\r\n    return {\r\n        type: 'PICK_TEAM',\r\n        team\r\n    }\r\n}\r\n\r\nexport function toggleErrorModal(head = '', reasons = []) {\r\n    return {\r\n        type: 'TOGGLE_ERROR_MODAL',\r\n        head: head,\r\n        reasons: reasons\r\n    }\r\n}\r\n\r\nexport function toggleModal(property) {\r\n    return {\r\n        type: 'TOGGLE_MODAL',\r\n        property\r\n    }\r\n}","import _ from 'lodash';\r\nimport EstimateBetValue from '../helpers/EstimateBetValue';\r\n\r\nconst initialState = {tokens: {toBet: [], wallet: []}, account: '', signedIn: false, prices: {}, betValue: 0, pickedTeam: {}, errorModal: {isOpen: false, head: '', reasons: [] }, confirmBetModal: {isOpen: false}};\r\n\r\nconst matchReducer = (state = initialState, action) => {\r\n    let newState = _.cloneDeep(state);\r\n\r\n    switch(action.type) {               \r\n        case 'ADD_TOKEN': {\r\n            if (newState.tokens.wallet.some( (curr) => curr.address == action.token.address) ) return;\r\n            if (newState.tokens.toBet.some( (curr) => curr.address == action.token.address) ) return;\r\n           \r\n            newState.tokens.wallet.push(action.token);\r\n            \r\n            break;\r\n        }  \r\n\r\n        case 'CHANGE_POS': {\r\n            console.log(action.token, state)          \r\n            if (action.token.position === 'balance-box') {\r\n                action.token.position = action.pos;\r\n                newState.tokens.toBet.push(action.token);\r\n                newState.tokens.wallet = newState.tokens.wallet.filter((curr) => curr.address != action.token.address);\r\n            } else {\r\n                action.token.position = 'balance-box';\r\n                action.token.amount = action.token.initialAmount;\r\n                newState.tokens.wallet.push(action.token);\r\n                newState.tokens.toBet = newState.tokens.toBet.filter((curr) => curr.address != action.token.address);           \r\n            }\r\n\r\n            newState.betValue = EstimateBetValue(newState.tokens.toBet, newState.prices, false);\r\n\r\n            break;\r\n        }\r\n\r\n        case 'LOG_OUT': {\r\n            newState = {...initialState};\r\n            newState.prices = state.prices;\r\n            console.log('Logged out! State is now: ', newState);\r\n            break;\r\n        }  \r\n\r\n        case 'LOG_IN': {\r\n            console.log('Loggin in...');\r\n            newState.account = action.account;\r\n            newState.signedIn = true;\r\n            console.log('Logging in! State is now: ', newState);\r\n            break;\r\n        }\r\n\r\n        case 'UPDATE_PRICES': {\r\n            newState.prices = action.prices;\r\n            break;\r\n        }\r\n\r\n        case 'UPDATE_ESTIMATE_BET': {\r\n            newState.betValue = action.sum;\r\n            break;\r\n        }\r\n\r\n        case 'PICK_TEAM': {\r\n            newState.pickedTeam = action.team;\r\n            break;\r\n        }\r\n\r\n        case 'TOGGLE_MODAL': {\r\n            newState[action.property].isOpen = !newState[action.property].isOpen;\r\n            break;\r\n        }\r\n\r\n        case 'TOGGLE_ERROR_MODAL': {\r\n            newState.errorModal.isOpen = !state.errorModal.isOpen;\r\n            newState.errorModal.head = action.head;\r\n            newState.errorModal.reasons = action.reasons;\r\n            break;\r\n        }\r\n\r\n\r\n\r\n    }\r\n    \r\n    return newState;\r\n}\r\n\r\nexport default matchReducer;","import reducer from './reducers';\r\nimport { createStore } from 'redux';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"big.js\");","module.exports = require(\"lodash\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-blockies\");","module.exports = require(\"react-dnd\");","module.exports = require(\"react-dnd-html5-backend\");","module.exports = require(\"react-rangeslider\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"web3\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AAjCA;AACA;AAmCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAwBA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAIA;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAYA;AAEA;AACA;AAfA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAuCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","sourceRoot":""}